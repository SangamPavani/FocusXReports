<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="112" total="483" passed="371">
  <reporter-output>
    <line>
      <![CDATA[About to begin executing Suite Suite]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.openBrowser]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.openBrowser]]>
    </line>
    <line>
      <![CDATA[About to begin executing Test Test]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.intialiseReports]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.intialiseReports]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : URLBrowserTest.verifyBrowserOpen]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : URLBrowserTest.verifyBrowserOpen]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.URLBrowserTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : URLBrowserTest.checkLoginPageTitleByURLInputInBrowser]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : URLBrowserTest.checkLoginPageTitleByURLInputInBrowser]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.URLBrowserTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : LoginPageTest.checkLoginPageAvailablityOfFields]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : LoginPageTest.checkLoginPageAvailablityOfFields]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.LoginPageTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : LoginPageTest.checkCompanyTextDisplayInCompanyListDropdown]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : LoginPageTest.checkCompanyTextDisplayInCompanyListDropdown]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.LoginPageTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : LoginPageTest.checkSignInBtnWithValidUserNameAndValidPassword]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : LoginPageTest.checkSignInBtnWithValidUserNameAndValidPassword]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.LoginPageTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : LoginPageTest.checkUserNameInfoInHomePage]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : LoginPageTest.checkUserNameInfoInHomePage]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.LoginPageTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkAccountGroupsListinStockMovement]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkAccountGroupsListinStockMovement]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkItemGroupAccountinStockMovementReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkItemGroupAccountinStockMovementReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkGroupItemsinStockMovement]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkGroupItemsinStockMovement]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkItemQueryReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkItemQueryReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkStockLedgerReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkStockLedgerReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkStockLedgerCustomizationReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkStockLedgerCustomizationReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkStockLedgerReportWithMovedItemsOnlyAndIncludeServiceTypeItemsCheckBoxs]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkStockLedgerReportWithMovedItemsOnlyAndIncludeServiceTypeItemsCheckBoxs]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkStockLedgerReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkStockLedgerReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkOpeningStockRegisterReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkOpeningStockRegisterReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkOpeningStockRegisterReportFilterOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkOpeningStockRegisterReportFilterOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkOpeningStockRegisterReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkOpeningStockRegisterReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkStockStatementReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkStockStatementReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkStockStatementReportPrintOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkStockStatementReportPrintOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkStockStatementReportWithIncludeServiceTypeItem]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkStockStatementReportWithIncludeServiceTypeItem]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkStockMovementReports]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkStockMovementReports]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkStockMovementReportsWithStockMovementByWarehouseAndIncludeServiceTypeItemOptions]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkStockMovementReportsWithStockMovementByWarehouseAndIncludeServiceTypeItemOptions]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkStockMovementReportWithFilterOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkStockMovementReportWithFilterOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkStockMovementReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkStockMovementReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkMultiLevelStockMovementReports]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkMultiLevelStockMovementReports]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkMultiLevelStockMovementReportFilterOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkMultiLevelStockMovementReportFilterOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkMultiLevelStockMovementReportWithIncludeServiceTypeItemOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkMultiLevelStockMovementReportWithIncludeServiceTypeItemOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkMultiLevelStockMovementReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkMultiLevelStockMovementReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkVirtualStockAnalysisReports]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkVirtualStockAnalysisReports]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkVirtualStockAnalysisReportWithIncludeServiceTypeItemOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkVirtualStockAnalysisReportWithIncludeServiceTypeItemOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkVirtualStockAnalysisReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkVirtualStockAnalysisReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkStockValuationReports]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkStockValuationReports]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkStockValuationCustomizationReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkStockValuationCustomizationReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkStockValuationReportWithStockValuationDisplayLinearReportIncludeServiceTypeItemOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkStockValuationReportWithStockValuationDisplayLinearReportIncludeServiceTypeItemOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkStockValuationReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkStockValuationReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkStockReportbyTagReports]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkStockReportbyTagReports]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkStockReportbyTagReportPrintOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkStockReportbyTagReportPrintOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkStockReportbyTagReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkStockReportbyTagReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkABCAnalysisReports]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkABCAnalysisReports]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkABCAnalysisReportWithClassificationAndCriteriaOptions]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkABCAnalysisReportWithClassificationAndCriteriaOptions]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkStockAnalysisByBatchReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkStockAnalysisByBatchReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkStockAnalysisByBatchReportFilterOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkStockAnalysisByBatchReportFilterOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkStockAnalysisByBatchReportWithStockTypeGoodBatches]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkStockAnalysisByBatchReportWithStockTypeGoodBatches]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkStockAnalysisByBatchReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkStockAnalysisByBatchReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkStockAnalysisByRmaReports]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkStockAnalysisByRmaReports]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkStockAnalysisByRmaReportsPrintOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkStockAnalysisByRmaReportsPrintOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkStockDetailsByBinsReports]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkStockDetailsByBinsReports]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkStockDetailsByBinsReportFilterOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkStockDetailsByBinsReportFilterOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkStockDetailsByBinsReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkStockDetailsByBinsReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkStockBalanaceByBinsReports]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkStockBalanaceByBinsReports]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkStockBalanaceByBinsReportFilterOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkStockBalanaceByBinsReportFilterOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkStockBalanaceByBinsReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkStockBalanaceByBinsReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkStockBalancesByItemByBinsReports]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkStockBalancesByItemByBinsReports]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkStockBalancesByItemByBinsReportPrintOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkStockBalancesByItemByBinsReportPrintOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkExpiredStockByBinsReports]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkExpiredStockByBinsReports]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkExpiredStockByBinsReportCustomizationOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkExpiredStockByBinsReportCustomizationOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkStockBalanceByWarehouseReports]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkStockBalanceByWarehouseReports]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkStockBalanceByWarehouseReportIncludeServiceTypeItemOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkStockBalanceByWarehouseReportIncludeServiceTypeItemOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkStockBalanceByWarehouseReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkStockBalanceByWarehouseReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkStockAgeingAnalysisReports]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkStockAgeingAnalysisReports]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkStockAgeingAnalysisReportFilterOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkStockAgeingAnalysisReportFilterOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkStockAgeingAnalysisReportWithOptions]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkStockAgeingAnalysisReportWithOptions]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkStockAgeingAnalysisReportWithBackTrackOptions]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkStockAgeingAnalysisReportWithBackTrackOptions]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkAgeingAnalysisByBatchReports]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkAgeingAnalysisByBatchReports]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkStockAnalysisByBatchReportPrintOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkStockAnalysisByBatchReportPrintOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkAgeingAnalysisByBatchReportWithWarehouseAndIgnoreInternalTransferForAgeingOptions]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkAgeingAnalysisByBatchReportWithWarehouseAndIgnoreInternalTransferForAgeingOptions]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkAgeingAnalysisByBatchReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkAgeingAnalysisByBatchReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkAgeingAnalysisByRMAReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkAgeingAnalysisByRMAReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkAgeingAnalysisByRMAReportWithFilterOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkAgeingAnalysisByRMAReportWithFilterOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkAgeingAnalysisByRMAReportWithWarehouseAndIgnoreInternalTransferForAgeingOptions]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkAgeingAnalysisByRMAReportWithWarehouseAndIgnoreInternalTransferForAgeingOptions]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkAgeingAnalysisByRMAReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkAgeingAnalysisByRMAReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkAgeingStockByBinsReports]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkAgeingStockByBinsReports]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkStockAnalysisByBinReportWithFilterOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkStockAnalysisByBinReportWithFilterOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkAgeingAnalysisByBinReportWithWarehouseAndIgnoreInternalTransferForAgeingOptions]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkAgeingAnalysisByBinReportWithWarehouseAndIgnoreInternalTransferForAgeingOptions]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkAgeingAnalysisByBinReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkAgeingAnalysisByBinReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkAgeingByItemByBinsReports]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkAgeingByItemByBinsReports]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkStockByItemByBinReportWithFilterOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkStockByItemByBinReportWithFilterOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkAgeingByItemByBinReportWithWarehouseAndIgnoreInternalTransferForAgeingOptions]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkAgeingByItemByBinReportWithWarehouseAndIgnoreInternalTransferForAgeingOptions]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkAgeingByItemByBinReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkAgeingByItemByBinReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkFastMovingItemsReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkFastMovingItemsReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkFastMovingItemsReportWithFilterOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkFastMovingItemsReportWithFilterOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkFastMovingItemsReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkFastMovingItemsReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkSlowMovingItemsReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkSlowMovingItemsReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkSlowMovingItemsReportWithFilterOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkSlowMovingItemsReportWithFilterOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkSlowMovingItemsReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkSlowMovingItemsReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkPeakAndLowBalancesReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkPeakAndLowBalancesReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkPeakAndLowBalancesReportWithFilterOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkPeakAndLowBalancesReportWithFilterOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkPeakAndLowBalancesReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkPeakAndLowBalancesReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkBestSellingItemReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkBestSellingItemReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkBestSellingItemReportWithSortingOnAndIncludeAllVouchersChkBox]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkBestSellingItemReportWithSortingOnAndIncludeAllVouchersChkBox]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkBestSellingItemReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkBestSellingItemReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkStockTransferRegisterReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkStockTransferRegisterReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkStockTransferRegisterReportPrintOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkStockTransferRegisterReportPrintOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkStockTransferRegisterReportWithFromAndToWarehouseAndDetailsOptions]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkStockTransferRegisterReportWithFromAndToWarehouseAndDetailsOptions]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkStockTransferRegisterReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkStockTransferRegisterReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkStockReservationRegisterReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkStockReservationRegisterReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkStockReservationRegisterReportWithFilterOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkStockReservationRegisterReportWithFilterOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkStockReservationRegisterReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkStockReservationRegisterReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkTransactionTypeWiseStockReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkTransactionTypeWiseStockReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkTransactionTypeWiseStockReportWithFilterOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkTransactionTypeWiseStockReportWithFilterOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkTransactionTypeWiseStockReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkTransactionTypeWiseStockReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkActualConsumptionReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkActualConsumptionReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkActualConsumptionReportWithFilterOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkActualConsumptionReportWithFilterOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkActualConsumptionReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkActualConsumptionReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkLoginWithUserForItemRestriction]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkLoginWithUserForItemRestriction]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkStockReportbyTagReportsWithUserForItemRestriction]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkStockReportbyTagReportsWithUserForItemRestriction]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkLoginWithSU]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkLoginWithSU]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkRaiseIndentItemwithLowStockReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkRaiseIndentItemwithLowStockReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkRaiseRequestForQuoteReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkRaiseRequestForQuoteReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkGeneralLedgerandInventoryMismatchReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkGeneralLedgerandInventoryMismatchReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkNegativeBatchListReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkNegativeBatchListReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkStockLedgerOutputDropdownwithPrinterasOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkStockLedgerOutputDropdownwithPrinterasOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkStockLedgerOutputDropdownasPrintDraftModeOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkStockLedgerOutputDropdownasPrintDraftModeOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.ckeckStockLedgerOutputDropdownwithExcelSheetOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.ckeckStockLedgerOutputDropdownwithExcelSheetOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.ckeckStockLedgerOutputDropdownwithExcelCSVOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.ckeckStockLedgerOutputDropdownwithExcelCSVOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkStockLedgerOutputDropdownasFilePathOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkStockLedgerOutputDropdownasFilePathOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : InventoryReportsTest.checkLogoutAndLoginWithSU]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : InventoryReportsTest.checkLogoutAndLoginWithSU]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkLoginTOAutomationCompany]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkLoginTOAutomationCompany]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkFinanacialLedgerReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkFinanacialLedgerReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkLedgerReportWithAllCheckBoxesEnable]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkLedgerReportWithAllCheckBoxesEnable]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkBacktrackinLedgerReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkBacktrackinLedgerReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkLedgerDetailsreport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkLedgerDetailsreport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkLedgerDetailreportWithAllCheckBoxesEnable]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkLedgerDetailreportWithAllCheckBoxesEnable]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkBacktrackinLedgerDetailReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkBacktrackinLedgerDetailReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkLedgerDetailReportPrintOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkLedgerDetailReportPrintOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkSubledgerReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkSubledgerReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkCustomizationInSubLedgerReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomizationInSubLedgerReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkBacktrackInSUBLedgerDetailReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkBacktrackInSUBLedgerDetailReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkCashAndBankReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkCashAndBankReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkBankBookReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkBankBookReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkBacktrackInBankReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkBacktrackInBankReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkPrintOptionInBankReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkPrintOptionInBankReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkPettyCashBookReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkPettyCashBookReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkDayBookReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkDayBookReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkBankReconciliationReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkBankReconciliationReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkBankReconciliationImportOptions]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkBankReconciliationImportOptions]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkCustomerVendorReconciliationReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomerVendorReconciliationReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkBankReconciliationStatementReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkBankReconciliationStatementReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkBacktrackInBankReconciationReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkBacktrackInBankReconciationReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkPrintOptionBankReconciliationStatementReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkPrintOptionBankReconciliationStatementReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkChequeDiscountingReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkChequeDiscountingReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkSalesRegisterReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkSalesRegisterReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkSalesRegisterCustomizationAndReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkSalesRegisterCustomizationAndReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkBacktrackinSalesRegisterReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkBacktrackinSalesRegisterReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkSalesReturnRegisterReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkSalesReturnRegisterReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkBacktrackinSalesReturnRegisterReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkBacktrackinSalesReturnRegisterReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkPrintOptionSalesReturnRegisterReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkPrintOptionSalesReturnRegisterReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkSummarySalesBookReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkSummarySalesBookReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkBacktrackInSummarySalesBookReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkBacktrackInSummarySalesBookReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkPrintOptionSummarySalesBookReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkPrintOptionSummarySalesBookReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkMonthlySalesBookReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkMonthlySalesBookReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTopCustomerListReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTopCustomerListReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkPrintOptionTopCustomerListReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkPrintOptionTopCustomerListReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkPurchaseRegisterReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkPurchaseRegisterReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkBacktrackinPurchaserRegisterReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkBacktrackinPurchaserRegisterReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkPrintOptionPurchaseRegisterReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkPrintOptionPurchaseRegisterReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkPurchaseReturnRegisterReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkPurchaseReturnRegisterReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkSummaryPurchaseBookReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkSummaryPurchaseBookReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkBacktrackinSummaryPurchaseBookrReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkBacktrackinSummaryPurchaseBookrReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkPrintOptionSummaryPurchaseBookReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkPrintOptionSummaryPurchaseBookReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkVatPurchaseAccountReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkVatPurchaseAccountReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkCustomizeOptionInVatPurchaseAccountReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomizeOptionInVatPurchaseAccountReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkBacktrackinVATPurchaseAccountReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkBacktrackinVATPurchaseAccountReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkVatDetailedReportReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkVatDetailedReportReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkBacktrackinVatDetailReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkBacktrackinVatDetailReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkSalesAccountReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkSalesAccountReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkBacktrackinSalesAccountReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkBacktrackinSalesAccountReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkSalesByCustomerReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkSalesByCustomerReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkVatSummaryReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkVatSummaryReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkVatAuditFileReportOptions]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkVatAuditFileReportOptions]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkVatReturnReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkVatReturnReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkSalesAdvanceVatReportOptions]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkSalesAdvanceVatReportOptions]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkBacktrackinSalesSalesAdvanceVAtReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkBacktrackinSalesSalesAdvanceVAtReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkOpeningBalanceRegisterReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkOpeningBalanceRegisterReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkBacktrackinOpeningBalanceRegisterReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkBacktrackinOpeningBalanceRegisterReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkJournalEntriesRegisterOptions]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkJournalEntriesRegisterOptions]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkBacktrackinJournalEntriesRegisterReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkBacktrackinJournalEntriesRegisterReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkCreditNoteRegisterOptions]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkCreditNoteRegisterOptions]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkBacktrackinCreditNoteRegisterReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkBacktrackinCreditNoteRegisterReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkDebitNoteRegisterReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkDebitNoteRegisterReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkBacktrackinDebitNoteRegisterReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkBacktrackinDebitNoteRegisterReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkReceiptRegisterReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkReceiptRegisterReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkBacktrackinReceiptRegisterReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkBacktrackinReceiptRegisterReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkPaymentRegisterOptions]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkPaymentRegisterOptions]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkBacktrackinPaymentRegisterReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkBacktrackinPaymentRegisterReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkPdcReceiptsRegisterReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkPdcReceiptsRegisterReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkBacktrackinPdcReceiptsReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkBacktrackinPdcReceiptsReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkPdcPaymentsRegisterReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkPdcPaymentsRegisterReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkBacktrackinPdcPaymentsReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkBacktrackinPdcPaymentsReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkEntryJournalRegisterReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkEntryJournalRegisterReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkBacktrackinEntryJournalReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkBacktrackinEntryJournalReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkEntryJournalDetailReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkEntryJournalDetailReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkBacktrackinEntryJournalDetailReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkBacktrackinEntryJournalDetailReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checksalesGroupedByCustomerReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checksalesGroupedByCustomerReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkBacktrackinSalesGroupedByCustomerReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkBacktrackinSalesGroupedByCustomerReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkSalesGroupedByProductReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkSalesGroupedByProductReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkSalesGroupedByDepartmentReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkSalesGroupedByDepartmentReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkPurchasesGroupedByVendorOptions]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkPurchasesGroupedByVendorOptions]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkBacktrackinSalesGroupedByVendorReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkBacktrackinSalesGroupedByVendorReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkPurchasesGroupedByProductReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkPurchasesGroupedByProductReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkPurchasesGroupedByDepartmentReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkPurchasesGroupedByDepartmentReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkCustomisationOptionINPurchasesGroupedByDepartmentReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomisationOptionINPurchasesGroupedByDepartmentReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkMiscellaneousAnalysispeakAndLowBalancesReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkMiscellaneousAnalysispeakAndLowBalancesReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkBacktrackinPeakAndLowBalanceReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkBacktrackinPeakAndLowBalanceReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkComprativeAnalysisOptions]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkComprativeAnalysisOptions]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkBackTrackInComparativeAnalysis]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkBackTrackInComparativeAnalysis]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTransactionsTypeAnalysisReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTransactionsTypeAnalysisReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkBackTrackInTransactionsTypeAnalysis]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkBackTrackInTransactionsTypeAnalysis]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkAbcAnalysisReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkAbcAnalysisReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkSortingOptionInAbcAnalysisReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkSortingOptionInAbcAnalysisReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkBacktrackinABCAnalysisReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkBacktrackinABCAnalysisReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkInterestCalculationReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkInterestCalculationReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkBacktrackinInterestCalculationReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkBacktrackinInterestCalculationReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkMastersInformationMenuReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkMastersInformationMenuReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkProductLabelReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkProductLabelReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkUnitConversionReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkUnitConversionReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkSkidDefinitionReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkSkidDefinitionReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkAuditTrailTransactionsReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkAuditTrailTransactionsReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkAuditTrailLoginsReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkAuditTrailLoginsReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkAccountQueryOptions]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkAccountQueryOptions]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTransactionAuthorizationReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTransactionAuthorizationReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkMasterAuthorizationReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkMasterAuthorizationReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrailBalanceReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrailBalanceReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrailBalanceReportPrintOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrailBalanceReportPrintOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkBackTrackInTrailBalance]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkBackTrackInTrailBalance]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkProfitAndLossReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkProfitAndLossReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkProfitAndLossPrintOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkProfitAndLossPrintOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkBackTrackInProfitAndLossReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkBackTrackInProfitAndLossReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTradingAccountOptions]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTradingAccountOptions]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkBackTrackInTradingAccount]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkBackTrackInTradingAccount]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTradingAndProfitAndLossReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTradingAndProfitAndLossReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkPrintOptionInTradingAndProfitAndLossReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkPrintOptionInTradingAndProfitAndLossReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkBackTrackInTradingAndProfitAndLoss]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkBackTrackInTradingAndProfitAndLoss]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkBalanceSheetOptions]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkBalanceSheetOptions]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkCustomizationAndPrintOptionInBalanceSheetReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomizationAndPrintOptionInBalanceSheetReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkBackTrackInBalanceSheet]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkBackTrackInBalanceSheet]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkFinalAccountsSchedulesReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkFinalAccountsSchedulesReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkCustomizationAndPrintOptionInFinalAccSchedule]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomizationAndPrintOptionInFinalAccSchedule]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkBackTrackInSchedules]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkBackTrackInSchedules]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkFundFlowReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkFundFlowReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkCustomizationAndPrintOptionInunfFlowReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomizationAndPrintOptionInunfFlowReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkBackTrackInFundFlow]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkBackTrackInFundFlow]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkCashFlowReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkCashFlowReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkCustomizationAndPrintOptionInCashFlowReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomizationAndPrintOptionInCashFlowReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkCashFLowAnalysisReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkCashFLowAnalysisReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkCustomizationAndPrintOptionInCashFlowAnalysis]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomizationAndPrintOptionInCashFlowAnalysis]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkBackTrackInCashFlowAnalysis]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkBackTrackInCashFlowAnalysis]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkAdvanceCashFLowReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkAdvanceCashFLowReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkIncomeExpenseTrendReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkIncomeExpenseTrendReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkReceavibleAndPayableReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkReceavibleAndPayableReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkCustomizationAndPrintOptionInRecevibleAndPayableReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomizationAndPrintOptionInRecevibleAndPayableReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkBackTrackInReceavibleAndPayable]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkBackTrackInReceavibleAndPayable]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkCustomerListingOfOutstandingBillsReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomerListingOfOutstandingBillsReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.CheckFilterAndPrintOptionnInCustomerListingOfOutstandingBillsReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.CheckFilterAndPrintOptionnInCustomerListingOfOutstandingBillsReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.CheckCustomerListingOfOutstandingBillsReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.CheckCustomerListingOfOutstandingBillsReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkCustomerStatementReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomerStatementReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.CheckFilterAndPrintOptionnInCustomerStatements]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.CheckFilterAndPrintOptionnInCustomerStatements]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkCustomerStatementReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomerStatementReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkCustomerDueDateAnalysisReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomerDueDateAnalysisReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.CheckFilterAndPrintOptionnInCustomerDueDateAnalysis]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.CheckFilterAndPrintOptionnInCustomerDueDateAnalysis]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkCustomerDueDateAnalysisBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomerDueDateAnalysisBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkCustomerAgeingDetailsAnalysisReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomerAgeingDetailsAnalysisReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.CheckFilterAndPrintOptionnInCustomerAgeingDetailsAnalysis]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.CheckFilterAndPrintOptionnInCustomerAgeingDetailsAnalysis]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.CheckCustomerAgeingDetailsAnalysisBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.CheckCustomerAgeingDetailsAnalysisBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkCustomerAgeingDetailsByDueDateReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomerAgeingDetailsByDueDateReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.CheckFilterAndPrintOptionnInCustomerAgeingDetailsDueDate]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.CheckFilterAndPrintOptionnInCustomerAgeingDetailsDueDate]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.CheckCustomerAgeingDetailsDueDateBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.CheckCustomerAgeingDetailsDueDateBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkCustomerOverDueAnalysisReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomerOverDueAnalysisReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.CheckFilterAndPrintOptionnInCustomerOverDueAnalysis]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.CheckFilterAndPrintOptionnInCustomerOverDueAnalysis]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.CheckCustomerOverDueAnalysisBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.CheckCustomerOverDueAnalysisBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkcustomerSummaryCustomerAgeingSummaryReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkcustomerSummaryCustomerAgeingSummaryReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkCustomerSummaryCustomerAgeingSummaryReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomerSummaryCustomerAgeingSummaryReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkcustomerSummaryAgeingByDueDateReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkcustomerSummaryAgeingByDueDateReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkCustomerSummaryAgeingByDueDateReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomerSummaryAgeingByDueDateReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkcustomerSummaryCustomerOverDueSummeryReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkcustomerSummaryCustomerOverDueSummeryReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkCustomerSummaryCustomerOverDueSummeryReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomerSummaryCustomerOverDueSummeryReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkcustomerSummaryCustomerBillWiseSummeryReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkcustomerSummaryCustomerBillWiseSummeryReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkCustomerSummaryCustomerBillWiseSummeryReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomerSummaryCustomerBillWiseSummeryReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkVendorListingOfOutstandingBillsReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkVendorListingOfOutstandingBillsReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.CheckPrintAndCustomiseOptionnInVendorListingOfOutstandingBillsReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.CheckPrintAndCustomiseOptionnInVendorListingOfOutstandingBillsReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkFilterOptionInVendorListingOfOutstandingBillsReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkFilterOptionInVendorListingOfOutstandingBillsReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkVendorListingOfOutstandingBillsReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkVendorListingOfOutstandingBillsReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkvendorDetailsVendorStatementsReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkvendorDetailsVendorStatementsReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.CheckPrintAndCustomiseOptionnInvendorDetailsVendorStatementsReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.CheckPrintAndCustomiseOptionnInvendorDetailsVendorStatementsReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkVendorDetailsVendorStatementsReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkVendorDetailsVendorStatementsReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkvendorDetailsVendorDueDateAnalysisReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkvendorDetailsVendorDueDateAnalysisReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.CheckPrintAndCustomiseOptionnInvendorDetailsVendorDueDateAnalysisReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.CheckPrintAndCustomiseOptionnInvendorDetailsVendorDueDateAnalysisReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkVendorDetailsVendorDueDateAnalysisReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkVendorDetailsVendorDueDateAnalysisReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkVendorDetailsVendorAgeingDetailsReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkVendorDetailsVendorAgeingDetailsReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.CheckPrintAndCustomiseOptionnInVendorDetailsVendorAgeingDetailsReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.CheckPrintAndCustomiseOptionnInVendorDetailsVendorAgeingDetailsReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkVendorDetailsVendorAgeingReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkVendorDetailsVendorAgeingReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkVendorDetailsVendorDetailsAgeingByDueDateReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkVendorDetailsVendorDetailsAgeingByDueDateReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.CheckPrintAndCustomiseOptionnInvendorDetailsVendorDetailsAgeingByDueDateReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.CheckPrintAndCustomiseOptionnInvendorDetailsVendorDetailsAgeingByDueDateReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkVendorDetailsAgeingByDueDateReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkVendorDetailsAgeingByDueDateReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkVendorDetailsVendorOverdueAnalysisReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkVendorDetailsVendorOverdueAnalysisReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.CheckPrintAndCustomiseOptionnInVendorDetailsVendorOverdueAnalysisReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.CheckPrintAndCustomiseOptionnInVendorDetailsVendorOverdueAnalysisReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkVendorOverdueAnalysisReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkVendorOverdueAnalysisReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkVendorSummeryVendorAgeingSummaryReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkVendorSummeryVendorAgeingSummaryReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkSummeryVendorAgeingSummaryReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkSummeryVendorAgeingSummaryReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkVendorSummeryVendorSummaryAgeingByDueDateReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkVendorSummeryVendorSummaryAgeingByDueDateReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkVendorSummeryVendorSummaryAgeingByDueDateReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkVendorSummeryVendorSummaryAgeingByDueDateReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkVendorSummeryVendorOverdueSummaryReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkVendorSummeryVendorOverdueSummaryReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkVendorVendorSummeryVendorOverdueSummaryReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkVendorVendorSummeryVendorOverdueSummaryReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkVendorSummeryVendorBillWiseSummaryReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkVendorSummeryVendorBillWiseSummaryReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkVendorSummeryVendorBillwiseSummaryReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkVendorSummeryVendorBillwiseSummaryReportBackTrackOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrailBalanceReportwithFilterOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrailBalanceReportwithFilterOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrailBalanceAnalyzeOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrailBalanceAnalyzeOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrailBalanceAnalyzeReportExportExcelOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrailBalanceAnalyzeReportExportExcelOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrailBalanceAnalyzeReportExportPDFOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrailBalanceAnalyzeReportExportPDFOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrailBalanceAnalyzeReportPrintOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrailBalanceAnalyzeReportPrintOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrailBalanceAnalyzeReportSaveOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrailBalanceAnalyzeReportSaveOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrailBalanceAnalyzeOptionwithoutFilter]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrailBalanceAnalyzeOptionwithoutFilter]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkLoginWithUserAllOptionsST]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkLoginWithUserAllOptionsST]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrailBalanceReportwithFilterOptionWithUserAllOptionsST]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrailBalanceReportwithFilterOptionWithUserAllOptionsST]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrailBalanceAnalyzeOptionWithUserAllOptionsST]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrailBalanceAnalyzeOptionWithUserAllOptionsST]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrailBalanceAnalyzeReportExportExcelOptionWithUserAllOptionsST]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrailBalanceAnalyzeReportExportExcelOptionWithUserAllOptionsST]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrailBalanceAnalyzeReportExportPDFOptionWithUserAllOptionsST]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrailBalanceAnalyzeReportExportPDFOptionWithUserAllOptionsST]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrailBalanceAnalyzeReportPrintOptionWithUserAllOptionsST]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrailBalanceAnalyzeReportPrintOptionWithUserAllOptionsST]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrailBalanceAnalyzeReportSaveOptionWithUserAllOptionsST]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrailBalanceAnalyzeReportSaveOptionWithUserAllOptionsST]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkSavedReportatUserAllOptionsST]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkSavedReportatUserAllOptionsST]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkLoginWithSU]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkLoginWithSU]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkProfitAndLossReportwithFilterOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkProfitAndLossReportwithFilterOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkProfitLossAnalyzeOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkProfitLossAnalyzeOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkProfitLossAnalyzeReportExportExcelOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkProfitLossAnalyzeReportExportExcelOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkProfitLossAnalyzeReportExportPDFOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkProfitLossAnalyzeReportExportPDFOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkProfitLossAnalyzeReportPrintOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkProfitLossAnalyzeReportPrintOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkProfitLossAnalyzeReportSaveOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkProfitLossAnalyzeReportSaveOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkProfitLossReportwithtakingfilterOptionasNotEqualTo]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkProfitLossReportwithtakingfilterOptionasNotEqualTo]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkBalanceSheetReportwithFilterOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkBalanceSheetReportwithFilterOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkBalanceSheetAnalyzeOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkBalanceSheetAnalyzeOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkBalanceSheetAnalyzeReportExportExcelOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkBalanceSheetAnalyzeReportExportExcelOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkBalanceSheetAnalyzeReportExportPDFOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkBalanceSheetAnalyzeReportExportPDFOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkBalanceSheetAnalyzeReportPrintOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkBalanceSheetAnalyzeReportPrintOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkBalanceSheetAnalyzeReportSaveOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkBalanceSheetAnalyzeReportSaveOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkCustomerAgeingSummaryReportwithFilterOptionincludeMontlyAgeingChkBox]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomerAgeingSummaryReportwithFilterOptionincludeMontlyAgeingChkBox]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkCustomerAgeingSummaryReportwithFilterOptionasAccountWithoutIncludeMothlyAgeingChkBox]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomerAgeingSummaryReportwithFilterOptionasAccountWithoutIncludeMothlyAgeingChkBox]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkCustomerSummaryByDueDatewithFilterOptionincludeMonthlyAgeingChkBox]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomerSummaryByDueDatewithFilterOptionincludeMonthlyAgeingChkBox]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkLoginWithUserAllOptionsSTforCustomer]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkLoginWithUserAllOptionsSTforCustomer]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkCustomerAgeingSummaryReportwithFilterOptionincludeMontlyAgeingChkBoxWithUserAllOptionsST]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomerAgeingSummaryReportwithFilterOptionincludeMontlyAgeingChkBoxWithUserAllOptionsST]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkCustomerAgeingSummaryReportwithFilterOptionasAccountWithoutIncludeMothlyAgeingChkBoxWithUserAllOptionsST]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomerAgeingSummaryReportwithFilterOptionasAccountWithoutIncludeMothlyAgeingChkBoxWithUserAllOptionsST]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkCustomerSummaryByDueDatewithFilterOptionincludeMonthlyAgeingChkBoxWithUserAllOptionsST]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomerSummaryByDueDatewithFilterOptionincludeMonthlyAgeingChkBoxWithUserAllOptionsST]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkCustomerStatementHeaderFieldsBeforeCustomization]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomerStatementHeaderFieldsBeforeCustomization]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkCustomerStatementwithCustomizationLevelFieldsReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomerStatementwithCustomizationLevelFieldsReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkAddingLevelFieldsunderCustomization]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkAddingLevelFieldsunderCustomization]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkCustomerStatementHeaderDetailsAfterCustomization]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomerStatementHeaderDetailsAfterCustomization]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkLoginUserAllOptionsST]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkLoginUserAllOptionsST]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkProfitAndLossReportwithFilterOptionatUserAllOptionsST]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkProfitAndLossReportwithFilterOptionatUserAllOptionsST]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkProfitLossAnalyzeOptionatUserAllOptionsST]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkProfitLossAnalyzeOptionatUserAllOptionsST]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkProfitLossAnalyzeReportExportExcelOptionatUserAllOptionsST]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkProfitLossAnalyzeReportExportExcelOptionatUserAllOptionsST]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkProfitLossAnalyzeReportExportPDFOptionatUserAllOptionsST]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkProfitLossAnalyzeReportExportPDFOptionatUserAllOptionsST]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkProfitLossAnalyzeReportPrintOptionatUserAllOptionsST]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkProfitLossAnalyzeReportPrintOptionatUserAllOptionsST]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkProfitLossAnalyzeReportSaveOptionatUserAllOptionsST]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkProfitLossAnalyzeReportSaveOptionatUserAllOptionsST]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkBalanceSheetReportwithFilterOptionatUserAllOptionsST]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkBalanceSheetReportwithFilterOptionatUserAllOptionsST]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkBalanceSheetAnalyzeOptionatUserAllOptionsST]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkBalanceSheetAnalyzeOptionatUserAllOptionsST]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkBalanceSheetAnalyzeReportExportExcelOptionatUserAllOptionsST]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkBalanceSheetAnalyzeReportExportExcelOptionatUserAllOptionsST]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkBalanceSheetAnalyzeReportExportPDFOptionatUserAllOptionsST]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkBalanceSheetAnalyzeReportExportPDFOptionatUserAllOptionsST]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkBalanceSheetAnalyzeReportPrintOptionatUserAllOptionsST]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkBalanceSheetAnalyzeReportPrintOptionatUserAllOptionsST]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkBalanceSheetAnalyzeReportSaveOptionatUserAllOptionsST]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkBalanceSheetAnalyzeReportSaveOptionatUserAllOptionsST]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkLoginWithSUAgain]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkLoginWithSUAgain]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkFinanacialLedgerReportwithDateRangeasCurrentMonth]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkFinanacialLedgerReportwithDateRangeasCurrentMonth]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkFinanacialLedgerReportwithDateRangeasPreviousMonth]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkFinanacialLedgerReportwithDateRangeasPreviousMonth]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkFinanacialLedgerReportwithDateRangeasCurrentWeek]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkFinanacialLedgerReportwithDateRangeasCurrentWeek]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkFinanacialLedgerReportwithDateRangeasPreviousWeek]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkFinanacialLedgerReportwithDateRangeasPreviousWeek]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkFinanacialLedgerReportwithDateRangeasToday]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkFinanacialLedgerReportwithDateRangeasToday]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkFinanacialLedgerReportwithDateRangeasCurrentYear]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkFinanacialLedgerReportwithDateRangeasCurrentYear]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkFinanacialLedgerReportwithDateRangeasPreviousYear]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkFinanacialLedgerReportwithDateRangeasPreviousYear]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkFinanacialLedgerReportwithDateRangeasCurrentFinancialYear]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkFinanacialLedgerReportwithDateRangeasCurrentFinancialYear]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkFinanacialLedgerReportwithDateRangeasYesterDay]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkFinanacialLedgerReportwithDateRangeasYesterDay]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkFinanacialLedgerReportwithDateRangeasCurrentQuarterYear]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkFinanacialLedgerReportwithDateRangeasCurrentQuarterYear]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkFinanacialLedgerReportwithDateRangeasPreviousQuarterYear]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkFinanacialLedgerReportwithDateRangeasPreviousQuarterYear]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrailBalanceReportwithDateRangeasCurrentMonth]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrailBalanceReportwithDateRangeasCurrentMonth]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrailBalanceReportwithDateRangeasPreviousMonth]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrailBalanceReportwithDateRangeasPreviousMonth]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrailBalanceReportwithDateRangeasCurrentWeek]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrailBalanceReportwithDateRangeasCurrentWeek]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrailBalanceReportwithDateRangeasPreviousWeek]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrailBalanceReportwithDateRangeasPreviousWeek]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrailBalanceReportwithDateRangeasToday]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrailBalanceReportwithDateRangeasToday]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrailBalanceReportwithDateRangeasCurrentYear]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrailBalanceReportwithDateRangeasCurrentYear]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrailBalanceReportwithDateRangeasPreviousYear]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrailBalanceReportwithDateRangeasPreviousYear]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrailBalanceReportwithDateRangeasCurrentFinancialYear]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrailBalanceReportwithDateRangeasCurrentFinancialYear]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrailBalanceReportwithDateRangeasYesterDay]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrailBalanceReportwithDateRangeasYesterDay]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrailBalanceReportwithDateRangeasCurrentQuarterYear]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrailBalanceReportwithDateRangeasCurrentQuarterYear]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrailBalanceReportwithDateRangeasPreviousQuarterYear]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrailBalanceReportwithDateRangeasPreviousQuarterYear]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkCustomerStatementReportDateRangeasCurrentMonth]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomerStatementReportDateRangeasCurrentMonth]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkCustomerStatementReportDateRangeasPreviousMonth]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomerStatementReportDateRangeasPreviousMonth]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkCustomerStatementReportDateRangeasCurrentWeek]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomerStatementReportDateRangeasCurrentWeek]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkCustomerStatementReportDateRangeasPreviousWeek]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomerStatementReportDateRangeasPreviousWeek]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkCustomerStatementReportDateRangeasToday]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomerStatementReportDateRangeasToday]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkCustomerStatementReportDateRangeasCurrentYear]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomerStatementReportDateRangeasCurrentYear]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkCustomerStatementReportDateRangeasPreviousYear]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomerStatementReportDateRangeasPreviousYear]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkCustomerStatementReportDateRangeasCurrentFinancialYear]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomerStatementReportDateRangeasCurrentFinancialYear]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkCustomerStatementReportDateRangeasYesterDay]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomerStatementReportDateRangeasYesterDay]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkCustomerStatementReportDateRangeasCurrentQuarter]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomerStatementReportDateRangeasCurrentQuarter]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkCustomerStatementReportDateRangeasPreviousQuarter]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomerStatementReportDateRangeasPreviousQuarter]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkFinancialLedgerWithMovedAccountOnlyChkBox]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkFinancialLedgerWithMovedAccountOnlyChkBox]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkFinancialLedgerWithPrintAccountIndexChkBox]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkFinancialLedgerWithPrintAccountIndexChkBox]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkFinancialLedgerFreshPageforEachAccountChkBox]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkFinancialLedgerFreshPageforEachAccountChkBox]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkFinancialLedgerPrintasStatementofAccountChkBox]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkFinancialLedgerPrintasStatementofAccountChkBox]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkFinancialLedgerDisplayUnrelizedProfitLossChkBox]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkFinancialLedgerDisplayUnrelizedProfitLossChkBox]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkFinancialLedgerIgnoreConvertedPDCChkBox]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkFinancialLedgerIgnoreConvertedPDCChkBox]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkFinancialLedgerDisplayMaturedPDCChkBox]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkFinancialLedgerDisplayMaturedPDCChkBox]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkFinancialLedgerOutputDropdownwithPrinterasOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkFinancialLedgerOutputDropdownwithPrinterasOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkFinancialLedgerOutputDropdownasPrintDraftModeOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkFinancialLedgerOutputDropdownasPrintDraftModeOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.ckeckFinancialLedgerOutputDropdownwithExcelSheetOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.ckeckFinancialLedgerOutputDropdownwithExcelSheetOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.ckeckFinancialLedgerOutputDropdownwithExcelCSVOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.ckeckFinancialLedgerOutputDropdownwithExcelCSVOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkFinancialLedgerOutputDropdownasFilePathOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkFinancialLedgerOutputDropdownasFilePathOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrialBalanceOutputDropdownwithPrinterasOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceOutputDropdownwithPrinterasOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrialBalanceOutputDropdownasPrintDraftModeOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceOutputDropdownasPrintDraftModeOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.ckeckTrialBalanceOutputDropdownwithExcelSheetOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.ckeckTrialBalanceOutputDropdownwithExcelSheetOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.ckeckTrialBalanceOutputDropdownwithExcelCSVOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.ckeckTrialBalanceOutputDropdownwithExcelCSVOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrialBalanceOutputDropdownasFilePathOption]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceOutputDropdownasFilePathOption]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrailBalanceOutputDropdownasGraph]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrailBalanceOutputDropdownasGraph]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkClickingonScheduleBtninLedgerReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkClickingonScheduleBtninLedgerReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkOutputRadioButtonsandOutputPathisDisplayedinLedgerScheduleReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkOutputRadioButtonsandOutputPathisDisplayedinLedgerScheduleReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkRecurrencePatternRadioButtonsisDisplayedinLedgerScheduleReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkRecurrencePatternRadioButtonsisDisplayedinLedgerScheduleReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkVerifyMinuteRadioBtn]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkVerifyMinuteRadioBtn]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkVerifyHourRadioBtn]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkVerifyHourRadioBtn]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkVerifyDayRadioBtn]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkVerifyDayRadioBtn]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkVerifyWeekRadioBtn]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkVerifyWeekRadioBtn]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkVerifyMonthRadioButton]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkVerifyMonthRadioButton]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkVerifyYearRadioBtn]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkVerifyYearRadioBtn]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkRangeofRecurrenceFields]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkRangeofRecurrenceFields]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkAccountGroupsListinFinancialLedger]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkAccountGroupsListinFinancialLedger]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkControlAccountsGroupinLedgerReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkControlAccountsGroupinLedgerReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkPricebookGroupOneAccountinLedgerReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkPricebookGroupOneAccountinLedgerReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkAccountsGroupinCustomerAgeingSummaryReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkAccountsGroupinCustomerAgeingSummaryReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkCustomerUpdateGroupinCustomerAgeingSummaryReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomerUpdateGroupinCustomerAgeingSummaryReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkPricebookGroupOneinCustomerAgeingSummaryReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkPricebookGroupOneinCustomerAgeingSummaryReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkPricebookGroupTwoinCustomerAgeingSummaryReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkPricebookGroupTwoinCustomerAgeingSummaryReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkAccountsGroupinVendorAgeingSummaryReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkAccountsGroupinVendorAgeingSummaryReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTradePayableGroupinVendorAgeingSummaryReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTradePayableGroupinVendorAgeingSummaryReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkPricebookGroupOneinVendorAgeingSummaryReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkPricebookGroupOneinVendorAgeingSummaryReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkPricebookGroupTwoinVendorAgeingSummaryReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkPricebookGroupTwoinVendorAgeingSummaryReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkFinanacialLedgerReportanalyze]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkFinanacialLedgerReportanalyze]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkDeleteBalanceColumnfromColumnMeasureinAlanayzeLedgerReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkDeleteBalanceColumnfromColumnMeasureinAlanayzeLedgerReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkDeleteBalanceColumnfromColumnRemoveBtninAlanayzeLedgerReport]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkDeleteBalanceColumnfromColumnRemoveBtninAlanayzeLedgerReport]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkFinanacialLedgerReportanalyzeExportCSV]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkFinanacialLedgerReportanalyzeExportCSV]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrialBalanceFormatasPlainandDisplayColasNoneandOutputasScreen]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasPlainandDisplayColasNoneandOutputasScreen]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasNoneandOutputasPrinter]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasNoneandOutputasPrinter]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrialBalanaceFormatasPlainDisplayColasNoneandOutputasExcel]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanaceFormatasPlainDisplayColasNoneandOutputasExcel]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasNoneandOutputasPrintDraft]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasNoneandOutputasPrintDraft]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasNoneandOutputasFilePath]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasNoneandOutputasFilePath]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasNoneandOutputasExcelCSV]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasNoneandOutputasExcelCSV]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasNoneandOutputasEmail]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasNoneandOutputasEmail]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasNoneandOutputasGraph]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasNoneandOutputasGraph]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrialBalanceFormatasPlainandDisplayColasMonthandOutputasScreen]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasPlainandDisplayColasMonthandOutputasScreen]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasMonthandOutputasPrinter]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasMonthandOutputasPrinter]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrialBalanaceFormatasPlainDisplayColasMonthandOutputasExcel]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanaceFormatasPlainDisplayColasMonthandOutputasExcel]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasMonthandOutputasPrintDraft]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasMonthandOutputasPrintDraft]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasMonthandOutputasFilePath]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasMonthandOutputasFilePath]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasMonthandOutputasExcelCSV]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasMonthandOutputasExcelCSV]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasMonthandOutputasEmail]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasMonthandOutputasEmail]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasMonthandOutputasGraph]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasMonthandOutputasGraph]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrialBalanceFormatasVerticalandDisplayColasNoneandOutputasScreen]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasVerticalandDisplayColasNoneandOutputasScreen]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasNoneandOutputasPrinter]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasNoneandOutputasPrinter]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrialBalanaceFormatasVerticalDisplayColasNoneandOutputasExcel]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanaceFormatasVerticalDisplayColasNoneandOutputasExcel]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasNoneandOutputasPrintDraft]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasNoneandOutputasPrintDraft]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasNoneandOutputasFilePath]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasNoneandOutputasFilePath]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasNoneandOutputasExcelCSV]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasNoneandOutputasExcelCSV]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasNoneandOutputasEmail]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasNoneandOutputasEmail]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasNoneandOutputasGraph]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasNoneandOutputasGraph]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrialBalanceFormatasVerticalandDisplayColasMonthandOutputasScreen]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasVerticalandDisplayColasMonthandOutputasScreen]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasMonthandOutputasPrinter]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasMonthandOutputasPrinter]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrialBalanaceFormatasVerticalDisplayColasMonthandOutputasExcel]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanaceFormatasVerticalDisplayColasMonthandOutputasExcel]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasMonthandOutputasPrintDraft]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasMonthandOutputasPrintDraft]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasMonthandOutputasFilePath]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasMonthandOutputasFilePath]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasMonthandOutputasExcelCSV]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasMonthandOutputasExcelCSV]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasMonthandOutputasEmail]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasMonthandOutputasEmail]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasMonthandOutputasGraph]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasMonthandOutputasGraph]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrialBalanceFormatasHorizontalandDisplayColasQuarterandOutputasScreen]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasHorizontalandDisplayColasQuarterandOutputasScreen]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasQuarterandOutputasPrinter]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasQuarterandOutputasPrinter]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrialBalanaceFormatasHorizontalDisplayColasQuarterandOutputasExcel]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanaceFormatasHorizontalDisplayColasQuarterandOutputasExcel]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasQuarterandOutputasPrintDraft]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasQuarterandOutputasPrintDraft]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasQuarterandOutputasFilePath]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasQuarterandOutputasFilePath]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrialBalanaceFormatasHorizontalDisplayColasQuarterandOutputasExcelCSV]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanaceFormatasHorizontalDisplayColasQuarterandOutputasExcelCSV]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasQuarterandOutputasEmail]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasQuarterandOutputasEmail]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasQuarterandOutputasGraph]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasQuarterandOutputasGraph]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrialBalanceFormatasHorizontalandDisplayColasYearandOutputasScreen]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasHorizontalandDisplayColasYearandOutputasScreen]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasYearandOutputasPrinter]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasYearandOutputasPrinter]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrialBalanaceFormatasHorizontalDisplayColasYearandOutputasExcel]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanaceFormatasHorizontalDisplayColasYearandOutputasExcel]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasYearandOutputasPrintDraft]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasYearandOutputasPrintDraft]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasYearandOutputasFilePath]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasYearandOutputasFilePath]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasYearandOutputasExcelCSV]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasYearandOutputasExcelCSV]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasYearandOutputasEmail]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasYearandOutputasEmail]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasYearandOutputasGraph]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasYearandOutputasGraph]]>
    </line>
    <line>
      <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.generateReports]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.generateReports]]>
    </line>
    <line>
      <![CDATA[Completed executing test Test]]>
    </line>
    <line>
      <![CDATA[About to begin executing following method : BaseEngine.closeBrowser]]>
    </line>
    <line>
      <![CDATA[Completed executing following method : BaseEngine.closeBrowser]]>
    </line>
  </reporter-output>
  <suite name="Suite" duration-ms="13996946" started-at="2023-01-03T15:09:23Z" finished-at="2023-01-03T19:02:40Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="13996946" started-at="2023-01-03T15:09:23Z" finished-at="2023-01-03T19:02:40Z">
      <class name="com.focus.testcases.SanityFAReportsTest">
        <test-method status="PASS" signature="checkLoginTOAutomationCompany()[pri:100, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkLoginTOAutomationCompany" duration-ms="13618" started-at="2023-01-03T21:25:22Z" finished-at="2023-01-03T21:25:36Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkLoginTOAutomationCompany]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkLoginTOAutomationCompany -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:25:22Z" finished-at="2023-01-03T21:25:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkLoginTOAutomationCompany() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T21:25:36Z" finished-at="2023-01-03T21:25:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkLoginTOAutomationCompany status=SUCCESS method=SanityFAReportsTest.checkLoginTOAutomationCompany()[pri:100, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkLoginTOAutomationCompany]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:25:36Z" finished-at="2023-01-03T21:25:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkFinanacialLedgerReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkFinanacialLedgerReport()[pri:102, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkFinanacialLedgerReport" duration-ms="64508" started-at="2023-01-03T21:25:36Z" finished-at="2023-01-03T21:26:40Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkFinanacialLedgerReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkFinanacialLedgerReport -->
        <test-method status="PASS" signature="checkLedgerReportWithAllCheckBoxesEnable()[pri:103, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkLedgerReportWithAllCheckBoxesEnable" duration-ms="4294" started-at="2023-01-03T21:26:40Z" finished-at="2023-01-03T21:26:44Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkLedgerReportWithAllCheckBoxesEnable]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkLedgerReportWithAllCheckBoxesEnable -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:26:40Z" finished-at="2023-01-03T21:26:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkFinanacialLedgerReport status=SUCCESS method=SanityFAReportsTest.checkFinanacialLedgerReport()[pri:102, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkFinanacialLedgerReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:26:40Z" finished-at="2023-01-03T21:26:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkLedgerReportWithAllCheckBoxesEnable() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:26:44Z" finished-at="2023-01-03T21:26:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkLedgerReportWithAllCheckBoxesEnable status=SUCCESS method=SanityFAReportsTest.checkLedgerReportWithAllCheckBoxesEnable()[pri:103, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkLedgerReportWithAllCheckBoxesEnable]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T21:26:44Z" finished-at="2023-01-03T21:26:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkBacktrackinLedgerReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkBacktrackinLedgerReport()[pri:104, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkBacktrackinLedgerReport" duration-ms="31720" started-at="2023-01-03T21:26:44Z" finished-at="2023-01-03T21:27:16Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkBacktrackinLedgerReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkBacktrackinLedgerReport -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:27:16Z" finished-at="2023-01-03T21:27:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkBacktrackinLedgerReport status=SUCCESS method=SanityFAReportsTest.checkBacktrackinLedgerReport()[pri:104, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkBacktrackinLedgerReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkLedgerDetailsreport()[pri:105, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkLedgerDetailsreport" duration-ms="21280" started-at="2023-01-03T21:27:16Z" finished-at="2023-01-03T21:27:37Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkLedgerDetailsreport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkLedgerDetailsreport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:27:16Z" finished-at="2023-01-03T21:27:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkLedgerDetailsreport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T21:27:37Z" finished-at="2023-01-03T21:27:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkLedgerDetailsreport status=SUCCESS method=SanityFAReportsTest.checkLedgerDetailsreport()[pri:105, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkLedgerDetailsreport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:27:37Z" finished-at="2023-01-03T21:27:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkLedgerDetailreportWithAllCheckBoxesEnable() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkLedgerDetailreportWithAllCheckBoxesEnable()[pri:106, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkLedgerDetailreportWithAllCheckBoxesEnable" duration-ms="4394" started-at="2023-01-03T21:27:37Z" finished-at="2023-01-03T21:27:42Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkLedgerDetailreportWithAllCheckBoxesEnable]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkLedgerDetailreportWithAllCheckBoxesEnable -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T21:27:42Z" finished-at="2023-01-03T21:27:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkLedgerDetailreportWithAllCheckBoxesEnable status=SUCCESS method=SanityFAReportsTest.checkLedgerDetailreportWithAllCheckBoxesEnable()[pri:106, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkLedgerDetailreportWithAllCheckBoxesEnable]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:27:42Z" finished-at="2023-01-03T21:27:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkBacktrackinLedgerDetailReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkBacktrackinLedgerDetailReport()[pri:107, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkBacktrackinLedgerDetailReport" duration-ms="19051" started-at="2023-01-03T21:27:42Z" finished-at="2023-01-03T21:28:01Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkBacktrackinLedgerDetailReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkBacktrackinLedgerDetailReport -->
        <test-method status="PASS" signature="checkLedgerDetailReportPrintOption()[pri:108, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkLedgerDetailReportPrintOption" duration-ms="10551" started-at="2023-01-03T21:28:01Z" finished-at="2023-01-03T21:28:11Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkLedgerDetailReportPrintOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkLedgerDetailReportPrintOption -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:28:01Z" finished-at="2023-01-03T21:28:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkBacktrackinLedgerDetailReport status=SUCCESS method=SanityFAReportsTest.checkBacktrackinLedgerDetailReport()[pri:107, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkBacktrackinLedgerDetailReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:28:01Z" finished-at="2023-01-03T21:28:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkLedgerDetailReportPrintOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:28:11Z" finished-at="2023-01-03T21:28:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkSubledgerReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkSubledgerReport()[pri:109, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkSubledgerReport" duration-ms="12276" started-at="2023-01-03T21:28:11Z" finished-at="2023-01-03T21:28:24Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkSubledgerReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkSubledgerReport -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:28:11Z" finished-at="2023-01-03T21:28:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkLedgerDetailReportPrintOption status=SUCCESS method=SanityFAReportsTest.checkLedgerDetailReportPrintOption()[pri:108, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkLedgerDetailReportPrintOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T21:28:24Z" finished-at="2023-01-03T21:28:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkSubledgerReport status=SUCCESS method=SanityFAReportsTest.checkSubledgerReport()[pri:109, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkSubledgerReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:28:24Z" finished-at="2023-01-03T21:28:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkCustomizationInSubLedgerReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkCustomizationInSubLedgerReport()[pri:110, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkCustomizationInSubLedgerReport" duration-ms="24057" started-at="2023-01-03T21:28:24Z" finished-at="2023-01-03T21:28:48Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomizationInSubLedgerReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkCustomizationInSubLedgerReport -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:28:48Z" finished-at="2023-01-03T21:28:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkCustomizationInSubLedgerReport status=SUCCESS method=SanityFAReportsTest.checkCustomizationInSubLedgerReport()[pri:110, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkCustomizationInSubLedgerReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:28:48Z" finished-at="2023-01-03T21:28:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkBacktrackInSUBLedgerDetailReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkBacktrackInSUBLedgerDetailReport()[pri:111, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkBacktrackInSUBLedgerDetailReport" duration-ms="26634" started-at="2023-01-03T21:28:48Z" finished-at="2023-01-03T21:29:14Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkBacktrackInSUBLedgerDetailReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkBacktrackInSUBLedgerDetailReport -->
        <test-method status="PASS" signature="checkCashAndBankReport()[pri:112, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkCashAndBankReport" duration-ms="34000" started-at="2023-01-03T21:29:14Z" finished-at="2023-01-03T21:29:48Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkCashAndBankReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkCashAndBankReport -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:29:14Z" finished-at="2023-01-03T21:29:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkBacktrackInSUBLedgerDetailReport status=SUCCESS method=SanityFAReportsTest.checkBacktrackInSUBLedgerDetailReport()[pri:111, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkBacktrackInSUBLedgerDetailReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:29:14Z" finished-at="2023-01-03T21:29:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkCashAndBankReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:29:48Z" finished-at="2023-01-03T21:29:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkCashAndBankReport status=SUCCESS method=SanityFAReportsTest.checkCashAndBankReport()[pri:112, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkCashAndBankReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkBankBookReport()[pri:113, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkBankBookReport" duration-ms="21092" started-at="2023-01-03T21:29:48Z" finished-at="2023-01-03T21:30:09Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkBankBookReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkBankBookReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:29:48Z" finished-at="2023-01-03T21:29:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkBankBookReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:30:09Z" finished-at="2023-01-03T21:30:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkBacktrackInBankReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:30:09Z" finished-at="2023-01-03T21:30:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkBankBookReport status=SUCCESS method=SanityFAReportsTest.checkBankBookReport()[pri:113, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkBankBookReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkBacktrackInBankReport()[pri:114, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkBacktrackInBankReport" duration-ms="96458" started-at="2023-01-03T21:30:09Z" finished-at="2023-01-03T21:31:46Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkBacktrackInBankReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkBacktrackInBankReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:31:46Z" finished-at="2023-01-03T21:31:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkPrintOptionInBankReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:31:46Z" finished-at="2023-01-03T21:31:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkBacktrackInBankReport status=SUCCESS method=SanityFAReportsTest.checkBacktrackInBankReport()[pri:114, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkBacktrackInBankReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkPrintOptionInBankReport()[pri:115, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkPrintOptionInBankReport" duration-ms="5005" started-at="2023-01-03T21:31:46Z" finished-at="2023-01-03T21:31:51Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkPrintOptionInBankReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkPrintOptionInBankReport -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:31:51Z" finished-at="2023-01-03T21:31:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkPrintOptionInBankReport status=SUCCESS method=SanityFAReportsTest.checkPrintOptionInBankReport()[pri:115, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkPrintOptionInBankReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:31:51Z" finished-at="2023-01-03T21:31:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkPettyCashBookReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkPettyCashBookReport()[pri:116, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkPettyCashBookReport" duration-ms="31359" started-at="2023-01-03T21:31:51Z" finished-at="2023-01-03T21:32:22Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkPettyCashBookReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkPettyCashBookReport -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:32:22Z" finished-at="2023-01-03T21:32:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkPettyCashBookReport status=SUCCESS method=SanityFAReportsTest.checkPettyCashBookReport()[pri:116, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkPettyCashBookReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:32:22Z" finished-at="2023-01-03T21:32:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkDayBookReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkDayBookReport()[pri:117, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkDayBookReport" duration-ms="31481" started-at="2023-01-03T21:32:22Z" finished-at="2023-01-03T21:32:54Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkDayBookReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkDayBookReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:32:54Z" finished-at="2023-01-03T21:32:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkBankReconciliationReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkBankReconciliationReport()[pri:118, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkBankReconciliationReport" duration-ms="20716" started-at="2023-01-03T21:32:54Z" finished-at="2023-01-03T21:33:14Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkBankReconciliationReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkBankReconciliationReport -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:32:54Z" finished-at="2023-01-03T21:32:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkDayBookReport status=SUCCESS method=SanityFAReportsTest.checkDayBookReport()[pri:117, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkDayBookReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T21:33:14Z" finished-at="2023-01-03T21:33:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkBankReconciliationImportOptions() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:33:14Z" finished-at="2023-01-03T21:33:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkBankReconciliationReport status=SUCCESS method=SanityFAReportsTest.checkBankReconciliationReport()[pri:118, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkBankReconciliationReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkBankReconciliationImportOptions()[pri:119, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkBankReconciliationImportOptions" duration-ms="15509" started-at="2023-01-03T21:33:14Z" finished-at="2023-01-03T21:33:30Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkBankReconciliationImportOptions]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkBankReconciliationImportOptions -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:33:30Z" finished-at="2023-01-03T21:33:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkCustomerVendorReconciliationReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:33:30Z" finished-at="2023-01-03T21:33:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkBankReconciliationImportOptions status=SUCCESS method=SanityFAReportsTest.checkBankReconciliationImportOptions()[pri:119, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkBankReconciliationImportOptions]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkCustomerVendorReconciliationReport()[pri:120, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkCustomerVendorReconciliationReport" duration-ms="21059" started-at="2023-01-03T21:33:30Z" finished-at="2023-01-03T21:33:51Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomerVendorReconciliationReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkCustomerVendorReconciliationReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:33:51Z" finished-at="2023-01-03T21:33:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkBankReconciliationStatementReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkBankReconciliationStatementReport()[pri:121, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkBankReconciliationStatementReport" duration-ms="20016" started-at="2023-01-03T21:33:51Z" finished-at="2023-01-03T21:34:11Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkBankReconciliationStatementReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkBankReconciliationStatementReport -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:33:51Z" finished-at="2023-01-03T21:33:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkCustomerVendorReconciliationReport status=SUCCESS method=SanityFAReportsTest.checkCustomerVendorReconciliationReport()[pri:120, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkCustomerVendorReconciliationReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:34:11Z" finished-at="2023-01-03T21:34:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkBankReconciliationStatementReport status=SUCCESS method=SanityFAReportsTest.checkBankReconciliationStatementReport()[pri:121, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkBankReconciliationStatementReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:34:11Z" finished-at="2023-01-03T21:34:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkBacktrackInBankReconciationReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkBacktrackInBankReconciationReport()[pri:122, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkBacktrackInBankReconciationReport" duration-ms="13823" started-at="2023-01-03T21:34:11Z" finished-at="2023-01-03T21:34:25Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkBacktrackInBankReconciationReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkBacktrackInBankReconciationReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:34:25Z" finished-at="2023-01-03T21:34:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkPrintOptionBankReconciliationStatementReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:34:25Z" finished-at="2023-01-03T21:34:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkBacktrackInBankReconciationReport status=SUCCESS method=SanityFAReportsTest.checkBacktrackInBankReconciationReport()[pri:122, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkBacktrackInBankReconciationReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkPrintOptionBankReconciliationStatementReport()[pri:123, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkPrintOptionBankReconciliationStatementReport" duration-ms="5500" started-at="2023-01-03T21:34:25Z" finished-at="2023-01-03T21:34:30Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkPrintOptionBankReconciliationStatementReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkPrintOptionBankReconciliationStatementReport -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:34:30Z" finished-at="2023-01-03T21:34:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkPrintOptionBankReconciliationStatementReport status=SUCCESS method=SanityFAReportsTest.checkPrintOptionBankReconciliationStatementReport()[pri:123, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkPrintOptionBankReconciliationStatementReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkChequeDiscountingReport()[pri:124, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkChequeDiscountingReport" duration-ms="15601" started-at="2023-01-03T21:34:30Z" finished-at="2023-01-03T21:34:46Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkChequeDiscountingReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkChequeDiscountingReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:34:30Z" finished-at="2023-01-03T21:34:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkChequeDiscountingReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:34:46Z" finished-at="2023-01-03T21:34:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkChequeDiscountingReport status=SUCCESS method=SanityFAReportsTest.checkChequeDiscountingReport()[pri:124, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkChequeDiscountingReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:34:46Z" finished-at="2023-01-03T21:34:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkSalesRegisterReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkSalesRegisterReport()[pri:125, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkSalesRegisterReport" duration-ms="22200" started-at="2023-01-03T21:34:46Z" finished-at="2023-01-03T21:35:08Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkSalesRegisterReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkSalesRegisterReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T21:35:08Z" finished-at="2023-01-03T21:35:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkSalesRegisterCustomizationAndReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:35:08Z" finished-at="2023-01-03T21:35:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkSalesRegisterReport status=SUCCESS method=SanityFAReportsTest.checkSalesRegisterReport()[pri:125, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkSalesRegisterReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkSalesRegisterCustomizationAndReport()[pri:126, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkSalesRegisterCustomizationAndReport" duration-ms="13812" started-at="2023-01-03T21:35:08Z" finished-at="2023-01-03T21:35:22Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkSalesRegisterCustomizationAndReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkSalesRegisterCustomizationAndReport -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:35:22Z" finished-at="2023-01-03T21:35:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkSalesRegisterCustomizationAndReport status=SUCCESS method=SanityFAReportsTest.checkSalesRegisterCustomizationAndReport()[pri:126, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkSalesRegisterCustomizationAndReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkBacktrackinSalesRegisterReport()[pri:127, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkBacktrackinSalesRegisterReport" duration-ms="19644" started-at="2023-01-03T21:35:22Z" finished-at="2023-01-03T21:35:42Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkBacktrackinSalesRegisterReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkBacktrackinSalesRegisterReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:35:22Z" finished-at="2023-01-03T21:35:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkBacktrackinSalesRegisterReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:35:42Z" finished-at="2023-01-03T21:35:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkSalesReturnRegisterReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkSalesReturnRegisterReport()[pri:128, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkSalesReturnRegisterReport" duration-ms="16887" started-at="2023-01-03T21:35:42Z" finished-at="2023-01-03T21:35:58Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkSalesReturnRegisterReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkSalesReturnRegisterReport -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:35:42Z" finished-at="2023-01-03T21:35:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkBacktrackinSalesRegisterReport status=SUCCESS method=SanityFAReportsTest.checkBacktrackinSalesRegisterReport()[pri:127, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkBacktrackinSalesRegisterReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T21:35:58Z" finished-at="2023-01-03T21:35:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkBacktrackinSalesReturnRegisterReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:35:58Z" finished-at="2023-01-03T21:35:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkSalesReturnRegisterReport status=SUCCESS method=SanityFAReportsTest.checkSalesReturnRegisterReport()[pri:128, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkSalesReturnRegisterReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkBacktrackinSalesReturnRegisterReport()[pri:129, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkBacktrackinSalesReturnRegisterReport" duration-ms="12099" started-at="2023-01-03T21:35:58Z" finished-at="2023-01-03T21:36:11Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkBacktrackinSalesReturnRegisterReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkBacktrackinSalesReturnRegisterReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:36:11Z" finished-at="2023-01-03T21:36:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkPrintOptionSalesReturnRegisterReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:36:11Z" finished-at="2023-01-03T21:36:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkBacktrackinSalesReturnRegisterReport status=SUCCESS method=SanityFAReportsTest.checkBacktrackinSalesReturnRegisterReport()[pri:129, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkBacktrackinSalesReturnRegisterReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkPrintOptionSalesReturnRegisterReport()[pri:130, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkPrintOptionSalesReturnRegisterReport" duration-ms="4528" started-at="2023-01-03T21:36:11Z" finished-at="2023-01-03T21:36:15Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkPrintOptionSalesReturnRegisterReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkPrintOptionSalesReturnRegisterReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:36:15Z" finished-at="2023-01-03T21:36:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkSummarySalesBookReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkSummarySalesBookReport()[pri:131, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkSummarySalesBookReport" duration-ms="16614" started-at="2023-01-03T21:36:15Z" finished-at="2023-01-03T21:36:32Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkSummarySalesBookReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkSummarySalesBookReport -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:36:15Z" finished-at="2023-01-03T21:36:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkPrintOptionSalesReturnRegisterReport status=SUCCESS method=SanityFAReportsTest.checkPrintOptionSalesReturnRegisterReport()[pri:130, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkPrintOptionSalesReturnRegisterReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:36:32Z" finished-at="2023-01-03T21:36:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkSummarySalesBookReport status=SUCCESS method=SanityFAReportsTest.checkSummarySalesBookReport()[pri:131, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkSummarySalesBookReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkBacktrackInSummarySalesBookReport()[pri:132, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkBacktrackInSummarySalesBookReport" duration-ms="12305" started-at="2023-01-03T21:36:32Z" finished-at="2023-01-03T21:36:44Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkBacktrackInSummarySalesBookReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkBacktrackInSummarySalesBookReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:36:32Z" finished-at="2023-01-03T21:36:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkBacktrackInSummarySalesBookReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkPrintOptionSummarySalesBookReport()[pri:133, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkPrintOptionSummarySalesBookReport" duration-ms="5504" started-at="2023-01-03T21:36:44Z" finished-at="2023-01-03T21:36:50Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkPrintOptionSummarySalesBookReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkPrintOptionSummarySalesBookReport -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:36:44Z" finished-at="2023-01-03T21:36:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkBacktrackInSummarySalesBookReport status=SUCCESS method=SanityFAReportsTest.checkBacktrackInSummarySalesBookReport()[pri:132, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkBacktrackInSummarySalesBookReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:36:44Z" finished-at="2023-01-03T21:36:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkPrintOptionSummarySalesBookReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:36:50Z" finished-at="2023-01-03T21:36:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkMonthlySalesBookReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:36:50Z" finished-at="2023-01-03T21:36:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkPrintOptionSummarySalesBookReport status=SUCCESS method=SanityFAReportsTest.checkPrintOptionSummarySalesBookReport()[pri:133, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkPrintOptionSummarySalesBookReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkMonthlySalesBookReport()[pri:134, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkMonthlySalesBookReport" duration-ms="16922" started-at="2023-01-03T21:36:50Z" finished-at="2023-01-03T21:37:06Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkMonthlySalesBookReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkMonthlySalesBookReport -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:37:06Z" finished-at="2023-01-03T21:37:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkMonthlySalesBookReport status=SUCCESS method=SanityFAReportsTest.checkMonthlySalesBookReport()[pri:134, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkMonthlySalesBookReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:37:06Z" finished-at="2023-01-03T21:37:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTopCustomerListReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkTopCustomerListReport()[pri:135, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTopCustomerListReport" duration-ms="13632" started-at="2023-01-03T21:37:06Z" finished-at="2023-01-03T21:37:20Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTopCustomerListReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTopCustomerListReport -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:37:20Z" finished-at="2023-01-03T21:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTopCustomerListReport status=SUCCESS method=SanityFAReportsTest.checkTopCustomerListReport()[pri:135, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTopCustomerListReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkPrintOptionTopCustomerListReport()[pri:136, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkPrintOptionTopCustomerListReport" duration-ms="4221" started-at="2023-01-03T21:37:20Z" finished-at="2023-01-03T21:37:24Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkPrintOptionTopCustomerListReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkPrintOptionTopCustomerListReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:37:20Z" finished-at="2023-01-03T21:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkPrintOptionTopCustomerListReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:37:24Z" finished-at="2023-01-03T21:37:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkPrintOptionTopCustomerListReport status=SUCCESS method=SanityFAReportsTest.checkPrintOptionTopCustomerListReport()[pri:136, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkPrintOptionTopCustomerListReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkPurchaseRegisterReport()[pri:137, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkPurchaseRegisterReport" duration-ms="22066" started-at="2023-01-03T21:37:24Z" finished-at="2023-01-03T21:37:46Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkPurchaseRegisterReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkPurchaseRegisterReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:37:24Z" finished-at="2023-01-03T21:37:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkPurchaseRegisterReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:37:46Z" finished-at="2023-01-03T21:37:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkPurchaseRegisterReport status=SUCCESS method=SanityFAReportsTest.checkPurchaseRegisterReport()[pri:137, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkPurchaseRegisterReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:37:46Z" finished-at="2023-01-03T21:37:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkBacktrackinPurchaserRegisterReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkBacktrackinPurchaserRegisterReport()[pri:138, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkBacktrackinPurchaserRegisterReport" duration-ms="12243" started-at="2023-01-03T21:37:46Z" finished-at="2023-01-03T21:37:59Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkBacktrackinPurchaserRegisterReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkBacktrackinPurchaserRegisterReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:37:59Z" finished-at="2023-01-03T21:37:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkPrintOptionPurchaseRegisterReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkPrintOptionPurchaseRegisterReport()[pri:139, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkPrintOptionPurchaseRegisterReport" duration-ms="6005" started-at="2023-01-03T21:37:59Z" finished-at="2023-01-03T21:38:05Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkPrintOptionPurchaseRegisterReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkPrintOptionPurchaseRegisterReport -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:37:59Z" finished-at="2023-01-03T21:37:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkBacktrackinPurchaserRegisterReport status=SUCCESS method=SanityFAReportsTest.checkBacktrackinPurchaserRegisterReport()[pri:138, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkBacktrackinPurchaserRegisterReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:38:05Z" finished-at="2023-01-03T21:38:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkPrintOptionPurchaseRegisterReport status=SUCCESS method=SanityFAReportsTest.checkPrintOptionPurchaseRegisterReport()[pri:139, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkPrintOptionPurchaseRegisterReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkPurchaseReturnRegisterReport()[pri:140, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkPurchaseReturnRegisterReport" duration-ms="14280" started-at="2023-01-03T21:38:05Z" finished-at="2023-01-03T21:38:19Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkPurchaseReturnRegisterReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkPurchaseReturnRegisterReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:38:05Z" finished-at="2023-01-03T21:38:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkPurchaseReturnRegisterReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T21:38:19Z" finished-at="2023-01-03T21:38:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkSummaryPurchaseBookReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:38:19Z" finished-at="2023-01-03T21:38:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkPurchaseReturnRegisterReport status=SUCCESS method=SanityFAReportsTest.checkPurchaseReturnRegisterReport()[pri:140, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkPurchaseReturnRegisterReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkSummaryPurchaseBookReport()[pri:141, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkSummaryPurchaseBookReport" duration-ms="17039" started-at="2023-01-03T21:38:19Z" finished-at="2023-01-03T21:38:36Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkSummaryPurchaseBookReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkSummaryPurchaseBookReport -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:38:36Z" finished-at="2023-01-03T21:38:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkSummaryPurchaseBookReport status=SUCCESS method=SanityFAReportsTest.checkSummaryPurchaseBookReport()[pri:141, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkSummaryPurchaseBookReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkBacktrackinSummaryPurchaseBookrReport()[pri:142, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkBacktrackinSummaryPurchaseBookrReport" duration-ms="12158" started-at="2023-01-03T21:38:36Z" finished-at="2023-01-03T21:38:48Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkBacktrackinSummaryPurchaseBookrReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkBacktrackinSummaryPurchaseBookrReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:38:36Z" finished-at="2023-01-03T21:38:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkBacktrackinSummaryPurchaseBookrReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:38:48Z" finished-at="2023-01-03T21:38:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkBacktrackinSummaryPurchaseBookrReport status=SUCCESS method=SanityFAReportsTest.checkBacktrackinSummaryPurchaseBookrReport()[pri:142, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkBacktrackinSummaryPurchaseBookrReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkPrintOptionSummaryPurchaseBookReport()[pri:143, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkPrintOptionSummaryPurchaseBookReport" duration-ms="7104" started-at="2023-01-03T21:38:48Z" finished-at="2023-01-03T21:38:55Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkPrintOptionSummaryPurchaseBookReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkPrintOptionSummaryPurchaseBookReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:38:48Z" finished-at="2023-01-03T21:38:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkPrintOptionSummaryPurchaseBookReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:38:55Z" finished-at="2023-01-03T21:38:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkPrintOptionSummaryPurchaseBookReport status=SUCCESS method=SanityFAReportsTest.checkPrintOptionSummaryPurchaseBookReport()[pri:143, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkPrintOptionSummaryPurchaseBookReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkVatPurchaseAccountReport()[pri:144, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkVatPurchaseAccountReport" duration-ms="16178" started-at="2023-01-03T21:38:55Z" finished-at="2023-01-03T21:39:11Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkVatPurchaseAccountReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkVatPurchaseAccountReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:38:55Z" finished-at="2023-01-03T21:38:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkVatPurchaseAccountReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T21:39:11Z" finished-at="2023-01-03T21:39:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkVatPurchaseAccountReport status=SUCCESS method=SanityFAReportsTest.checkVatPurchaseAccountReport()[pri:144, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkVatPurchaseAccountReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:39:11Z" finished-at="2023-01-03T21:39:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkCustomizeOptionInVatPurchaseAccountReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkCustomizeOptionInVatPurchaseAccountReport()[pri:145, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkCustomizeOptionInVatPurchaseAccountReport" duration-ms="21162" started-at="2023-01-03T21:39:11Z" finished-at="2023-01-03T21:39:33Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomizeOptionInVatPurchaseAccountReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkCustomizeOptionInVatPurchaseAccountReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:39:33Z" finished-at="2023-01-03T21:39:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkBacktrackinVATPurchaseAccountReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkBacktrackinVATPurchaseAccountReport()[pri:146, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkBacktrackinVATPurchaseAccountReport" duration-ms="12543" started-at="2023-01-03T21:39:33Z" finished-at="2023-01-03T21:39:45Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkBacktrackinVATPurchaseAccountReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkBacktrackinVATPurchaseAccountReport -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:39:33Z" finished-at="2023-01-03T21:39:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkCustomizeOptionInVatPurchaseAccountReport status=SUCCESS method=SanityFAReportsTest.checkCustomizeOptionInVatPurchaseAccountReport()[pri:145, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkCustomizeOptionInVatPurchaseAccountReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T21:39:45Z" finished-at="2023-01-03T21:39:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkBacktrackinVATPurchaseAccountReport status=SUCCESS method=SanityFAReportsTest.checkBacktrackinVATPurchaseAccountReport()[pri:146, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkBacktrackinVATPurchaseAccountReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkVatDetailedReportReport()[pri:147, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkVatDetailedReportReport" duration-ms="27779" started-at="2023-01-03T21:39:45Z" finished-at="2023-01-03T21:40:13Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkVatDetailedReportReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkVatDetailedReportReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:39:45Z" finished-at="2023-01-03T21:39:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkVatDetailedReportReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:40:13Z" finished-at="2023-01-03T21:40:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkVatDetailedReportReport status=SUCCESS method=SanityFAReportsTest.checkVatDetailedReportReport()[pri:147, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkVatDetailedReportReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkBacktrackinVatDetailReport()[pri:148, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkBacktrackinVatDetailReport" duration-ms="12315" started-at="2023-01-03T21:40:13Z" finished-at="2023-01-03T21:40:25Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkBacktrackinVatDetailReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkBacktrackinVatDetailReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:40:13Z" finished-at="2023-01-03T21:40:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkBacktrackinVatDetailReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:40:25Z" finished-at="2023-01-03T21:40:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkSalesAccountReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkSalesAccountReport()[pri:149, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkSalesAccountReport" duration-ms="15960" started-at="2023-01-03T21:40:25Z" finished-at="2023-01-03T21:40:41Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkSalesAccountReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkSalesAccountReport -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:40:25Z" finished-at="2023-01-03T21:40:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkBacktrackinVatDetailReport status=SUCCESS method=SanityFAReportsTest.checkBacktrackinVatDetailReport()[pri:148, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkBacktrackinVatDetailReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:40:41Z" finished-at="2023-01-03T21:40:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkSalesAccountReport status=SUCCESS method=SanityFAReportsTest.checkSalesAccountReport()[pri:149, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkSalesAccountReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:40:41Z" finished-at="2023-01-03T21:40:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkBacktrackinSalesAccountReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkBacktrackinSalesAccountReport()[pri:150, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkBacktrackinSalesAccountReport" duration-ms="12178" started-at="2023-01-03T21:40:41Z" finished-at="2023-01-03T21:40:53Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkBacktrackinSalesAccountReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkBacktrackinSalesAccountReport -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:40:53Z" finished-at="2023-01-03T21:40:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkBacktrackinSalesAccountReport status=SUCCESS method=SanityFAReportsTest.checkBacktrackinSalesAccountReport()[pri:150, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkBacktrackinSalesAccountReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkSalesByCustomerReport()[pri:151, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkSalesByCustomerReport" duration-ms="18965" started-at="2023-01-03T21:40:53Z" finished-at="2023-01-03T21:41:12Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkSalesByCustomerReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkSalesByCustomerReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:40:53Z" finished-at="2023-01-03T21:40:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkSalesByCustomerReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkVatSummaryReport()[pri:152, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkVatSummaryReport" duration-ms="15230" started-at="2023-01-03T21:41:12Z" finished-at="2023-01-03T21:41:28Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkVatSummaryReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkVatSummaryReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:41:12Z" finished-at="2023-01-03T21:41:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkVatSummaryReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:41:12Z" finished-at="2023-01-03T21:41:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkSalesByCustomerReport status=SUCCESS method=SanityFAReportsTest.checkSalesByCustomerReport()[pri:151, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkSalesByCustomerReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:41:28Z" finished-at="2023-01-03T21:41:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkVatSummaryReport status=SUCCESS method=SanityFAReportsTest.checkVatSummaryReport()[pri:152, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkVatSummaryReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:41:28Z" finished-at="2023-01-03T21:41:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkVatAuditFileReportOptions() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="FAIL" signature="checkVatAuditFileReportOptions()[pri:153, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkVatAuditFileReportOptions" duration-ms="34220" started-at="2023-01-03T21:41:28Z" finished-at="2023-01-03T21:42:02Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at com.focus.testcases.SanityFAReportsTest.checkVatAuditFileReportOptions(SanityFAReportsTest.java:498)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkVatAuditFileReportOptions]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkVatAuditFileReportOptions -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="153" started-at="2023-01-03T21:42:02Z" finished-at="2023-01-03T21:42:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkVatAuditFileReportOptions status=FAILURE method=SanityFAReportsTest.checkVatAuditFileReportOptions()[pri:153, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkVatAuditFileReportOptions]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:42:02Z" finished-at="2023-01-03T21:42:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkVatReturnReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkVatReturnReport()[pri:154, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkVatReturnReport" duration-ms="16894" started-at="2023-01-03T21:42:02Z" finished-at="2023-01-03T21:42:19Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkVatReturnReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkVatReturnReport -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:42:19Z" finished-at="2023-01-03T21:42:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkVatReturnReport status=SUCCESS method=SanityFAReportsTest.checkVatReturnReport()[pri:154, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkVatReturnReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:42:19Z" finished-at="2023-01-03T21:42:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkSalesAdvanceVatReportOptions() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkSalesAdvanceVatReportOptions()[pri:155, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkSalesAdvanceVatReportOptions" duration-ms="29752" started-at="2023-01-03T21:42:19Z" finished-at="2023-01-03T21:42:49Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkSalesAdvanceVatReportOptions]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkSalesAdvanceVatReportOptions -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:42:49Z" finished-at="2023-01-03T21:42:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkSalesAdvanceVatReportOptions status=SUCCESS method=SanityFAReportsTest.checkSalesAdvanceVatReportOptions()[pri:155, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkSalesAdvanceVatReportOptions]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkBacktrackinSalesSalesAdvanceVAtReport()[pri:156, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkBacktrackinSalesSalesAdvanceVAtReport" duration-ms="14285" started-at="2023-01-03T21:42:49Z" finished-at="2023-01-03T21:43:03Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkBacktrackinSalesSalesAdvanceVAtReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkBacktrackinSalesSalesAdvanceVAtReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:42:49Z" finished-at="2023-01-03T21:42:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkBacktrackinSalesSalesAdvanceVAtReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkOpeningBalanceRegisterReport()[pri:157, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkOpeningBalanceRegisterReport" duration-ms="15630" started-at="2023-01-03T21:43:03Z" finished-at="2023-01-03T21:43:18Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkOpeningBalanceRegisterReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkOpeningBalanceRegisterReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:43:03Z" finished-at="2023-01-03T21:43:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkOpeningBalanceRegisterReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:43:03Z" finished-at="2023-01-03T21:43:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkBacktrackinSalesSalesAdvanceVAtReport status=SUCCESS method=SanityFAReportsTest.checkBacktrackinSalesSalesAdvanceVAtReport()[pri:156, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkBacktrackinSalesSalesAdvanceVAtReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T21:43:18Z" finished-at="2023-01-03T21:43:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkOpeningBalanceRegisterReport status=SUCCESS method=SanityFAReportsTest.checkOpeningBalanceRegisterReport()[pri:157, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkOpeningBalanceRegisterReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:43:18Z" finished-at="2023-01-03T21:43:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkBacktrackinOpeningBalanceRegisterReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkBacktrackinOpeningBalanceRegisterReport()[pri:158, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkBacktrackinOpeningBalanceRegisterReport" duration-ms="11748" started-at="2023-01-03T21:43:18Z" finished-at="2023-01-03T21:43:30Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkBacktrackinOpeningBalanceRegisterReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkBacktrackinOpeningBalanceRegisterReport -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:43:30Z" finished-at="2023-01-03T21:43:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkBacktrackinOpeningBalanceRegisterReport status=SUCCESS method=SanityFAReportsTest.checkBacktrackinOpeningBalanceRegisterReport()[pri:158, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkBacktrackinOpeningBalanceRegisterReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkJournalEntriesRegisterOptions()[pri:159, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkJournalEntriesRegisterOptions" duration-ms="13472" started-at="2023-01-03T21:43:30Z" finished-at="2023-01-03T21:43:44Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkJournalEntriesRegisterOptions]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkJournalEntriesRegisterOptions -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:43:30Z" finished-at="2023-01-03T21:43:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkJournalEntriesRegisterOptions() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkBacktrackinJournalEntriesRegisterReport()[pri:160, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkBacktrackinJournalEntriesRegisterReport" duration-ms="11532" started-at="2023-01-03T21:43:44Z" finished-at="2023-01-03T21:43:55Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkBacktrackinJournalEntriesRegisterReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkBacktrackinJournalEntriesRegisterReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:43:44Z" finished-at="2023-01-03T21:43:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkBacktrackinJournalEntriesRegisterReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:43:44Z" finished-at="2023-01-03T21:43:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkJournalEntriesRegisterOptions status=SUCCESS method=SanityFAReportsTest.checkJournalEntriesRegisterOptions()[pri:159, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkJournalEntriesRegisterOptions]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:43:55Z" finished-at="2023-01-03T21:43:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkBacktrackinJournalEntriesRegisterReport status=SUCCESS method=SanityFAReportsTest.checkBacktrackinJournalEntriesRegisterReport()[pri:160, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkBacktrackinJournalEntriesRegisterReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkCreditNoteRegisterOptions()[pri:161, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkCreditNoteRegisterOptions" duration-ms="13369" started-at="2023-01-03T21:43:55Z" finished-at="2023-01-03T21:44:09Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkCreditNoteRegisterOptions]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkCreditNoteRegisterOptions -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:43:55Z" finished-at="2023-01-03T21:43:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkCreditNoteRegisterOptions() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:44:09Z" finished-at="2023-01-03T21:44:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkCreditNoteRegisterOptions status=SUCCESS method=SanityFAReportsTest.checkCreditNoteRegisterOptions()[pri:161, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkCreditNoteRegisterOptions]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkBacktrackinCreditNoteRegisterReport()[pri:162, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkBacktrackinCreditNoteRegisterReport" duration-ms="11595" started-at="2023-01-03T21:44:09Z" finished-at="2023-01-03T21:44:20Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkBacktrackinCreditNoteRegisterReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkBacktrackinCreditNoteRegisterReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:44:09Z" finished-at="2023-01-03T21:44:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkBacktrackinCreditNoteRegisterReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T21:44:20Z" finished-at="2023-01-03T21:44:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkBacktrackinCreditNoteRegisterReport status=SUCCESS method=SanityFAReportsTest.checkBacktrackinCreditNoteRegisterReport()[pri:162, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkBacktrackinCreditNoteRegisterReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:44:20Z" finished-at="2023-01-03T21:44:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkDebitNoteRegisterReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkDebitNoteRegisterReport()[pri:163, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkDebitNoteRegisterReport" duration-ms="13370" started-at="2023-01-03T21:44:20Z" finished-at="2023-01-03T21:44:34Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkDebitNoteRegisterReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkDebitNoteRegisterReport -->
        <test-method status="PASS" signature="checkBacktrackinDebitNoteRegisterReport()[pri:164, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkBacktrackinDebitNoteRegisterReport" duration-ms="11517" started-at="2023-01-03T21:44:34Z" finished-at="2023-01-03T21:44:45Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkBacktrackinDebitNoteRegisterReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkBacktrackinDebitNoteRegisterReport -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:44:34Z" finished-at="2023-01-03T21:44:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkDebitNoteRegisterReport status=SUCCESS method=SanityFAReportsTest.checkDebitNoteRegisterReport()[pri:163, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkDebitNoteRegisterReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:44:34Z" finished-at="2023-01-03T21:44:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkBacktrackinDebitNoteRegisterReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T21:44:45Z" finished-at="2023-01-03T21:44:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkBacktrackinDebitNoteRegisterReport status=SUCCESS method=SanityFAReportsTest.checkBacktrackinDebitNoteRegisterReport()[pri:164, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkBacktrackinDebitNoteRegisterReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkReceiptRegisterReport()[pri:165, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkReceiptRegisterReport" duration-ms="13931" started-at="2023-01-03T21:44:45Z" finished-at="2023-01-03T21:44:59Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkReceiptRegisterReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkReceiptRegisterReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:44:45Z" finished-at="2023-01-03T21:44:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkReceiptRegisterReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:44:59Z" finished-at="2023-01-03T21:44:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkReceiptRegisterReport status=SUCCESS method=SanityFAReportsTest.checkReceiptRegisterReport()[pri:165, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkReceiptRegisterReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T21:44:59Z" finished-at="2023-01-03T21:44:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkBacktrackinReceiptRegisterReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkBacktrackinReceiptRegisterReport()[pri:166, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkBacktrackinReceiptRegisterReport" duration-ms="11731" started-at="2023-01-03T21:44:59Z" finished-at="2023-01-03T21:45:11Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkBacktrackinReceiptRegisterReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkBacktrackinReceiptRegisterReport -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:45:11Z" finished-at="2023-01-03T21:45:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkBacktrackinReceiptRegisterReport status=SUCCESS method=SanityFAReportsTest.checkBacktrackinReceiptRegisterReport()[pri:166, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkBacktrackinReceiptRegisterReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkPaymentRegisterOptions()[pri:167, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkPaymentRegisterOptions" duration-ms="14264" started-at="2023-01-03T21:45:11Z" finished-at="2023-01-03T21:45:25Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkPaymentRegisterOptions]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkPaymentRegisterOptions -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:45:11Z" finished-at="2023-01-03T21:45:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkPaymentRegisterOptions() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkBacktrackinPaymentRegisterReport()[pri:168, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkBacktrackinPaymentRegisterReport" duration-ms="11583" started-at="2023-01-03T21:45:25Z" finished-at="2023-01-03T21:45:37Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkBacktrackinPaymentRegisterReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkBacktrackinPaymentRegisterReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:45:25Z" finished-at="2023-01-03T21:45:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkBacktrackinPaymentRegisterReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:45:25Z" finished-at="2023-01-03T21:45:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkPaymentRegisterOptions status=SUCCESS method=SanityFAReportsTest.checkPaymentRegisterOptions()[pri:167, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkPaymentRegisterOptions]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:45:37Z" finished-at="2023-01-03T21:45:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkBacktrackinPaymentRegisterReport status=SUCCESS method=SanityFAReportsTest.checkBacktrackinPaymentRegisterReport()[pri:168, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkBacktrackinPaymentRegisterReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkPdcReceiptsRegisterReport()[pri:169, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkPdcReceiptsRegisterReport" duration-ms="15840" started-at="2023-01-03T21:45:37Z" finished-at="2023-01-03T21:45:52Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkPdcReceiptsRegisterReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkPdcReceiptsRegisterReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:45:37Z" finished-at="2023-01-03T21:45:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkPdcReceiptsRegisterReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T21:45:52Z" finished-at="2023-01-03T21:45:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkPdcReceiptsRegisterReport status=SUCCESS method=SanityFAReportsTest.checkPdcReceiptsRegisterReport()[pri:169, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkPdcReceiptsRegisterReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkBacktrackinPdcReceiptsReport()[pri:170, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkBacktrackinPdcReceiptsReport" duration-ms="11802" started-at="2023-01-03T21:45:52Z" finished-at="2023-01-03T21:46:04Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkBacktrackinPdcReceiptsReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkBacktrackinPdcReceiptsReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:45:52Z" finished-at="2023-01-03T21:45:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkBacktrackinPdcReceiptsReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:46:04Z" finished-at="2023-01-03T21:46:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkBacktrackinPdcReceiptsReport status=SUCCESS method=SanityFAReportsTest.checkBacktrackinPdcReceiptsReport()[pri:170, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkBacktrackinPdcReceiptsReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:46:04Z" finished-at="2023-01-03T21:46:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkPdcPaymentsRegisterReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkPdcPaymentsRegisterReport()[pri:171, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkPdcPaymentsRegisterReport" duration-ms="13673" started-at="2023-01-03T21:46:04Z" finished-at="2023-01-03T21:46:18Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkPdcPaymentsRegisterReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkPdcPaymentsRegisterReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:46:18Z" finished-at="2023-01-03T21:46:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkBacktrackinPdcPaymentsReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:46:18Z" finished-at="2023-01-03T21:46:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkPdcPaymentsRegisterReport status=SUCCESS method=SanityFAReportsTest.checkPdcPaymentsRegisterReport()[pri:171, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkPdcPaymentsRegisterReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkBacktrackinPdcPaymentsReport()[pri:172, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkBacktrackinPdcPaymentsReport" duration-ms="11821" started-at="2023-01-03T21:46:18Z" finished-at="2023-01-03T21:46:30Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkBacktrackinPdcPaymentsReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkBacktrackinPdcPaymentsReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:46:30Z" finished-at="2023-01-03T21:46:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkEntryJournalRegisterReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkEntryJournalRegisterReport()[pri:173, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkEntryJournalRegisterReport" duration-ms="34475" started-at="2023-01-03T21:46:30Z" finished-at="2023-01-03T21:47:04Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkEntryJournalRegisterReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkEntryJournalRegisterReport -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:46:30Z" finished-at="2023-01-03T21:46:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkBacktrackinPdcPaymentsReport status=SUCCESS method=SanityFAReportsTest.checkBacktrackinPdcPaymentsReport()[pri:172, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkBacktrackinPdcPaymentsReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:47:04Z" finished-at="2023-01-03T21:47:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkEntryJournalRegisterReport status=SUCCESS method=SanityFAReportsTest.checkEntryJournalRegisterReport()[pri:173, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkEntryJournalRegisterReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkBacktrackinEntryJournalReport()[pri:174, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkBacktrackinEntryJournalReport" duration-ms="12329" started-at="2023-01-03T21:47:04Z" finished-at="2023-01-03T21:47:17Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkBacktrackinEntryJournalReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkBacktrackinEntryJournalReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:47:04Z" finished-at="2023-01-03T21:47:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkBacktrackinEntryJournalReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:47:17Z" finished-at="2023-01-03T21:47:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkBacktrackinEntryJournalReport status=SUCCESS method=SanityFAReportsTest.checkBacktrackinEntryJournalReport()[pri:174, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkBacktrackinEntryJournalReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkEntryJournalDetailReport()[pri:175, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkEntryJournalDetailReport" duration-ms="27473" started-at="2023-01-03T21:47:17Z" finished-at="2023-01-03T21:47:44Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkEntryJournalDetailReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkEntryJournalDetailReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:47:17Z" finished-at="2023-01-03T21:47:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkEntryJournalDetailReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T21:47:44Z" finished-at="2023-01-03T21:47:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkEntryJournalDetailReport status=SUCCESS method=SanityFAReportsTest.checkEntryJournalDetailReport()[pri:175, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkEntryJournalDetailReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkBacktrackinEntryJournalDetailReport()[pri:176, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkBacktrackinEntryJournalDetailReport" duration-ms="12092" started-at="2023-01-03T21:47:44Z" finished-at="2023-01-03T21:47:56Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkBacktrackinEntryJournalDetailReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkBacktrackinEntryJournalDetailReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:47:44Z" finished-at="2023-01-03T21:47:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkBacktrackinEntryJournalDetailReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:47:56Z" finished-at="2023-01-03T21:47:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checksalesGroupedByCustomerReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:47:56Z" finished-at="2023-01-03T21:47:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkBacktrackinEntryJournalDetailReport status=SUCCESS method=SanityFAReportsTest.checkBacktrackinEntryJournalDetailReport()[pri:176, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkBacktrackinEntryJournalDetailReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checksalesGroupedByCustomerReport()[pri:177, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checksalesGroupedByCustomerReport" duration-ms="14338" started-at="2023-01-03T21:47:56Z" finished-at="2023-01-03T21:48:10Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checksalesGroupedByCustomerReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checksalesGroupedByCustomerReport -->
        <test-method status="PASS" signature="checkBacktrackinSalesGroupedByCustomerReport()[pri:178, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkBacktrackinSalesGroupedByCustomerReport" duration-ms="58073" started-at="2023-01-03T21:48:10Z" finished-at="2023-01-03T21:49:09Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkBacktrackinSalesGroupedByCustomerReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkBacktrackinSalesGroupedByCustomerReport -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:48:10Z" finished-at="2023-01-03T21:48:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checksalesGroupedByCustomerReport status=SUCCESS method=SanityFAReportsTest.checksalesGroupedByCustomerReport()[pri:177, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checksalesGroupedByCustomerReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:48:10Z" finished-at="2023-01-03T21:48:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkBacktrackinSalesGroupedByCustomerReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T21:49:09Z" finished-at="2023-01-03T21:49:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkBacktrackinSalesGroupedByCustomerReport status=SUCCESS method=SanityFAReportsTest.checkBacktrackinSalesGroupedByCustomerReport()[pri:178, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkBacktrackinSalesGroupedByCustomerReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:49:09Z" finished-at="2023-01-03T21:49:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkSalesGroupedByProductReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkSalesGroupedByProductReport()[pri:179, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkSalesGroupedByProductReport" duration-ms="16089" started-at="2023-01-03T21:49:09Z" finished-at="2023-01-03T21:49:25Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkSalesGroupedByProductReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkSalesGroupedByProductReport -->
        <test-method status="PASS" signature="checkSalesGroupedByDepartmentReport()[pri:181, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkSalesGroupedByDepartmentReport" duration-ms="16159" started-at="2023-01-03T21:49:25Z" finished-at="2023-01-03T21:49:41Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkSalesGroupedByDepartmentReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkSalesGroupedByDepartmentReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:49:25Z" finished-at="2023-01-03T21:49:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkSalesGroupedByDepartmentReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:49:25Z" finished-at="2023-01-03T21:49:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkSalesGroupedByProductReport status=SUCCESS method=SanityFAReportsTest.checkSalesGroupedByProductReport()[pri:179, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkSalesGroupedByProductReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T21:49:41Z" finished-at="2023-01-03T21:49:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkSalesGroupedByDepartmentReport status=SUCCESS method=SanityFAReportsTest.checkSalesGroupedByDepartmentReport()[pri:181, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkSalesGroupedByDepartmentReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkPurchasesGroupedByVendorOptions()[pri:183, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkPurchasesGroupedByVendorOptions" duration-ms="15855" started-at="2023-01-03T21:49:41Z" finished-at="2023-01-03T21:49:57Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkPurchasesGroupedByVendorOptions]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkPurchasesGroupedByVendorOptions -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:49:41Z" finished-at="2023-01-03T21:49:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkPurchasesGroupedByVendorOptions() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:49:57Z" finished-at="2023-01-03T21:49:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkPurchasesGroupedByVendorOptions status=SUCCESS method=SanityFAReportsTest.checkPurchasesGroupedByVendorOptions()[pri:183, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkPurchasesGroupedByVendorOptions]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:49:57Z" finished-at="2023-01-03T21:49:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkBacktrackinSalesGroupedByVendorReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkBacktrackinSalesGroupedByVendorReport()[pri:184, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkBacktrackinSalesGroupedByVendorReport" duration-ms="56209" started-at="2023-01-03T21:49:57Z" finished-at="2023-01-03T21:50:53Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkBacktrackinSalesGroupedByVendorReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkBacktrackinSalesGroupedByVendorReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:50:53Z" finished-at="2023-01-03T21:50:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkPurchasesGroupedByProductReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkPurchasesGroupedByProductReport()[pri:185, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkPurchasesGroupedByProductReport" duration-ms="15956" started-at="2023-01-03T21:50:53Z" finished-at="2023-01-03T21:51:09Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkPurchasesGroupedByProductReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkPurchasesGroupedByProductReport -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:50:53Z" finished-at="2023-01-03T21:50:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkBacktrackinSalesGroupedByVendorReport status=SUCCESS method=SanityFAReportsTest.checkBacktrackinSalesGroupedByVendorReport()[pri:184, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkBacktrackinSalesGroupedByVendorReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkPurchasesGroupedByDepartmentReport()[pri:187, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkPurchasesGroupedByDepartmentReport" duration-ms="17028" started-at="2023-01-03T21:51:09Z" finished-at="2023-01-03T21:51:26Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkPurchasesGroupedByDepartmentReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkPurchasesGroupedByDepartmentReport -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:51:09Z" finished-at="2023-01-03T21:51:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkPurchasesGroupedByProductReport status=SUCCESS method=SanityFAReportsTest.checkPurchasesGroupedByProductReport()[pri:185, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkPurchasesGroupedByProductReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:51:09Z" finished-at="2023-01-03T21:51:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkPurchasesGroupedByDepartmentReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:51:26Z" finished-at="2023-01-03T21:51:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkPurchasesGroupedByDepartmentReport status=SUCCESS method=SanityFAReportsTest.checkPurchasesGroupedByDepartmentReport()[pri:187, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkPurchasesGroupedByDepartmentReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="FAIL" signature="checkCustomisationOptionINPurchasesGroupedByDepartmentReport()[pri:189, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkCustomisationOptionINPurchasesGroupedByDepartmentReport" duration-ms="98732" started-at="2023-01-03T21:51:26Z" finished-at="2023-01-03T21:53:05Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at com.focus.testcases.SanityFAReportsTest.checkCustomisationOptionINPurchasesGroupedByDepartmentReport(SanityFAReportsTest.java:780)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomisationOptionINPurchasesGroupedByDepartmentReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkCustomisationOptionINPurchasesGroupedByDepartmentReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:51:26Z" finished-at="2023-01-03T21:51:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkCustomisationOptionINPurchasesGroupedByDepartmentReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="153" started-at="2023-01-03T21:53:05Z" finished-at="2023-01-03T21:53:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkCustomisationOptionINPurchasesGroupedByDepartmentReport status=FAILURE method=SanityFAReportsTest.checkCustomisationOptionINPurchasesGroupedByDepartmentReport()[pri:189, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkCustomisationOptionINPurchasesGroupedByDepartmentReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T21:53:05Z" finished-at="2023-01-03T21:53:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkMiscellaneousAnalysispeakAndLowBalancesReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkMiscellaneousAnalysispeakAndLowBalancesReport()[pri:191, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkMiscellaneousAnalysispeakAndLowBalancesReport" duration-ms="37987" started-at="2023-01-03T21:53:05Z" finished-at="2023-01-03T21:53:43Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkMiscellaneousAnalysispeakAndLowBalancesReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkMiscellaneousAnalysispeakAndLowBalancesReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:53:43Z" finished-at="2023-01-03T21:53:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkBacktrackinPeakAndLowBalanceReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkBacktrackinPeakAndLowBalanceReport()[pri:192, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkBacktrackinPeakAndLowBalanceReport" duration-ms="59314" started-at="2023-01-03T21:53:43Z" finished-at="2023-01-03T21:54:42Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkBacktrackinPeakAndLowBalanceReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkBacktrackinPeakAndLowBalanceReport -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:53:43Z" finished-at="2023-01-03T21:53:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkMiscellaneousAnalysispeakAndLowBalancesReport status=SUCCESS method=SanityFAReportsTest.checkMiscellaneousAnalysispeakAndLowBalancesReport()[pri:191, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkMiscellaneousAnalysispeakAndLowBalancesReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T21:54:42Z" finished-at="2023-01-03T21:54:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkBacktrackinPeakAndLowBalanceReport status=SUCCESS method=SanityFAReportsTest.checkBacktrackinPeakAndLowBalanceReport()[pri:192, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkBacktrackinPeakAndLowBalanceReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:54:42Z" finished-at="2023-01-03T21:54:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkComprativeAnalysisOptions() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkComprativeAnalysisOptions()[pri:193, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkComprativeAnalysisOptions" duration-ms="20826" started-at="2023-01-03T21:54:42Z" finished-at="2023-01-03T21:55:03Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkComprativeAnalysisOptions]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkComprativeAnalysisOptions -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:55:03Z" finished-at="2023-01-03T21:55:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkComprativeAnalysisOptions status=SUCCESS method=SanityFAReportsTest.checkComprativeAnalysisOptions()[pri:193, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkComprativeAnalysisOptions]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkBackTrackInComparativeAnalysis()[pri:194, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkBackTrackInComparativeAnalysis" duration-ms="57030" started-at="2023-01-03T21:55:03Z" finished-at="2023-01-03T21:56:00Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkBackTrackInComparativeAnalysis]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkBackTrackInComparativeAnalysis -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:55:03Z" finished-at="2023-01-03T21:55:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkBackTrackInComparativeAnalysis() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:56:00Z" finished-at="2023-01-03T21:56:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkBackTrackInComparativeAnalysis status=SUCCESS method=SanityFAReportsTest.checkBackTrackInComparativeAnalysis()[pri:194, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkBackTrackInComparativeAnalysis]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:56:00Z" finished-at="2023-01-03T21:56:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTransactionsTypeAnalysisReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkTransactionsTypeAnalysisReport()[pri:196, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTransactionsTypeAnalysisReport" duration-ms="20583" started-at="2023-01-03T21:56:00Z" finished-at="2023-01-03T21:56:20Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTransactionsTypeAnalysisReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTransactionsTypeAnalysisReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:56:20Z" finished-at="2023-01-03T21:56:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkBackTrackInTransactionsTypeAnalysis() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:56:20Z" finished-at="2023-01-03T21:56:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTransactionsTypeAnalysisReport status=SUCCESS method=SanityFAReportsTest.checkTransactionsTypeAnalysisReport()[pri:196, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTransactionsTypeAnalysisReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkBackTrackInTransactionsTypeAnalysis()[pri:197, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkBackTrackInTransactionsTypeAnalysis" duration-ms="57036" started-at="2023-01-03T21:56:20Z" finished-at="2023-01-03T21:57:17Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkBackTrackInTransactionsTypeAnalysis]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkBackTrackInTransactionsTypeAnalysis -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:57:17Z" finished-at="2023-01-03T21:57:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkBackTrackInTransactionsTypeAnalysis status=SUCCESS method=SanityFAReportsTest.checkBackTrackInTransactionsTypeAnalysis()[pri:197, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkBackTrackInTransactionsTypeAnalysis]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkAbcAnalysisReport()[pri:198, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkAbcAnalysisReport" duration-ms="20164" started-at="2023-01-03T21:57:17Z" finished-at="2023-01-03T21:57:38Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkAbcAnalysisReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkAbcAnalysisReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:57:17Z" finished-at="2023-01-03T21:57:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkAbcAnalysisReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:57:38Z" finished-at="2023-01-03T21:57:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkAbcAnalysisReport status=SUCCESS method=SanityFAReportsTest.checkAbcAnalysisReport()[pri:198, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkAbcAnalysisReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T21:57:38Z" finished-at="2023-01-03T21:57:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkSortingOptionInAbcAnalysisReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkSortingOptionInAbcAnalysisReport()[pri:199, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkSortingOptionInAbcAnalysisReport" duration-ms="7150" started-at="2023-01-03T21:57:38Z" finished-at="2023-01-03T21:57:45Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkSortingOptionInAbcAnalysisReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkSortingOptionInAbcAnalysisReport -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:57:45Z" finished-at="2023-01-03T21:57:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkSortingOptionInAbcAnalysisReport status=SUCCESS method=SanityFAReportsTest.checkSortingOptionInAbcAnalysisReport()[pri:199, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkSortingOptionInAbcAnalysisReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:57:45Z" finished-at="2023-01-03T21:57:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkBacktrackinABCAnalysisReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkBacktrackinABCAnalysisReport()[pri:200, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkBacktrackinABCAnalysisReport" duration-ms="57746" started-at="2023-01-03T21:57:45Z" finished-at="2023-01-03T21:58:43Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkBacktrackinABCAnalysisReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkBacktrackinABCAnalysisReport -->
        <test-method status="PASS" signature="checkInterestCalculationReport()[pri:202, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkInterestCalculationReport" duration-ms="19796" started-at="2023-01-03T21:58:43Z" finished-at="2023-01-03T21:59:02Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkInterestCalculationReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkInterestCalculationReport -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:58:43Z" finished-at="2023-01-03T21:58:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkBacktrackinABCAnalysisReport status=SUCCESS method=SanityFAReportsTest.checkBacktrackinABCAnalysisReport()[pri:200, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkBacktrackinABCAnalysisReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:58:43Z" finished-at="2023-01-03T21:58:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkInterestCalculationReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkBacktrackinInterestCalculationReport()[pri:203, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkBacktrackinInterestCalculationReport" duration-ms="58235" started-at="2023-01-03T21:59:02Z" finished-at="2023-01-03T22:00:01Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkBacktrackinInterestCalculationReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkBacktrackinInterestCalculationReport -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:59:02Z" finished-at="2023-01-03T21:59:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkInterestCalculationReport status=SUCCESS method=SanityFAReportsTest.checkInterestCalculationReport()[pri:202, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkInterestCalculationReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:59:02Z" finished-at="2023-01-03T21:59:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkBacktrackinInterestCalculationReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T22:00:01Z" finished-at="2023-01-03T22:00:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkBacktrackinInterestCalculationReport status=SUCCESS method=SanityFAReportsTest.checkBacktrackinInterestCalculationReport()[pri:203, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkBacktrackinInterestCalculationReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkMastersInformationMenuReport()[pri:204, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkMastersInformationMenuReport" duration-ms="36118" started-at="2023-01-03T22:00:01Z" finished-at="2023-01-03T22:00:37Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkMastersInformationMenuReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkMastersInformationMenuReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:00:01Z" finished-at="2023-01-03T22:00:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkMastersInformationMenuReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:00:37Z" finished-at="2023-01-03T22:00:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkMastersInformationMenuReport status=SUCCESS method=SanityFAReportsTest.checkMastersInformationMenuReport()[pri:204, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkMastersInformationMenuReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkProductLabelReport()[pri:205, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkProductLabelReport" duration-ms="12966" started-at="2023-01-03T22:00:37Z" finished-at="2023-01-03T22:00:50Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkProductLabelReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkProductLabelReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:00:37Z" finished-at="2023-01-03T22:00:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkProductLabelReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:00:50Z" finished-at="2023-01-03T22:00:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkUnitConversionReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:00:50Z" finished-at="2023-01-03T22:00:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkProductLabelReport status=SUCCESS method=SanityFAReportsTest.checkProductLabelReport()[pri:205, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkProductLabelReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkUnitConversionReport()[pri:206, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkUnitConversionReport" duration-ms="15493" started-at="2023-01-03T22:00:50Z" finished-at="2023-01-03T22:01:05Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkUnitConversionReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkUnitConversionReport -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:01:05Z" finished-at="2023-01-03T22:01:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkUnitConversionReport status=SUCCESS method=SanityFAReportsTest.checkUnitConversionReport()[pri:206, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkUnitConversionReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T22:01:05Z" finished-at="2023-01-03T22:01:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkSkidDefinitionReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkSkidDefinitionReport()[pri:207, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkSkidDefinitionReport" duration-ms="14104" started-at="2023-01-03T22:01:05Z" finished-at="2023-01-03T22:01:19Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkSkidDefinitionReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkSkidDefinitionReport -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:01:19Z" finished-at="2023-01-03T22:01:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkSkidDefinitionReport status=SUCCESS method=SanityFAReportsTest.checkSkidDefinitionReport()[pri:207, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkSkidDefinitionReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:01:19Z" finished-at="2023-01-03T22:01:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkAuditTrailTransactionsReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkAuditTrailTransactionsReport()[pri:208, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkAuditTrailTransactionsReport" duration-ms="24599" started-at="2023-01-03T22:01:19Z" finished-at="2023-01-03T22:01:44Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkAuditTrailTransactionsReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkAuditTrailTransactionsReport -->
        <test-method status="PASS" signature="checkAuditTrailLoginsReport()[pri:209, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkAuditTrailLoginsReport" duration-ms="19654" started-at="2023-01-03T22:01:44Z" finished-at="2023-01-03T22:02:04Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkAuditTrailLoginsReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkAuditTrailLoginsReport -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:01:44Z" finished-at="2023-01-03T22:01:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkAuditTrailTransactionsReport status=SUCCESS method=SanityFAReportsTest.checkAuditTrailTransactionsReport()[pri:208, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkAuditTrailTransactionsReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:01:44Z" finished-at="2023-01-03T22:01:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkAuditTrailLoginsReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:02:04Z" finished-at="2023-01-03T22:02:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkAuditTrailLoginsReport status=SUCCESS method=SanityFAReportsTest.checkAuditTrailLoginsReport()[pri:209, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkAuditTrailLoginsReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:02:04Z" finished-at="2023-01-03T22:02:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkAccountQueryOptions() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkAccountQueryOptions()[pri:210, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkAccountQueryOptions" duration-ms="17194" started-at="2023-01-03T22:02:04Z" finished-at="2023-01-03T22:02:21Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkAccountQueryOptions]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkAccountQueryOptions -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T22:02:21Z" finished-at="2023-01-03T22:02:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTransactionAuthorizationReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:02:21Z" finished-at="2023-01-03T22:02:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkAccountQueryOptions status=SUCCESS method=SanityFAReportsTest.checkAccountQueryOptions()[pri:210, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkAccountQueryOptions]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkTransactionAuthorizationReport()[pri:211, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTransactionAuthorizationReport" duration-ms="9818" started-at="2023-01-03T22:02:21Z" finished-at="2023-01-03T22:02:31Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTransactionAuthorizationReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTransactionAuthorizationReport -->
        <test-method status="PASS" signature="checkMasterAuthorizationReport()[pri:212, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkMasterAuthorizationReport" duration-ms="8179" started-at="2023-01-03T22:02:31Z" finished-at="2023-01-03T22:02:39Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkMasterAuthorizationReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkMasterAuthorizationReport -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:02:31Z" finished-at="2023-01-03T22:02:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTransactionAuthorizationReport status=SUCCESS method=SanityFAReportsTest.checkTransactionAuthorizationReport()[pri:211, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTransactionAuthorizationReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:02:31Z" finished-at="2023-01-03T22:02:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkMasterAuthorizationReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:02:39Z" finished-at="2023-01-03T22:02:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrailBalanceReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkTrailBalanceReport()[pri:213, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrailBalanceReport" duration-ms="43484" started-at="2023-01-03T22:02:39Z" finished-at="2023-01-03T22:03:22Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrailBalanceReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrailBalanceReport -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:02:39Z" finished-at="2023-01-03T22:02:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkMasterAuthorizationReport status=SUCCESS method=SanityFAReportsTest.checkMasterAuthorizationReport()[pri:212, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkMasterAuthorizationReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkTrailBalanceReportPrintOption()[pri:214, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrailBalanceReportPrintOption" duration-ms="6220" started-at="2023-01-03T22:03:22Z" finished-at="2023-01-03T22:03:28Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrailBalanceReportPrintOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrailBalanceReportPrintOption -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:03:22Z" finished-at="2023-01-03T22:03:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrailBalanceReport status=SUCCESS method=SanityFAReportsTest.checkTrailBalanceReport()[pri:213, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrailBalanceReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:03:22Z" finished-at="2023-01-03T22:03:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrailBalanceReportPrintOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:03:28Z" finished-at="2023-01-03T22:03:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkBackTrackInTrailBalance() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkBackTrackInTrailBalance()[pri:215, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkBackTrackInTrailBalance" duration-ms="77872" started-at="2023-01-03T22:03:28Z" finished-at="2023-01-03T22:04:46Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkBackTrackInTrailBalance]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkBackTrackInTrailBalance -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:03:28Z" finished-at="2023-01-03T22:03:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrailBalanceReportPrintOption status=SUCCESS method=SanityFAReportsTest.checkTrailBalanceReportPrintOption()[pri:214, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrailBalanceReportPrintOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="FAIL" signature="checkProfitAndLossReport()[pri:216, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkProfitAndLossReport" duration-ms="21912" started-at="2023-01-03T22:04:46Z" finished-at="2023-01-03T22:05:08Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at com.focus.testcases.SanityFAReportsTest.checkProfitAndLossReport(SanityFAReportsTest.java:1006)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkProfitAndLossReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkProfitAndLossReport -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:04:46Z" finished-at="2023-01-03T22:04:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkBackTrackInTrailBalance status=SUCCESS method=SanityFAReportsTest.checkBackTrackInTrailBalance()[pri:215, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkBackTrackInTrailBalance]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:04:46Z" finished-at="2023-01-03T22:04:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkProfitAndLossReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="97" started-at="2023-01-03T22:05:08Z" finished-at="2023-01-03T22:05:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkProfitAndLossReport status=FAILURE method=SanityFAReportsTest.checkProfitAndLossReport()[pri:216, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkProfitAndLossReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T22:05:08Z" finished-at="2023-01-03T22:05:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkProfitAndLossPrintOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkProfitAndLossPrintOption()[pri:217, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkProfitAndLossPrintOption" duration-ms="6226" started-at="2023-01-03T22:05:08Z" finished-at="2023-01-03T22:05:15Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkProfitAndLossPrintOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkProfitAndLossPrintOption -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:05:15Z" finished-at="2023-01-03T22:05:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkBackTrackInProfitAndLossReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:05:15Z" finished-at="2023-01-03T22:05:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkProfitAndLossPrintOption status=SUCCESS method=SanityFAReportsTest.checkProfitAndLossPrintOption()[pri:217, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkProfitAndLossPrintOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkBackTrackInProfitAndLossReport()[pri:218, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkBackTrackInProfitAndLossReport" duration-ms="79475" started-at="2023-01-03T22:05:15Z" finished-at="2023-01-03T22:06:34Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkBackTrackInProfitAndLossReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkBackTrackInProfitAndLossReport -->
        <test-method status="PASS" signature="checkTradingAccountOptions()[pri:219, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTradingAccountOptions" duration-ms="15481" started-at="2023-01-03T22:06:34Z" finished-at="2023-01-03T22:06:49Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTradingAccountOptions]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTradingAccountOptions -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:06:34Z" finished-at="2023-01-03T22:06:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkBackTrackInProfitAndLossReport status=SUCCESS method=SanityFAReportsTest.checkBackTrackInProfitAndLossReport()[pri:218, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkBackTrackInProfitAndLossReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:06:34Z" finished-at="2023-01-03T22:06:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTradingAccountOptions() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:06:49Z" finished-at="2023-01-03T22:06:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkBackTrackInTradingAccount() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkBackTrackInTradingAccount()[pri:220, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkBackTrackInTradingAccount" duration-ms="78616" started-at="2023-01-03T22:06:49Z" finished-at="2023-01-03T22:08:08Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkBackTrackInTradingAccount]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkBackTrackInTradingAccount -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:06:49Z" finished-at="2023-01-03T22:06:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTradingAccountOptions status=SUCCESS method=SanityFAReportsTest.checkTradingAccountOptions()[pri:219, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTradingAccountOptions]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T22:08:08Z" finished-at="2023-01-03T22:08:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkBackTrackInTradingAccount status=SUCCESS method=SanityFAReportsTest.checkBackTrackInTradingAccount()[pri:220, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkBackTrackInTradingAccount]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkTradingAndProfitAndLossReport()[pri:221, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTradingAndProfitAndLossReport" duration-ms="28849" started-at="2023-01-03T22:08:08Z" finished-at="2023-01-03T22:08:37Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTradingAndProfitAndLossReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTradingAndProfitAndLossReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:08:08Z" finished-at="2023-01-03T22:08:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTradingAndProfitAndLossReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:08:37Z" finished-at="2023-01-03T22:08:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTradingAndProfitAndLossReport status=SUCCESS method=SanityFAReportsTest.checkTradingAndProfitAndLossReport()[pri:221, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTradingAndProfitAndLossReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T22:08:37Z" finished-at="2023-01-03T22:08:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkPrintOptionInTradingAndProfitAndLossReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkPrintOptionInTradingAndProfitAndLossReport()[pri:222, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkPrintOptionInTradingAndProfitAndLossReport" duration-ms="6729" started-at="2023-01-03T22:08:37Z" finished-at="2023-01-03T22:08:44Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkPrintOptionInTradingAndProfitAndLossReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkPrintOptionInTradingAndProfitAndLossReport -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T22:08:44Z" finished-at="2023-01-03T22:08:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkPrintOptionInTradingAndProfitAndLossReport status=SUCCESS method=SanityFAReportsTest.checkPrintOptionInTradingAndProfitAndLossReport()[pri:222, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkPrintOptionInTradingAndProfitAndLossReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:08:44Z" finished-at="2023-01-03T22:08:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkBackTrackInTradingAndProfitAndLoss() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkBackTrackInTradingAndProfitAndLoss()[pri:223, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkBackTrackInTradingAndProfitAndLoss" duration-ms="80272" started-at="2023-01-03T22:08:44Z" finished-at="2023-01-03T22:10:04Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkBackTrackInTradingAndProfitAndLoss]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkBackTrackInTradingAndProfitAndLoss -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T22:10:04Z" finished-at="2023-01-03T22:10:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkBackTrackInTradingAndProfitAndLoss status=SUCCESS method=SanityFAReportsTest.checkBackTrackInTradingAndProfitAndLoss()[pri:223, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkBackTrackInTradingAndProfitAndLoss]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkBalanceSheetOptions()[pri:224, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkBalanceSheetOptions" duration-ms="40163" started-at="2023-01-03T22:10:04Z" finished-at="2023-01-03T22:10:44Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkBalanceSheetOptions]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkBalanceSheetOptions -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:10:04Z" finished-at="2023-01-03T22:10:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkBalanceSheetOptions() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:10:44Z" finished-at="2023-01-03T22:10:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkBalanceSheetOptions status=SUCCESS method=SanityFAReportsTest.checkBalanceSheetOptions()[pri:224, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkBalanceSheetOptions]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkCustomizationAndPrintOptionInBalanceSheetReport()[pri:225, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkCustomizationAndPrintOptionInBalanceSheetReport" duration-ms="27437" started-at="2023-01-03T22:10:44Z" finished-at="2023-01-03T22:11:12Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomizationAndPrintOptionInBalanceSheetReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkCustomizationAndPrintOptionInBalanceSheetReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:10:44Z" finished-at="2023-01-03T22:10:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkCustomizationAndPrintOptionInBalanceSheetReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T22:11:12Z" finished-at="2023-01-03T22:11:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkCustomizationAndPrintOptionInBalanceSheetReport status=SUCCESS method=SanityFAReportsTest.checkCustomizationAndPrintOptionInBalanceSheetReport()[pri:225, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkCustomizationAndPrintOptionInBalanceSheetReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkBackTrackInBalanceSheet()[pri:226, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkBackTrackInBalanceSheet" duration-ms="80929" started-at="2023-01-03T22:11:12Z" finished-at="2023-01-03T22:12:32Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkBackTrackInBalanceSheet]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkBackTrackInBalanceSheet -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:11:12Z" finished-at="2023-01-03T22:11:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkBackTrackInBalanceSheet() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:12:32Z" finished-at="2023-01-03T22:12:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkFinalAccountsSchedulesReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="FAIL" signature="checkFinalAccountsSchedulesReport()[pri:227, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkFinalAccountsSchedulesReport" duration-ms="32010" started-at="2023-01-03T22:12:32Z" finished-at="2023-01-03T22:13:04Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at com.focus.testcases.SanityFAReportsTest.checkFinalAccountsSchedulesReport(SanityFAReportsTest.java:1099)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkFinalAccountsSchedulesReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkFinalAccountsSchedulesReport -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:12:32Z" finished-at="2023-01-03T22:12:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkBackTrackInBalanceSheet status=SUCCESS method=SanityFAReportsTest.checkBackTrackInBalanceSheet()[pri:226, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkBackTrackInBalanceSheet]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="100" started-at="2023-01-03T22:13:04Z" finished-at="2023-01-03T22:13:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkFinalAccountsSchedulesReport status=FAILURE method=SanityFAReportsTest.checkFinalAccountsSchedulesReport()[pri:227, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkFinalAccountsSchedulesReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T22:13:05Z" finished-at="2023-01-03T22:13:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkCustomizationAndPrintOptionInFinalAccSchedule() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkCustomizationAndPrintOptionInFinalAccSchedule()[pri:228, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkCustomizationAndPrintOptionInFinalAccSchedule" duration-ms="25133" started-at="2023-01-03T22:13:05Z" finished-at="2023-01-03T22:13:30Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomizationAndPrintOptionInFinalAccSchedule]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkCustomizationAndPrintOptionInFinalAccSchedule -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:13:30Z" finished-at="2023-01-03T22:13:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkCustomizationAndPrintOptionInFinalAccSchedule status=SUCCESS method=SanityFAReportsTest.checkCustomizationAndPrintOptionInFinalAccSchedule()[pri:228, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkCustomizationAndPrintOptionInFinalAccSchedule]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:13:30Z" finished-at="2023-01-03T22:13:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkBackTrackInSchedules() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkBackTrackInSchedules()[pri:229, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkBackTrackInSchedules" duration-ms="59795" started-at="2023-01-03T22:13:30Z" finished-at="2023-01-03T22:14:30Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkBackTrackInSchedules]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkBackTrackInSchedules -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:14:30Z" finished-at="2023-01-03T22:14:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkBackTrackInSchedules status=SUCCESS method=SanityFAReportsTest.checkBackTrackInSchedules()[pri:229, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkBackTrackInSchedules]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:14:30Z" finished-at="2023-01-03T22:14:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkFundFlowReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkFundFlowReport()[pri:230, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkFundFlowReport" duration-ms="27771" started-at="2023-01-03T22:14:30Z" finished-at="2023-01-03T22:14:57Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkFundFlowReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkFundFlowReport -->
        <test-method status="PASS" signature="checkCustomizationAndPrintOptionInunfFlowReport()[pri:231, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkCustomizationAndPrintOptionInunfFlowReport" duration-ms="22864" started-at="2023-01-03T22:14:57Z" finished-at="2023-01-03T22:15:20Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomizationAndPrintOptionInunfFlowReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkCustomizationAndPrintOptionInunfFlowReport -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:14:57Z" finished-at="2023-01-03T22:14:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkFundFlowReport status=SUCCESS method=SanityFAReportsTest.checkFundFlowReport()[pri:230, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkFundFlowReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:14:57Z" finished-at="2023-01-03T22:14:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkCustomizationAndPrintOptionInunfFlowReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:15:20Z" finished-at="2023-01-03T22:15:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkCustomizationAndPrintOptionInunfFlowReport status=SUCCESS method=SanityFAReportsTest.checkCustomizationAndPrintOptionInunfFlowReport()[pri:231, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkCustomizationAndPrintOptionInunfFlowReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkBackTrackInFundFlow()[pri:232, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkBackTrackInFundFlow" duration-ms="79822" started-at="2023-01-03T22:15:20Z" finished-at="2023-01-03T22:16:40Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkBackTrackInFundFlow]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkBackTrackInFundFlow -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:15:20Z" finished-at="2023-01-03T22:15:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkBackTrackInFundFlow() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:16:40Z" finished-at="2023-01-03T22:16:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkCashFlowReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkCashFlowReport()[pri:233, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkCashFlowReport" duration-ms="26883" started-at="2023-01-03T22:16:40Z" finished-at="2023-01-03T22:17:07Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkCashFlowReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkCashFlowReport -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:16:40Z" finished-at="2023-01-03T22:16:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkBackTrackInFundFlow status=SUCCESS method=SanityFAReportsTest.checkBackTrackInFundFlow()[pri:232, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkBackTrackInFundFlow]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:17:07Z" finished-at="2023-01-03T22:17:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkCashFlowReport status=SUCCESS method=SanityFAReportsTest.checkCashFlowReport()[pri:233, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkCashFlowReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkCustomizationAndPrintOptionInCashFlowReport()[pri:234, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkCustomizationAndPrintOptionInCashFlowReport" duration-ms="24965" started-at="2023-01-03T22:17:07Z" finished-at="2023-01-03T22:17:32Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomizationAndPrintOptionInCashFlowReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkCustomizationAndPrintOptionInCashFlowReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:17:07Z" finished-at="2023-01-03T22:17:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkCustomizationAndPrintOptionInCashFlowReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T22:17:32Z" finished-at="2023-01-03T22:17:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkCashFLowAnalysisReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:17:32Z" finished-at="2023-01-03T22:17:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkCustomizationAndPrintOptionInCashFlowReport status=SUCCESS method=SanityFAReportsTest.checkCustomizationAndPrintOptionInCashFlowReport()[pri:234, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkCustomizationAndPrintOptionInCashFlowReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkCashFLowAnalysisReport()[pri:235, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkCashFLowAnalysisReport" duration-ms="26756" started-at="2023-01-03T22:17:32Z" finished-at="2023-01-03T22:17:59Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkCashFLowAnalysisReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkCashFLowAnalysisReport -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:17:59Z" finished-at="2023-01-03T22:17:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkCashFLowAnalysisReport status=SUCCESS method=SanityFAReportsTest.checkCashFLowAnalysisReport()[pri:235, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkCashFLowAnalysisReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T22:17:59Z" finished-at="2023-01-03T22:17:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkCustomizationAndPrintOptionInCashFlowAnalysis() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkCustomizationAndPrintOptionInCashFlowAnalysis()[pri:236, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkCustomizationAndPrintOptionInCashFlowAnalysis" duration-ms="23000" started-at="2023-01-03T22:17:59Z" finished-at="2023-01-03T22:18:22Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomizationAndPrintOptionInCashFlowAnalysis]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkCustomizationAndPrintOptionInCashFlowAnalysis -->
        <test-method status="PASS" signature="checkBackTrackInCashFlowAnalysis()[pri:238, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkBackTrackInCashFlowAnalysis" duration-ms="79890" started-at="2023-01-03T22:18:22Z" finished-at="2023-01-03T22:19:41Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkBackTrackInCashFlowAnalysis]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkBackTrackInCashFlowAnalysis -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:18:22Z" finished-at="2023-01-03T22:18:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkBackTrackInCashFlowAnalysis() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:18:22Z" finished-at="2023-01-03T22:18:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkCustomizationAndPrintOptionInCashFlowAnalysis status=SUCCESS method=SanityFAReportsTest.checkCustomizationAndPrintOptionInCashFlowAnalysis()[pri:236, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkCustomizationAndPrintOptionInCashFlowAnalysis]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkAdvanceCashFLowReport()[pri:240, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkAdvanceCashFLowReport" duration-ms="10949" started-at="2023-01-03T22:19:41Z" finished-at="2023-01-03T22:19:52Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkAdvanceCashFLowReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkAdvanceCashFLowReport -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:19:41Z" finished-at="2023-01-03T22:19:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkBackTrackInCashFlowAnalysis status=SUCCESS method=SanityFAReportsTest.checkBackTrackInCashFlowAnalysis()[pri:238, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkBackTrackInCashFlowAnalysis]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:19:41Z" finished-at="2023-01-03T22:19:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkAdvanceCashFLowReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:19:52Z" finished-at="2023-01-03T22:19:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkAdvanceCashFLowReport status=SUCCESS method=SanityFAReportsTest.checkAdvanceCashFLowReport()[pri:240, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkAdvanceCashFLowReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkIncomeExpenseTrendReport()[pri:243, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkIncomeExpenseTrendReport" duration-ms="9266" started-at="2023-01-03T22:19:52Z" finished-at="2023-01-03T22:20:02Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkIncomeExpenseTrendReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkIncomeExpenseTrendReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:19:52Z" finished-at="2023-01-03T22:19:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkIncomeExpenseTrendReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:20:02Z" finished-at="2023-01-03T22:20:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkIncomeExpenseTrendReport status=SUCCESS method=SanityFAReportsTest.checkIncomeExpenseTrendReport()[pri:243, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkIncomeExpenseTrendReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="FAIL" signature="checkReceavibleAndPayableReport()[pri:245, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkReceavibleAndPayableReport" duration-ms="25223" started-at="2023-01-03T22:20:02Z" finished-at="2023-01-03T22:20:27Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at com.focus.testcases.SanityFAReportsTest.checkReceavibleAndPayableReport(SanityFAReportsTest.java:1224)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkReceavibleAndPayableReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkReceavibleAndPayableReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:20:02Z" finished-at="2023-01-03T22:20:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkReceavibleAndPayableReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="113" started-at="2023-01-03T22:20:27Z" finished-at="2023-01-03T22:20:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkReceavibleAndPayableReport status=FAILURE method=SanityFAReportsTest.checkReceavibleAndPayableReport()[pri:245, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkReceavibleAndPayableReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="FAIL" signature="checkCustomizationAndPrintOptionInRecevibleAndPayableReport()[pri:246, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkCustomizationAndPrintOptionInRecevibleAndPayableReport" duration-ms="22736" started-at="2023-01-03T22:20:27Z" finished-at="2023-01-03T22:20:50Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at com.focus.testcases.SanityFAReportsTest.checkCustomizationAndPrintOptionInRecevibleAndPayableReport(SanityFAReportsTest.java:1231)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomizationAndPrintOptionInRecevibleAndPayableReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkCustomizationAndPrintOptionInRecevibleAndPayableReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:20:27Z" finished-at="2023-01-03T22:20:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkCustomizationAndPrintOptionInRecevibleAndPayableReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="122" started-at="2023-01-03T22:20:50Z" finished-at="2023-01-03T22:20:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkCustomizationAndPrintOptionInRecevibleAndPayableReport status=FAILURE method=SanityFAReportsTest.checkCustomizationAndPrintOptionInRecevibleAndPayableReport()[pri:246, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkCustomizationAndPrintOptionInRecevibleAndPayableReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkBackTrackInReceavibleAndPayable()[pri:247, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkBackTrackInReceavibleAndPayable" duration-ms="55673" started-at="2023-01-03T22:20:50Z" finished-at="2023-01-03T22:21:46Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkBackTrackInReceavibleAndPayable]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkBackTrackInReceavibleAndPayable -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:20:50Z" finished-at="2023-01-03T22:20:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkBackTrackInReceavibleAndPayable() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T22:21:46Z" finished-at="2023-01-03T22:21:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkBackTrackInReceavibleAndPayable status=SUCCESS method=SanityFAReportsTest.checkBackTrackInReceavibleAndPayable()[pri:247, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkBackTrackInReceavibleAndPayable]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkCustomerListingOfOutstandingBillsReport()[pri:250, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkCustomerListingOfOutstandingBillsReport" duration-ms="25972" started-at="2023-01-03T22:21:46Z" finished-at="2023-01-03T22:22:12Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomerListingOfOutstandingBillsReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkCustomerListingOfOutstandingBillsReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:21:46Z" finished-at="2023-01-03T22:21:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkCustomerListingOfOutstandingBillsReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="CheckFilterAndPrintOptionnInCustomerListingOfOutstandingBillsReport()[pri:251, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="CheckFilterAndPrintOptionnInCustomerListingOfOutstandingBillsReport" duration-ms="46994" started-at="2023-01-03T22:22:12Z" finished-at="2023-01-03T22:22:59Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.CheckFilterAndPrintOptionnInCustomerListingOfOutstandingBillsReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- CheckFilterAndPrintOptionnInCustomerListingOfOutstandingBillsReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:22:12Z" finished-at="2023-01-03T22:22:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.CheckFilterAndPrintOptionnInCustomerListingOfOutstandingBillsReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:22:12Z" finished-at="2023-01-03T22:22:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkCustomerListingOfOutstandingBillsReport status=SUCCESS method=SanityFAReportsTest.checkCustomerListingOfOutstandingBillsReport()[pri:250, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkCustomerListingOfOutstandingBillsReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:22:59Z" finished-at="2023-01-03T22:22:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CheckFilterAndPrintOptionnInCustomerListingOfOutstandingBillsReport status=SUCCESS method=SanityFAReportsTest.CheckFilterAndPrintOptionnInCustomerListingOfOutstandingBillsReport()[pri:251, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.CheckFilterAndPrintOptionnInCustomerListingOfOutstandingBillsReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T22:22:59Z" finished-at="2023-01-03T22:22:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.CheckCustomerListingOfOutstandingBillsReportBackTrackOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="CheckCustomerListingOfOutstandingBillsReportBackTrackOption()[pri:252, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="CheckCustomerListingOfOutstandingBillsReportBackTrackOption" duration-ms="16042" started-at="2023-01-03T22:22:59Z" finished-at="2023-01-03T22:23:15Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.CheckCustomerListingOfOutstandingBillsReportBackTrackOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- CheckCustomerListingOfOutstandingBillsReportBackTrackOption -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:23:15Z" finished-at="2023-01-03T22:23:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkCustomerStatementReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="FAIL" signature="checkCustomerStatementReport()[pri:253, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkCustomerStatementReport" duration-ms="26463" started-at="2023-01-03T22:23:15Z" finished-at="2023-01-03T22:23:41Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at com.focus.testcases.SanityFAReportsTest.checkCustomerStatementReport(SanityFAReportsTest.java:1277)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomerStatementReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkCustomerStatementReport -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:23:15Z" finished-at="2023-01-03T22:23:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CheckCustomerListingOfOutstandingBillsReportBackTrackOption status=SUCCESS method=SanityFAReportsTest.CheckCustomerListingOfOutstandingBillsReportBackTrackOption()[pri:252, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.CheckCustomerListingOfOutstandingBillsReportBackTrackOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="114" started-at="2023-01-03T22:23:41Z" finished-at="2023-01-03T22:23:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkCustomerStatementReport status=FAILURE method=SanityFAReportsTest.checkCustomerStatementReport()[pri:253, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkCustomerStatementReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="CheckFilterAndPrintOptionnInCustomerStatements()[pri:254, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="CheckFilterAndPrintOptionnInCustomerStatements" duration-ms="31508" started-at="2023-01-03T22:23:41Z" finished-at="2023-01-03T22:24:13Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.CheckFilterAndPrintOptionnInCustomerStatements]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- CheckFilterAndPrintOptionnInCustomerStatements -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:23:41Z" finished-at="2023-01-03T22:23:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.CheckFilterAndPrintOptionnInCustomerStatements() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:24:13Z" finished-at="2023-01-03T22:24:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CheckFilterAndPrintOptionnInCustomerStatements status=SUCCESS method=SanityFAReportsTest.CheckFilterAndPrintOptionnInCustomerStatements()[pri:254, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.CheckFilterAndPrintOptionnInCustomerStatements]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkCustomerStatementReportBackTrackOption()[pri:255, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkCustomerStatementReportBackTrackOption" duration-ms="16179" started-at="2023-01-03T22:24:13Z" finished-at="2023-01-03T22:24:29Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomerStatementReportBackTrackOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkCustomerStatementReportBackTrackOption -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:24:13Z" finished-at="2023-01-03T22:24:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkCustomerStatementReportBackTrackOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T22:24:29Z" finished-at="2023-01-03T22:24:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkCustomerDueDateAnalysisReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:24:29Z" finished-at="2023-01-03T22:24:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkCustomerStatementReportBackTrackOption status=SUCCESS method=SanityFAReportsTest.checkCustomerStatementReportBackTrackOption()[pri:255, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkCustomerStatementReportBackTrackOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="FAIL" signature="checkCustomerDueDateAnalysisReport()[pri:256, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkCustomerDueDateAnalysisReport" duration-ms="31554" started-at="2023-01-03T22:24:29Z" finished-at="2023-01-03T22:25:00Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at com.focus.testcases.SanityFAReportsTest.checkCustomerDueDateAnalysisReport(SanityFAReportsTest.java:1302)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomerDueDateAnalysisReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkCustomerDueDateAnalysisReport -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="111" started-at="2023-01-03T22:25:00Z" finished-at="2023-01-03T22:25:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkCustomerDueDateAnalysisReport status=FAILURE method=SanityFAReportsTest.checkCustomerDueDateAnalysisReport()[pri:256, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkCustomerDueDateAnalysisReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:25:01Z" finished-at="2023-01-03T22:25:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.CheckFilterAndPrintOptionnInCustomerDueDateAnalysis() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="CheckFilterAndPrintOptionnInCustomerDueDateAnalysis()[pri:257, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="CheckFilterAndPrintOptionnInCustomerDueDateAnalysis" duration-ms="33305" started-at="2023-01-03T22:25:01Z" finished-at="2023-01-03T22:25:34Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.CheckFilterAndPrintOptionnInCustomerDueDateAnalysis]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- CheckFilterAndPrintOptionnInCustomerDueDateAnalysis -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:25:34Z" finished-at="2023-01-03T22:25:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkCustomerDueDateAnalysisBackTrackOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkCustomerDueDateAnalysisBackTrackOption()[pri:258, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkCustomerDueDateAnalysisBackTrackOption" duration-ms="25304" started-at="2023-01-03T22:25:34Z" finished-at="2023-01-03T22:25:59Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomerDueDateAnalysisBackTrackOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkCustomerDueDateAnalysisBackTrackOption -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:25:34Z" finished-at="2023-01-03T22:25:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CheckFilterAndPrintOptionnInCustomerDueDateAnalysis status=SUCCESS method=SanityFAReportsTest.CheckFilterAndPrintOptionnInCustomerDueDateAnalysis()[pri:257, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.CheckFilterAndPrintOptionnInCustomerDueDateAnalysis]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T22:25:59Z" finished-at="2023-01-03T22:25:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkCustomerAgeingDetailsAnalysisReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:25:59Z" finished-at="2023-01-03T22:25:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkCustomerDueDateAnalysisBackTrackOption status=SUCCESS method=SanityFAReportsTest.checkCustomerDueDateAnalysisBackTrackOption()[pri:258, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkCustomerDueDateAnalysisBackTrackOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkCustomerAgeingDetailsAnalysisReport()[pri:259, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkCustomerAgeingDetailsAnalysisReport" duration-ms="39329" started-at="2023-01-03T22:25:59Z" finished-at="2023-01-03T22:26:38Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomerAgeingDetailsAnalysisReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkCustomerAgeingDetailsAnalysisReport -->
        <test-method status="PASS" signature="CheckFilterAndPrintOptionnInCustomerAgeingDetailsAnalysis()[pri:260, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="CheckFilterAndPrintOptionnInCustomerAgeingDetailsAnalysis" duration-ms="39084" started-at="2023-01-03T22:26:38Z" finished-at="2023-01-03T22:27:18Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.CheckFilterAndPrintOptionnInCustomerAgeingDetailsAnalysis]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- CheckFilterAndPrintOptionnInCustomerAgeingDetailsAnalysis -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:26:38Z" finished-at="2023-01-03T22:26:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.CheckFilterAndPrintOptionnInCustomerAgeingDetailsAnalysis() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:26:38Z" finished-at="2023-01-03T22:26:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkCustomerAgeingDetailsAnalysisReport status=SUCCESS method=SanityFAReportsTest.checkCustomerAgeingDetailsAnalysisReport()[pri:259, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkCustomerAgeingDetailsAnalysisReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:27:18Z" finished-at="2023-01-03T22:27:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CheckFilterAndPrintOptionnInCustomerAgeingDetailsAnalysis status=SUCCESS method=SanityFAReportsTest.CheckFilterAndPrintOptionnInCustomerAgeingDetailsAnalysis()[pri:260, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.CheckFilterAndPrintOptionnInCustomerAgeingDetailsAnalysis]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:27:18Z" finished-at="2023-01-03T22:27:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.CheckCustomerAgeingDetailsAnalysisBackTrackOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="CheckCustomerAgeingDetailsAnalysisBackTrackOption()[pri:261, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="CheckCustomerAgeingDetailsAnalysisBackTrackOption" duration-ms="15083" started-at="2023-01-03T22:27:18Z" finished-at="2023-01-03T22:27:33Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.CheckCustomerAgeingDetailsAnalysisBackTrackOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- CheckCustomerAgeingDetailsAnalysisBackTrackOption -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:27:33Z" finished-at="2023-01-03T22:27:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CheckCustomerAgeingDetailsAnalysisBackTrackOption status=SUCCESS method=SanityFAReportsTest.CheckCustomerAgeingDetailsAnalysisBackTrackOption()[pri:261, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.CheckCustomerAgeingDetailsAnalysisBackTrackOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:27:33Z" finished-at="2023-01-03T22:27:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkCustomerAgeingDetailsByDueDateReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkCustomerAgeingDetailsByDueDateReport()[pri:262, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkCustomerAgeingDetailsByDueDateReport" duration-ms="37044" started-at="2023-01-03T22:27:33Z" finished-at="2023-01-03T22:28:10Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomerAgeingDetailsByDueDateReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkCustomerAgeingDetailsByDueDateReport -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:28:10Z" finished-at="2023-01-03T22:28:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkCustomerAgeingDetailsByDueDateReport status=SUCCESS method=SanityFAReportsTest.checkCustomerAgeingDetailsByDueDateReport()[pri:262, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkCustomerAgeingDetailsByDueDateReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:28:10Z" finished-at="2023-01-03T22:28:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.CheckFilterAndPrintOptionnInCustomerAgeingDetailsDueDate() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="CheckFilterAndPrintOptionnInCustomerAgeingDetailsDueDate()[pri:263, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="CheckFilterAndPrintOptionnInCustomerAgeingDetailsDueDate" duration-ms="33539" started-at="2023-01-03T22:28:10Z" finished-at="2023-01-03T22:28:43Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.CheckFilterAndPrintOptionnInCustomerAgeingDetailsDueDate]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- CheckFilterAndPrintOptionnInCustomerAgeingDetailsDueDate -->
        <test-method status="PASS" signature="CheckCustomerAgeingDetailsDueDateBackTrackOption()[pri:264, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="CheckCustomerAgeingDetailsDueDateBackTrackOption" duration-ms="21143" started-at="2023-01-03T22:28:43Z" finished-at="2023-01-03T22:29:04Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.CheckCustomerAgeingDetailsDueDateBackTrackOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- CheckCustomerAgeingDetailsDueDateBackTrackOption -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:28:43Z" finished-at="2023-01-03T22:28:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.CheckCustomerAgeingDetailsDueDateBackTrackOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:28:43Z" finished-at="2023-01-03T22:28:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CheckFilterAndPrintOptionnInCustomerAgeingDetailsDueDate status=SUCCESS method=SanityFAReportsTest.CheckFilterAndPrintOptionnInCustomerAgeingDetailsDueDate()[pri:263, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.CheckFilterAndPrintOptionnInCustomerAgeingDetailsDueDate]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:29:04Z" finished-at="2023-01-03T22:29:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkCustomerOverDueAnalysisReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:29:04Z" finished-at="2023-01-03T22:29:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CheckCustomerAgeingDetailsDueDateBackTrackOption status=SUCCESS method=SanityFAReportsTest.CheckCustomerAgeingDetailsDueDateBackTrackOption()[pri:264, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.CheckCustomerAgeingDetailsDueDateBackTrackOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkCustomerOverDueAnalysisReport()[pri:265, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkCustomerOverDueAnalysisReport" duration-ms="30239" started-at="2023-01-03T22:29:04Z" finished-at="2023-01-03T22:29:35Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomerOverDueAnalysisReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkCustomerOverDueAnalysisReport -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T22:29:35Z" finished-at="2023-01-03T22:29:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkCustomerOverDueAnalysisReport status=SUCCESS method=SanityFAReportsTest.checkCustomerOverDueAnalysisReport()[pri:265, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkCustomerOverDueAnalysisReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:29:35Z" finished-at="2023-01-03T22:29:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.CheckFilterAndPrintOptionnInCustomerOverDueAnalysis() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="CheckFilterAndPrintOptionnInCustomerOverDueAnalysis()[pri:266, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="CheckFilterAndPrintOptionnInCustomerOverDueAnalysis" duration-ms="37524" started-at="2023-01-03T22:29:35Z" finished-at="2023-01-03T22:30:12Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.CheckFilterAndPrintOptionnInCustomerOverDueAnalysis]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- CheckFilterAndPrintOptionnInCustomerOverDueAnalysis -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:30:12Z" finished-at="2023-01-03T22:30:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.CheckCustomerOverDueAnalysisBackTrackOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="CheckCustomerOverDueAnalysisBackTrackOption()[pri:267, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="CheckCustomerOverDueAnalysisBackTrackOption" duration-ms="15234" started-at="2023-01-03T22:30:12Z" finished-at="2023-01-03T22:30:27Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.CheckCustomerOverDueAnalysisBackTrackOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- CheckCustomerOverDueAnalysisBackTrackOption -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:30:12Z" finished-at="2023-01-03T22:30:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CheckFilterAndPrintOptionnInCustomerOverDueAnalysis status=SUCCESS method=SanityFAReportsTest.CheckFilterAndPrintOptionnInCustomerOverDueAnalysis()[pri:266, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.CheckFilterAndPrintOptionnInCustomerOverDueAnalysis]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:30:27Z" finished-at="2023-01-03T22:30:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CheckCustomerOverDueAnalysisBackTrackOption status=SUCCESS method=SanityFAReportsTest.CheckCustomerOverDueAnalysisBackTrackOption()[pri:267, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.CheckCustomerOverDueAnalysisBackTrackOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkcustomerSummaryCustomerAgeingSummaryReport()[pri:268, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkcustomerSummaryCustomerAgeingSummaryReport" duration-ms="26048" started-at="2023-01-03T22:30:27Z" finished-at="2023-01-03T22:30:53Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkcustomerSummaryCustomerAgeingSummaryReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkcustomerSummaryCustomerAgeingSummaryReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:30:27Z" finished-at="2023-01-03T22:30:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkcustomerSummaryCustomerAgeingSummaryReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T22:30:53Z" finished-at="2023-01-03T22:30:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkcustomerSummaryCustomerAgeingSummaryReport status=SUCCESS method=SanityFAReportsTest.checkcustomerSummaryCustomerAgeingSummaryReport()[pri:268, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkcustomerSummaryCustomerAgeingSummaryReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:30:53Z" finished-at="2023-01-03T22:30:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkCustomerSummaryCustomerAgeingSummaryReportBackTrackOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkCustomerSummaryCustomerAgeingSummaryReportBackTrackOption()[pri:270, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkCustomerSummaryCustomerAgeingSummaryReportBackTrackOption" duration-ms="59528" started-at="2023-01-03T22:30:53Z" finished-at="2023-01-03T22:31:53Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomerSummaryCustomerAgeingSummaryReportBackTrackOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkCustomerSummaryCustomerAgeingSummaryReportBackTrackOption -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T22:31:53Z" finished-at="2023-01-03T22:31:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkcustomerSummaryAgeingByDueDateReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:31:53Z" finished-at="2023-01-03T22:31:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkCustomerSummaryCustomerAgeingSummaryReportBackTrackOption status=SUCCESS method=SanityFAReportsTest.checkCustomerSummaryCustomerAgeingSummaryReportBackTrackOption()[pri:270, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkCustomerSummaryCustomerAgeingSummaryReportBackTrackOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkcustomerSummaryAgeingByDueDateReport()[pri:271, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkcustomerSummaryAgeingByDueDateReport" duration-ms="29923" started-at="2023-01-03T22:31:53Z" finished-at="2023-01-03T22:32:23Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkcustomerSummaryAgeingByDueDateReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkcustomerSummaryAgeingByDueDateReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:32:23Z" finished-at="2023-01-03T22:32:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkCustomerSummaryAgeingByDueDateReportBackTrackOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkCustomerSummaryAgeingByDueDateReportBackTrackOption()[pri:273, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkCustomerSummaryAgeingByDueDateReportBackTrackOption" duration-ms="57586" started-at="2023-01-03T22:32:23Z" finished-at="2023-01-03T22:33:20Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomerSummaryAgeingByDueDateReportBackTrackOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkCustomerSummaryAgeingByDueDateReportBackTrackOption -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:32:23Z" finished-at="2023-01-03T22:32:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkcustomerSummaryAgeingByDueDateReport status=SUCCESS method=SanityFAReportsTest.checkcustomerSummaryAgeingByDueDateReport()[pri:271, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkcustomerSummaryAgeingByDueDateReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:33:20Z" finished-at="2023-01-03T22:33:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkCustomerSummaryAgeingByDueDateReportBackTrackOption status=SUCCESS method=SanityFAReportsTest.checkCustomerSummaryAgeingByDueDateReportBackTrackOption()[pri:273, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkCustomerSummaryAgeingByDueDateReportBackTrackOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkcustomerSummaryCustomerOverDueSummeryReport()[pri:276, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkcustomerSummaryCustomerOverDueSummeryReport" duration-ms="28822" started-at="2023-01-03T22:33:20Z" finished-at="2023-01-03T22:33:49Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkcustomerSummaryCustomerOverDueSummeryReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkcustomerSummaryCustomerOverDueSummeryReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:33:20Z" finished-at="2023-01-03T22:33:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkcustomerSummaryCustomerOverDueSummeryReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:33:49Z" finished-at="2023-01-03T22:33:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkCustomerSummaryCustomerOverDueSummeryReportBackTrackOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkCustomerSummaryCustomerOverDueSummeryReportBackTrackOption()[pri:278, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkCustomerSummaryCustomerOverDueSummeryReportBackTrackOption" duration-ms="58677" started-at="2023-01-03T22:33:49Z" finished-at="2023-01-03T22:34:48Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomerSummaryCustomerOverDueSummeryReportBackTrackOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkCustomerSummaryCustomerOverDueSummeryReportBackTrackOption -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:33:49Z" finished-at="2023-01-03T22:33:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkcustomerSummaryCustomerOverDueSummeryReport status=SUCCESS method=SanityFAReportsTest.checkcustomerSummaryCustomerOverDueSummeryReport()[pri:276, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkcustomerSummaryCustomerOverDueSummeryReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkcustomerSummaryCustomerBillWiseSummeryReport()[pri:279, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkcustomerSummaryCustomerBillWiseSummeryReport" duration-ms="24805" started-at="2023-01-03T22:34:48Z" finished-at="2023-01-03T22:35:13Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkcustomerSummaryCustomerBillWiseSummeryReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkcustomerSummaryCustomerBillWiseSummeryReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:34:48Z" finished-at="2023-01-03T22:34:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkcustomerSummaryCustomerBillWiseSummeryReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:34:48Z" finished-at="2023-01-03T22:34:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkCustomerSummaryCustomerOverDueSummeryReportBackTrackOption status=SUCCESS method=SanityFAReportsTest.checkCustomerSummaryCustomerOverDueSummeryReportBackTrackOption()[pri:278, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkCustomerSummaryCustomerOverDueSummeryReportBackTrackOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:35:13Z" finished-at="2023-01-03T22:35:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkcustomerSummaryCustomerBillWiseSummeryReport status=SUCCESS method=SanityFAReportsTest.checkcustomerSummaryCustomerBillWiseSummeryReport()[pri:279, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkcustomerSummaryCustomerBillWiseSummeryReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:35:13Z" finished-at="2023-01-03T22:35:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkCustomerSummaryCustomerBillWiseSummeryReportBackTrackOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkCustomerSummaryCustomerBillWiseSummeryReportBackTrackOption()[pri:281, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkCustomerSummaryCustomerBillWiseSummeryReportBackTrackOption" duration-ms="62624" started-at="2023-01-03T22:35:13Z" finished-at="2023-01-03T22:36:15Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomerSummaryCustomerBillWiseSummeryReportBackTrackOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkCustomerSummaryCustomerBillWiseSummeryReportBackTrackOption -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:36:15Z" finished-at="2023-01-03T22:36:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkVendorListingOfOutstandingBillsReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.text.ParseException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:36:15Z" finished-at="2023-01-03T22:36:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkCustomerSummaryCustomerBillWiseSummeryReportBackTrackOption status=SUCCESS method=SanityFAReportsTest.checkCustomerSummaryCustomerBillWiseSummeryReportBackTrackOption()[pri:281, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkCustomerSummaryCustomerBillWiseSummeryReportBackTrackOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkVendorListingOfOutstandingBillsReport()[pri:285, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkVendorListingOfOutstandingBillsReport" duration-ms="23526" started-at="2023-01-03T22:36:15Z" finished-at="2023-01-03T22:36:39Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkVendorListingOfOutstandingBillsReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkVendorListingOfOutstandingBillsReport -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:36:39Z" finished-at="2023-01-03T22:36:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkVendorListingOfOutstandingBillsReport status=SUCCESS method=SanityFAReportsTest.checkVendorListingOfOutstandingBillsReport()[pri:285, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkVendorListingOfOutstandingBillsReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:36:39Z" finished-at="2023-01-03T22:36:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.CheckPrintAndCustomiseOptionnInVendorListingOfOutstandingBillsReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="CheckPrintAndCustomiseOptionnInVendorListingOfOutstandingBillsReport()[pri:286, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="CheckPrintAndCustomiseOptionnInVendorListingOfOutstandingBillsReport" duration-ms="32181" started-at="2023-01-03T22:36:39Z" finished-at="2023-01-03T22:37:11Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.CheckPrintAndCustomiseOptionnInVendorListingOfOutstandingBillsReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- CheckPrintAndCustomiseOptionnInVendorListingOfOutstandingBillsReport -->
        <test-method status="PASS" signature="checkFilterOptionInVendorListingOfOutstandingBillsReport()[pri:287, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkFilterOptionInVendorListingOfOutstandingBillsReport" duration-ms="26732" started-at="2023-01-03T22:37:11Z" finished-at="2023-01-03T22:37:38Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkFilterOptionInVendorListingOfOutstandingBillsReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkFilterOptionInVendorListingOfOutstandingBillsReport -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:37:11Z" finished-at="2023-01-03T22:37:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CheckPrintAndCustomiseOptionnInVendorListingOfOutstandingBillsReport status=SUCCESS method=SanityFAReportsTest.CheckPrintAndCustomiseOptionnInVendorListingOfOutstandingBillsReport()[pri:286, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.CheckPrintAndCustomiseOptionnInVendorListingOfOutstandingBillsReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:37:11Z" finished-at="2023-01-03T22:37:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkFilterOptionInVendorListingOfOutstandingBillsReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.text.ParseException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:37:38Z" finished-at="2023-01-03T22:37:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkFilterOptionInVendorListingOfOutstandingBillsReport status=SUCCESS method=SanityFAReportsTest.checkFilterOptionInVendorListingOfOutstandingBillsReport()[pri:287, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkFilterOptionInVendorListingOfOutstandingBillsReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkVendorListingOfOutstandingBillsReportBackTrackOption()[pri:288, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkVendorListingOfOutstandingBillsReportBackTrackOption" duration-ms="16489" started-at="2023-01-03T22:37:38Z" finished-at="2023-01-03T22:37:54Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkVendorListingOfOutstandingBillsReportBackTrackOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkVendorListingOfOutstandingBillsReportBackTrackOption -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:37:38Z" finished-at="2023-01-03T22:37:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkVendorListingOfOutstandingBillsReportBackTrackOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T22:37:54Z" finished-at="2023-01-03T22:37:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkVendorListingOfOutstandingBillsReportBackTrackOption status=SUCCESS method=SanityFAReportsTest.checkVendorListingOfOutstandingBillsReportBackTrackOption()[pri:288, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkVendorListingOfOutstandingBillsReportBackTrackOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:37:54Z" finished-at="2023-01-03T22:37:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkvendorDetailsVendorStatementsReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.text.ParseException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkvendorDetailsVendorStatementsReport()[pri:290, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkvendorDetailsVendorStatementsReport" duration-ms="40458" started-at="2023-01-03T22:37:54Z" finished-at="2023-01-03T22:38:35Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkvendorDetailsVendorStatementsReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkvendorDetailsVendorStatementsReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="6" started-at="2023-01-03T22:38:35Z" finished-at="2023-01-03T22:38:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.CheckPrintAndCustomiseOptionnInvendorDetailsVendorStatementsReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:38:35Z" finished-at="2023-01-03T22:38:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkvendorDetailsVendorStatementsReport status=SUCCESS method=SanityFAReportsTest.checkvendorDetailsVendorStatementsReport()[pri:290, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkvendorDetailsVendorStatementsReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="CheckPrintAndCustomiseOptionnInvendorDetailsVendorStatementsReport()[pri:291, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="CheckPrintAndCustomiseOptionnInvendorDetailsVendorStatementsReport" duration-ms="24220" started-at="2023-01-03T22:38:35Z" finished-at="2023-01-03T22:38:59Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.CheckPrintAndCustomiseOptionnInvendorDetailsVendorStatementsReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- CheckPrintAndCustomiseOptionnInvendorDetailsVendorStatementsReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:38:59Z" finished-at="2023-01-03T22:38:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkVendorDetailsVendorStatementsReportBackTrackOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:38:59Z" finished-at="2023-01-03T22:38:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CheckPrintAndCustomiseOptionnInvendorDetailsVendorStatementsReport status=SUCCESS method=SanityFAReportsTest.CheckPrintAndCustomiseOptionnInvendorDetailsVendorStatementsReport()[pri:291, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.CheckPrintAndCustomiseOptionnInvendorDetailsVendorStatementsReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkVendorDetailsVendorStatementsReportBackTrackOption()[pri:292, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkVendorDetailsVendorStatementsReportBackTrackOption" duration-ms="15569" started-at="2023-01-03T22:38:59Z" finished-at="2023-01-03T22:39:15Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkVendorDetailsVendorStatementsReportBackTrackOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkVendorDetailsVendorStatementsReportBackTrackOption -->
        <test-method status="PASS" signature="checkvendorDetailsVendorDueDateAnalysisReport()[pri:293, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkvendorDetailsVendorDueDateAnalysisReport" duration-ms="44751" started-at="2023-01-03T22:39:15Z" finished-at="2023-01-03T22:39:59Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkvendorDetailsVendorDueDateAnalysisReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkvendorDetailsVendorDueDateAnalysisReport -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:39:15Z" finished-at="2023-01-03T22:39:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkVendorDetailsVendorStatementsReportBackTrackOption status=SUCCESS method=SanityFAReportsTest.checkVendorDetailsVendorStatementsReportBackTrackOption()[pri:292, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkVendorDetailsVendorStatementsReportBackTrackOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:39:15Z" finished-at="2023-01-03T22:39:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkvendorDetailsVendorDueDateAnalysisReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.text.ParseException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:39:59Z" finished-at="2023-01-03T22:39:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkvendorDetailsVendorDueDateAnalysisReport status=SUCCESS method=SanityFAReportsTest.checkvendorDetailsVendorDueDateAnalysisReport()[pri:293, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkvendorDetailsVendorDueDateAnalysisReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="CheckPrintAndCustomiseOptionnInvendorDetailsVendorDueDateAnalysisReport()[pri:294, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="CheckPrintAndCustomiseOptionnInvendorDetailsVendorDueDateAnalysisReport" duration-ms="26244" started-at="2023-01-03T22:39:59Z" finished-at="2023-01-03T22:40:26Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.CheckPrintAndCustomiseOptionnInvendorDetailsVendorDueDateAnalysisReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- CheckPrintAndCustomiseOptionnInvendorDetailsVendorDueDateAnalysisReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:39:59Z" finished-at="2023-01-03T22:39:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.CheckPrintAndCustomiseOptionnInvendorDetailsVendorDueDateAnalysisReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:40:26Z" finished-at="2023-01-03T22:40:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CheckPrintAndCustomiseOptionnInvendorDetailsVendorDueDateAnalysisReport status=SUCCESS method=SanityFAReportsTest.CheckPrintAndCustomiseOptionnInvendorDetailsVendorDueDateAnalysisReport()[pri:294, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.CheckPrintAndCustomiseOptionnInvendorDetailsVendorDueDateAnalysisReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkVendorDetailsVendorDueDateAnalysisReportBackTrackOption()[pri:295, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkVendorDetailsVendorDueDateAnalysisReportBackTrackOption" duration-ms="16022" started-at="2023-01-03T22:40:26Z" finished-at="2023-01-03T22:40:42Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkVendorDetailsVendorDueDateAnalysisReportBackTrackOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkVendorDetailsVendorDueDateAnalysisReportBackTrackOption -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:40:26Z" finished-at="2023-01-03T22:40:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkVendorDetailsVendorDueDateAnalysisReportBackTrackOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:40:42Z" finished-at="2023-01-03T22:40:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkVendorDetailsVendorDueDateAnalysisReportBackTrackOption status=SUCCESS method=SanityFAReportsTest.checkVendorDetailsVendorDueDateAnalysisReportBackTrackOption()[pri:295, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkVendorDetailsVendorDueDateAnalysisReportBackTrackOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkVendorDetailsVendorAgeingDetailsReport()[pri:296, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkVendorDetailsVendorAgeingDetailsReport" duration-ms="48253" started-at="2023-01-03T22:40:42Z" finished-at="2023-01-03T22:41:30Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkVendorDetailsVendorAgeingDetailsReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkVendorDetailsVendorAgeingDetailsReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:40:42Z" finished-at="2023-01-03T22:40:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkVendorDetailsVendorAgeingDetailsReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.text.ParseException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:41:30Z" finished-at="2023-01-03T22:41:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkVendorDetailsVendorAgeingDetailsReport status=SUCCESS method=SanityFAReportsTest.checkVendorDetailsVendorAgeingDetailsReport()[pri:296, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkVendorDetailsVendorAgeingDetailsReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:41:30Z" finished-at="2023-01-03T22:41:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.CheckPrintAndCustomiseOptionnInVendorDetailsVendorAgeingDetailsReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="FAIL" signature="CheckPrintAndCustomiseOptionnInVendorDetailsVendorAgeingDetailsReport()[pri:297, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="CheckPrintAndCustomiseOptionnInVendorDetailsVendorAgeingDetailsReport" duration-ms="26627" started-at="2023-01-03T22:41:30Z" finished-at="2023-01-03T22:41:56Z">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 1, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 1, Size: 1
	at java.util.ArrayList.rangeCheck(Unknown Source)
	at java.util.ArrayList.get(Unknown Source)
	at com.focus.Pages.SanityFAReportsPage.CheckPrintAndCustomiseOptionnInVendorDetailsVendorAgeingDetailsReport(SanityFAReportsPage.java:30918)
	at com.focus.testcases.SanityFAReportsTest.CheckPrintAndCustomiseOptionnInVendorDetailsVendorAgeingDetailsReport(SanityFAReportsTest.java:1593)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.CheckPrintAndCustomiseOptionnInVendorDetailsVendorAgeingDetailsReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- CheckPrintAndCustomiseOptionnInVendorDetailsVendorAgeingDetailsReport -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="122" started-at="2023-01-03T22:41:56Z" finished-at="2023-01-03T22:41:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CheckPrintAndCustomiseOptionnInVendorDetailsVendorAgeingDetailsReport status=FAILURE method=SanityFAReportsTest.CheckPrintAndCustomiseOptionnInVendorDetailsVendorAgeingDetailsReport()[pri:297, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.CheckPrintAndCustomiseOptionnInVendorDetailsVendorAgeingDetailsReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T22:41:57Z" finished-at="2023-01-03T22:41:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkVendorDetailsVendorAgeingReportBackTrackOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkVendorDetailsVendorAgeingReportBackTrackOption()[pri:298, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkVendorDetailsVendorAgeingReportBackTrackOption" duration-ms="14241" started-at="2023-01-03T22:41:57Z" finished-at="2023-01-03T22:42:11Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkVendorDetailsVendorAgeingReportBackTrackOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkVendorDetailsVendorAgeingReportBackTrackOption -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:42:11Z" finished-at="2023-01-03T22:42:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkVendorDetailsVendorAgeingReportBackTrackOption status=SUCCESS method=SanityFAReportsTest.checkVendorDetailsVendorAgeingReportBackTrackOption()[pri:298, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkVendorDetailsVendorAgeingReportBackTrackOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="FAIL" signature="checkVendorDetailsVendorDetailsAgeingByDueDateReport()[pri:300, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkVendorDetailsVendorDetailsAgeingByDueDateReport" duration-ms="47010" started-at="2023-01-03T22:42:11Z" finished-at="2023-01-03T22:42:58Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at com.focus.testcases.SanityFAReportsTest.checkVendorDetailsVendorDetailsAgeingByDueDateReport(SanityFAReportsTest.java:1609)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkVendorDetailsVendorDetailsAgeingByDueDateReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkVendorDetailsVendorDetailsAgeingByDueDateReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:42:11Z" finished-at="2023-01-03T22:42:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkVendorDetailsVendorDetailsAgeingByDueDateReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.text.ParseException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="92" started-at="2023-01-03T22:42:58Z" finished-at="2023-01-03T22:42:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkVendorDetailsVendorDetailsAgeingByDueDateReport status=FAILURE method=SanityFAReportsTest.checkVendorDetailsVendorDetailsAgeingByDueDateReport()[pri:300, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkVendorDetailsVendorDetailsAgeingByDueDateReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:42:58Z" finished-at="2023-01-03T22:42:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.CheckPrintAndCustomiseOptionnInvendorDetailsVendorDetailsAgeingByDueDateReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="FAIL" signature="CheckPrintAndCustomiseOptionnInvendorDetailsVendorDetailsAgeingByDueDateReport()[pri:301, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="CheckPrintAndCustomiseOptionnInvendorDetailsVendorDetailsAgeingByDueDateReport" duration-ms="24823" started-at="2023-01-03T22:42:58Z" finished-at="2023-01-03T22:43:23Z">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 1, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 1, Size: 1
	at java.util.ArrayList.rangeCheck(Unknown Source)
	at java.util.ArrayList.get(Unknown Source)
	at com.focus.Pages.SanityFAReportsPage.CheckPrintAndCustomiseOptionnInvendorDetailsVendorDetailsAgeingByDueDateReport(SanityFAReportsPage.java:31354)
	at com.focus.testcases.SanityFAReportsTest.CheckPrintAndCustomiseOptionnInvendorDetailsVendorDetailsAgeingByDueDateReport(SanityFAReportsTest.java:1616)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.CheckPrintAndCustomiseOptionnInvendorDetailsVendorDetailsAgeingByDueDateReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- CheckPrintAndCustomiseOptionnInvendorDetailsVendorDetailsAgeingByDueDateReport -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="96" started-at="2023-01-03T22:43:23Z" finished-at="2023-01-03T22:43:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CheckPrintAndCustomiseOptionnInvendorDetailsVendorDetailsAgeingByDueDateReport status=FAILURE method=SanityFAReportsTest.CheckPrintAndCustomiseOptionnInvendorDetailsVendorDetailsAgeingByDueDateReport()[pri:301, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.CheckPrintAndCustomiseOptionnInvendorDetailsVendorDetailsAgeingByDueDateReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:43:23Z" finished-at="2023-01-03T22:43:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkVendorDetailsAgeingByDueDateReportBackTrackOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkVendorDetailsAgeingByDueDateReportBackTrackOption()[pri:302, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkVendorDetailsAgeingByDueDateReportBackTrackOption" duration-ms="14630" started-at="2023-01-03T22:43:23Z" finished-at="2023-01-03T22:43:37Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkVendorDetailsAgeingByDueDateReportBackTrackOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkVendorDetailsAgeingByDueDateReportBackTrackOption -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:43:37Z" finished-at="2023-01-03T22:43:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkVendorDetailsAgeingByDueDateReportBackTrackOption status=SUCCESS method=SanityFAReportsTest.checkVendorDetailsAgeingByDueDateReportBackTrackOption()[pri:302, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkVendorDetailsAgeingByDueDateReportBackTrackOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:43:37Z" finished-at="2023-01-03T22:43:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkVendorDetailsVendorOverdueAnalysisReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.text.ParseException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="FAIL" signature="checkVendorDetailsVendorOverdueAnalysisReport()[pri:303, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkVendorDetailsVendorOverdueAnalysisReport" duration-ms="44952" started-at="2023-01-03T22:43:37Z" finished-at="2023-01-03T22:44:22Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at com.focus.testcases.SanityFAReportsTest.checkVendorDetailsVendorOverdueAnalysisReport(SanityFAReportsTest.java:1634)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkVendorDetailsVendorOverdueAnalysisReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkVendorDetailsVendorOverdueAnalysisReport -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="149" started-at="2023-01-03T22:44:22Z" finished-at="2023-01-03T22:44:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkVendorDetailsVendorOverdueAnalysisReport status=FAILURE method=SanityFAReportsTest.checkVendorDetailsVendorOverdueAnalysisReport()[pri:303, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkVendorDetailsVendorOverdueAnalysisReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="CheckPrintAndCustomiseOptionnInVendorDetailsVendorOverdueAnalysisReport()[pri:304, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="CheckPrintAndCustomiseOptionnInVendorDetailsVendorOverdueAnalysisReport" duration-ms="23831" started-at="2023-01-03T22:44:23Z" finished-at="2023-01-03T22:44:46Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.CheckPrintAndCustomiseOptionnInVendorDetailsVendorOverdueAnalysisReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- CheckPrintAndCustomiseOptionnInVendorDetailsVendorOverdueAnalysisReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:44:23Z" finished-at="2023-01-03T22:44:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.CheckPrintAndCustomiseOptionnInVendorDetailsVendorOverdueAnalysisReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:44:46Z" finished-at="2023-01-03T22:44:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkVendorOverdueAnalysisReportBackTrackOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:44:46Z" finished-at="2023-01-03T22:44:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CheckPrintAndCustomiseOptionnInVendorDetailsVendorOverdueAnalysisReport status=SUCCESS method=SanityFAReportsTest.CheckPrintAndCustomiseOptionnInVendorDetailsVendorOverdueAnalysisReport()[pri:304, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.CheckPrintAndCustomiseOptionnInVendorDetailsVendorOverdueAnalysisReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkVendorOverdueAnalysisReportBackTrackOption()[pri:305, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkVendorOverdueAnalysisReportBackTrackOption" duration-ms="14678" started-at="2023-01-03T22:44:46Z" finished-at="2023-01-03T22:45:01Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkVendorOverdueAnalysisReportBackTrackOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkVendorOverdueAnalysisReportBackTrackOption -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:45:01Z" finished-at="2023-01-03T22:45:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkVendorOverdueAnalysisReportBackTrackOption status=SUCCESS method=SanityFAReportsTest.checkVendorOverdueAnalysisReportBackTrackOption()[pri:305, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkVendorOverdueAnalysisReportBackTrackOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkVendorSummeryVendorAgeingSummaryReport()[pri:306, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkVendorSummeryVendorAgeingSummaryReport" duration-ms="51186" started-at="2023-01-03T22:45:01Z" finished-at="2023-01-03T22:45:52Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkVendorSummeryVendorAgeingSummaryReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkVendorSummeryVendorAgeingSummaryReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:45:01Z" finished-at="2023-01-03T22:45:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkVendorSummeryVendorAgeingSummaryReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T22:45:52Z" finished-at="2023-01-03T22:45:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkSummeryVendorAgeingSummaryReportBackTrackOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:45:52Z" finished-at="2023-01-03T22:45:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkVendorSummeryVendorAgeingSummaryReport status=SUCCESS method=SanityFAReportsTest.checkVendorSummeryVendorAgeingSummaryReport()[pri:306, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkVendorSummeryVendorAgeingSummaryReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkSummeryVendorAgeingSummaryReportBackTrackOption()[pri:308, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkSummeryVendorAgeingSummaryReportBackTrackOption" duration-ms="56908" started-at="2023-01-03T22:45:52Z" finished-at="2023-01-03T22:46:49Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkSummeryVendorAgeingSummaryReportBackTrackOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkSummeryVendorAgeingSummaryReportBackTrackOption -->
        <test-method status="FAIL" signature="checkVendorSummeryVendorSummaryAgeingByDueDateReport()[pri:309, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkVendorSummeryVendorSummaryAgeingByDueDateReport" duration-ms="42350" started-at="2023-01-03T22:46:49Z" finished-at="2023-01-03T22:47:32Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at com.focus.testcases.SanityFAReportsTest.checkVendorSummeryVendorSummaryAgeingByDueDateReport(SanityFAReportsTest.java:1684)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkVendorSummeryVendorSummaryAgeingByDueDateReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkVendorSummeryVendorSummaryAgeingByDueDateReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:46:49Z" finished-at="2023-01-03T22:46:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkVendorSummeryVendorSummaryAgeingByDueDateReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:46:49Z" finished-at="2023-01-03T22:46:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkSummeryVendorAgeingSummaryReportBackTrackOption status=SUCCESS method=SanityFAReportsTest.checkSummeryVendorAgeingSummaryReportBackTrackOption()[pri:308, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkSummeryVendorAgeingSummaryReportBackTrackOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="112" started-at="2023-01-03T22:47:32Z" finished-at="2023-01-03T22:47:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkVendorSummeryVendorSummaryAgeingByDueDateReport status=FAILURE method=SanityFAReportsTest.checkVendorSummeryVendorSummaryAgeingByDueDateReport()[pri:309, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkVendorSummeryVendorSummaryAgeingByDueDateReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkVendorSummeryVendorSummaryAgeingByDueDateReportBackTrackOption()[pri:311, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkVendorSummeryVendorSummaryAgeingByDueDateReportBackTrackOption" duration-ms="56808" started-at="2023-01-03T22:47:32Z" finished-at="2023-01-03T22:48:28Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkVendorSummeryVendorSummaryAgeingByDueDateReportBackTrackOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkVendorSummeryVendorSummaryAgeingByDueDateReportBackTrackOption -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:47:32Z" finished-at="2023-01-03T22:47:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkVendorSummeryVendorSummaryAgeingByDueDateReportBackTrackOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:48:28Z" finished-at="2023-01-03T22:48:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkVendorSummeryVendorSummaryAgeingByDueDateReportBackTrackOption status=SUCCESS method=SanityFAReportsTest.checkVendorSummeryVendorSummaryAgeingByDueDateReportBackTrackOption()[pri:311, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkVendorSummeryVendorSummaryAgeingByDueDateReportBackTrackOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkVendorSummeryVendorOverdueSummaryReport()[pri:312, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkVendorSummeryVendorOverdueSummaryReport" duration-ms="42326" started-at="2023-01-03T22:48:28Z" finished-at="2023-01-03T22:49:11Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkVendorSummeryVendorOverdueSummaryReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkVendorSummeryVendorOverdueSummaryReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:48:28Z" finished-at="2023-01-03T22:48:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkVendorSummeryVendorOverdueSummaryReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkVendorVendorSummeryVendorOverdueSummaryReportBackTrackOption()[pri:313, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkVendorVendorSummeryVendorOverdueSummaryReportBackTrackOption" duration-ms="55830" started-at="2023-01-03T22:49:11Z" finished-at="2023-01-03T22:50:07Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkVendorVendorSummeryVendorOverdueSummaryReportBackTrackOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkVendorVendorSummeryVendorOverdueSummaryReportBackTrackOption -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:49:11Z" finished-at="2023-01-03T22:49:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkVendorSummeryVendorOverdueSummaryReport status=SUCCESS method=SanityFAReportsTest.checkVendorSummeryVendorOverdueSummaryReport()[pri:312, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkVendorSummeryVendorOverdueSummaryReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:49:11Z" finished-at="2023-01-03T22:49:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkVendorVendorSummeryVendorOverdueSummaryReportBackTrackOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:50:07Z" finished-at="2023-01-03T22:50:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkVendorVendorSummeryVendorOverdueSummaryReportBackTrackOption status=SUCCESS method=SanityFAReportsTest.checkVendorVendorSummeryVendorOverdueSummaryReportBackTrackOption()[pri:313, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkVendorVendorSummeryVendorOverdueSummaryReportBackTrackOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="FAIL" signature="checkVendorSummeryVendorBillWiseSummaryReport()[pri:314, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkVendorSummeryVendorBillWiseSummaryReport" duration-ms="40998" started-at="2023-01-03T22:50:07Z" finished-at="2023-01-03T22:50:48Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at com.focus.testcases.SanityFAReportsTest.checkVendorSummeryVendorBillWiseSummaryReport(SanityFAReportsTest.java:1732)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkVendorSummeryVendorBillWiseSummaryReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkVendorSummeryVendorBillWiseSummaryReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:50:07Z" finished-at="2023-01-03T22:50:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkVendorSummeryVendorBillWiseSummaryReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="96" started-at="2023-01-03T22:50:48Z" finished-at="2023-01-03T22:50:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkVendorSummeryVendorBillWiseSummaryReport status=FAILURE method=SanityFAReportsTest.checkVendorSummeryVendorBillWiseSummaryReport()[pri:314, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkVendorSummeryVendorBillWiseSummaryReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T22:50:48Z" finished-at="2023-01-03T22:50:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkVendorSummeryVendorBillwiseSummaryReportBackTrackOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkVendorSummeryVendorBillwiseSummaryReportBackTrackOption()[pri:316, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkVendorSummeryVendorBillwiseSummaryReportBackTrackOption" duration-ms="55795" started-at="2023-01-03T22:50:48Z" finished-at="2023-01-03T22:51:44Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkVendorSummeryVendorBillwiseSummaryReportBackTrackOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkVendorSummeryVendorBillwiseSummaryReportBackTrackOption -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:51:44Z" finished-at="2023-01-03T22:51:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrailBalanceReportwithFilterOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:51:44Z" finished-at="2023-01-03T22:51:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkVendorSummeryVendorBillwiseSummaryReportBackTrackOption status=SUCCESS method=SanityFAReportsTest.checkVendorSummeryVendorBillwiseSummaryReportBackTrackOption()[pri:316, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkVendorSummeryVendorBillwiseSummaryReportBackTrackOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkTrailBalanceReportwithFilterOption()[pri:321, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrailBalanceReportwithFilterOption" duration-ms="69065" started-at="2023-01-03T22:51:44Z" finished-at="2023-01-03T22:52:53Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrailBalanceReportwithFilterOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrailBalanceReportwithFilterOption -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T22:52:53Z" finished-at="2023-01-03T22:52:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrailBalanceAnalyzeOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:52:53Z" finished-at="2023-01-03T22:52:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrailBalanceReportwithFilterOption status=SUCCESS method=SanityFAReportsTest.checkTrailBalanceReportwithFilterOption()[pri:321, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrailBalanceReportwithFilterOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="FAIL" signature="checkTrailBalanceAnalyzeOption()[pri:324, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrailBalanceAnalyzeOption" duration-ms="45714" started-at="2023-01-03T22:52:53Z" finished-at="2023-01-03T22:53:38Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at com.focus.testcases.SanityFAReportsTest.checkTrailBalanceAnalyzeOption(SanityFAReportsTest.java:1791)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrailBalanceAnalyzeOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrailBalanceAnalyzeOption -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="124" started-at="2023-01-03T22:53:38Z" finished-at="2023-01-03T22:53:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrailBalanceAnalyzeOption status=FAILURE method=SanityFAReportsTest.checkTrailBalanceAnalyzeOption()[pri:324, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrailBalanceAnalyzeOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="FAIL" signature="checkTrailBalanceAnalyzeReportExportExcelOption()[pri:325, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrailBalanceAnalyzeReportExportExcelOption" duration-ms="48399" started-at="2023-01-03T22:53:38Z" finished-at="2023-01-03T22:54:27Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[Cannot get a NUMERIC value from a STRING cell]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: Cannot get a NUMERIC value from a STRING cell
	at org.apache.poi.xssf.usermodel.XSSFCell.typeMismatch(XSSFCell.java:1077)
	at org.apache.poi.xssf.usermodel.XSSFCell.getNumericCellValue(XSSFCell.java:307)
	at org.apache.poi.xssf.usermodel.XSSFCell.getDateCellValue(XSSFCell.java:791)
	at com.focus.Pages.SanityFAReportsPage.checkTrailBalanceAnalyzeReportExportExcelOption(SanityFAReportsPage.java:37437)
	at com.focus.testcases.SanityFAReportsTest.checkTrailBalanceAnalyzeReportExportExcelOption(SanityFAReportsTest.java:1799)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrailBalanceAnalyzeReportExportExcelOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrailBalanceAnalyzeReportExportExcelOption -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:53:38Z" finished-at="2023-01-03T22:53:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrailBalanceAnalyzeReportExportExcelOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="105" started-at="2023-01-03T22:54:27Z" finished-at="2023-01-03T22:54:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrailBalanceAnalyzeReportExportExcelOption status=FAILURE method=SanityFAReportsTest.checkTrailBalanceAnalyzeReportExportExcelOption()[pri:325, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrailBalanceAnalyzeReportExportExcelOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T22:54:27Z" finished-at="2023-01-03T22:54:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrailBalanceAnalyzeReportExportPDFOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="FAIL" signature="checkTrailBalanceAnalyzeReportExportPDFOption()[pri:326, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrailBalanceAnalyzeReportExportPDFOption" duration-ms="24302" started-at="2023-01-03T22:54:27Z" finished-at="2023-01-03T22:54:51Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at com.focus.testcases.SanityFAReportsTest.checkTrailBalanceAnalyzeReportExportPDFOption(SanityFAReportsTest.java:1816)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrailBalanceAnalyzeReportExportPDFOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrailBalanceAnalyzeReportExportPDFOption -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="104" started-at="2023-01-03T22:54:51Z" finished-at="2023-01-03T22:54:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrailBalanceAnalyzeReportExportPDFOption status=FAILURE method=SanityFAReportsTest.checkTrailBalanceAnalyzeReportExportPDFOption()[pri:326, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrailBalanceAnalyzeReportExportPDFOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:54:51Z" finished-at="2023-01-03T22:54:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrailBalanceAnalyzeReportPrintOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkTrailBalanceAnalyzeReportPrintOption()[pri:328, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrailBalanceAnalyzeReportPrintOption" duration-ms="11888" started-at="2023-01-03T22:54:51Z" finished-at="2023-01-03T22:55:03Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrailBalanceAnalyzeReportPrintOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrailBalanceAnalyzeReportPrintOption -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:55:03Z" finished-at="2023-01-03T22:55:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrailBalanceAnalyzeReportPrintOption status=SUCCESS method=SanityFAReportsTest.checkTrailBalanceAnalyzeReportPrintOption()[pri:328, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrailBalanceAnalyzeReportPrintOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkTrailBalanceAnalyzeReportSaveOption()[pri:329, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrailBalanceAnalyzeReportSaveOption" duration-ms="8851" started-at="2023-01-03T22:55:03Z" finished-at="2023-01-03T22:55:12Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrailBalanceAnalyzeReportSaveOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrailBalanceAnalyzeReportSaveOption -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:55:03Z" finished-at="2023-01-03T22:55:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrailBalanceAnalyzeReportSaveOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkTrailBalanceAnalyzeOptionwithoutFilter()[pri:330, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrailBalanceAnalyzeOptionwithoutFilter" duration-ms="43191" started-at="2023-01-03T22:55:12Z" finished-at="2023-01-03T22:55:55Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrailBalanceAnalyzeOptionwithoutFilter]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrailBalanceAnalyzeOptionwithoutFilter -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:55:12Z" finished-at="2023-01-03T22:55:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrailBalanceAnalyzeOptionwithoutFilter() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:55:12Z" finished-at="2023-01-03T22:55:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrailBalanceAnalyzeReportSaveOption status=SUCCESS method=SanityFAReportsTest.checkTrailBalanceAnalyzeReportSaveOption()[pri:329, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrailBalanceAnalyzeReportSaveOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:55:55Z" finished-at="2023-01-03T22:55:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrailBalanceAnalyzeOptionwithoutFilter status=SUCCESS method=SanityFAReportsTest.checkTrailBalanceAnalyzeOptionwithoutFilter()[pri:330, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrailBalanceAnalyzeOptionwithoutFilter]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T22:55:55Z" finished-at="2023-01-03T22:55:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkLoginWithUserAllOptionsST() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkLoginWithUserAllOptionsST()[pri:331, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkLoginWithUserAllOptionsST" duration-ms="15165" started-at="2023-01-03T22:55:55Z" finished-at="2023-01-03T22:56:10Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkLoginWithUserAllOptionsST]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkLoginWithUserAllOptionsST -->
        <test-method status="PASS" signature="checkTrailBalanceReportwithFilterOptionWithUserAllOptionsST()[pri:332, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrailBalanceReportwithFilterOptionWithUserAllOptionsST" duration-ms="57908" started-at="2023-01-03T22:56:10Z" finished-at="2023-01-03T22:57:08Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrailBalanceReportwithFilterOptionWithUserAllOptionsST]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrailBalanceReportwithFilterOptionWithUserAllOptionsST -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:56:10Z" finished-at="2023-01-03T22:56:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrailBalanceReportwithFilterOptionWithUserAllOptionsST() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:56:10Z" finished-at="2023-01-03T22:56:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkLoginWithUserAllOptionsST status=SUCCESS method=SanityFAReportsTest.checkLoginWithUserAllOptionsST()[pri:331, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkLoginWithUserAllOptionsST]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T22:57:08Z" finished-at="2023-01-03T22:57:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrailBalanceAnalyzeOptionWithUserAllOptionsST() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:57:08Z" finished-at="2023-01-03T22:57:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrailBalanceReportwithFilterOptionWithUserAllOptionsST status=SUCCESS method=SanityFAReportsTest.checkTrailBalanceReportwithFilterOptionWithUserAllOptionsST()[pri:332, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrailBalanceReportwithFilterOptionWithUserAllOptionsST]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkTrailBalanceAnalyzeOptionWithUserAllOptionsST()[pri:333, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrailBalanceAnalyzeOptionWithUserAllOptionsST" duration-ms="12213" started-at="2023-01-03T22:57:08Z" finished-at="2023-01-03T22:57:21Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrailBalanceAnalyzeOptionWithUserAllOptionsST]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrailBalanceAnalyzeOptionWithUserAllOptionsST -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:57:21Z" finished-at="2023-01-03T22:57:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrailBalanceAnalyzeReportExportExcelOptionWithUserAllOptionsST() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:57:21Z" finished-at="2023-01-03T22:57:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrailBalanceAnalyzeOptionWithUserAllOptionsST status=SUCCESS method=SanityFAReportsTest.checkTrailBalanceAnalyzeOptionWithUserAllOptionsST()[pri:333, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrailBalanceAnalyzeOptionWithUserAllOptionsST]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkTrailBalanceAnalyzeReportExportExcelOptionWithUserAllOptionsST()[pri:334, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrailBalanceAnalyzeReportExportExcelOptionWithUserAllOptionsST" duration-ms="19598" started-at="2023-01-03T22:57:21Z" finished-at="2023-01-03T22:57:40Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrailBalanceAnalyzeReportExportExcelOptionWithUserAllOptionsST]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrailBalanceAnalyzeReportExportExcelOptionWithUserAllOptionsST -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:57:40Z" finished-at="2023-01-03T22:57:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrailBalanceAnalyzeReportExportPDFOptionWithUserAllOptionsST() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="FAIL" signature="checkTrailBalanceAnalyzeReportExportPDFOptionWithUserAllOptionsST()[pri:335, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrailBalanceAnalyzeReportExportPDFOptionWithUserAllOptionsST" duration-ms="24269" started-at="2023-01-03T22:57:40Z" finished-at="2023-01-03T22:58:04Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at com.focus.testcases.SanityFAReportsTest.checkTrailBalanceAnalyzeReportExportPDFOptionWithUserAllOptionsST(SanityFAReportsTest.java:1888)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrailBalanceAnalyzeReportExportPDFOptionWithUserAllOptionsST]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrailBalanceAnalyzeReportExportPDFOptionWithUserAllOptionsST -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:57:40Z" finished-at="2023-01-03T22:57:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrailBalanceAnalyzeReportExportExcelOptionWithUserAllOptionsST status=SUCCESS method=SanityFAReportsTest.checkTrailBalanceAnalyzeReportExportExcelOptionWithUserAllOptionsST()[pri:334, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrailBalanceAnalyzeReportExportExcelOptionWithUserAllOptionsST]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="103" started-at="2023-01-03T22:58:04Z" finished-at="2023-01-03T22:58:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrailBalanceAnalyzeReportExportPDFOptionWithUserAllOptionsST status=FAILURE method=SanityFAReportsTest.checkTrailBalanceAnalyzeReportExportPDFOptionWithUserAllOptionsST()[pri:335, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrailBalanceAnalyzeReportExportPDFOptionWithUserAllOptionsST]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:58:05Z" finished-at="2023-01-03T22:58:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrailBalanceAnalyzeReportPrintOptionWithUserAllOptionsST() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkTrailBalanceAnalyzeReportPrintOptionWithUserAllOptionsST()[pri:336, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrailBalanceAnalyzeReportPrintOptionWithUserAllOptionsST" duration-ms="11764" started-at="2023-01-03T22:58:05Z" finished-at="2023-01-03T22:58:16Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrailBalanceAnalyzeReportPrintOptionWithUserAllOptionsST]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrailBalanceAnalyzeReportPrintOptionWithUserAllOptionsST -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T22:58:16Z" finished-at="2023-01-03T22:58:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrailBalanceAnalyzeReportSaveOptionWithUserAllOptionsST() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:58:16Z" finished-at="2023-01-03T22:58:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrailBalanceAnalyzeReportPrintOptionWithUserAllOptionsST status=SUCCESS method=SanityFAReportsTest.checkTrailBalanceAnalyzeReportPrintOptionWithUserAllOptionsST()[pri:336, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrailBalanceAnalyzeReportPrintOptionWithUserAllOptionsST]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkTrailBalanceAnalyzeReportSaveOptionWithUserAllOptionsST()[pri:337, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrailBalanceAnalyzeReportSaveOptionWithUserAllOptionsST" duration-ms="8875" started-at="2023-01-03T22:58:16Z" finished-at="2023-01-03T22:58:25Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrailBalanceAnalyzeReportSaveOptionWithUserAllOptionsST]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrailBalanceAnalyzeReportSaveOptionWithUserAllOptionsST -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:58:25Z" finished-at="2023-01-03T22:58:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrailBalanceAnalyzeReportSaveOptionWithUserAllOptionsST status=SUCCESS method=SanityFAReportsTest.checkTrailBalanceAnalyzeReportSaveOptionWithUserAllOptionsST()[pri:337, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrailBalanceAnalyzeReportSaveOptionWithUserAllOptionsST]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T22:58:25Z" finished-at="2023-01-03T22:58:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkSavedReportatUserAllOptionsST() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkSavedReportatUserAllOptionsST()[pri:338, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkSavedReportatUserAllOptionsST" duration-ms="7883" started-at="2023-01-03T22:58:25Z" finished-at="2023-01-03T22:58:33Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkSavedReportatUserAllOptionsST]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkSavedReportatUserAllOptionsST -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:58:33Z" finished-at="2023-01-03T22:58:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkSavedReportatUserAllOptionsST status=SUCCESS method=SanityFAReportsTest.checkSavedReportatUserAllOptionsST()[pri:338, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkSavedReportatUserAllOptionsST]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T22:58:33Z" finished-at="2023-01-03T22:58:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkLoginWithSU() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkLoginWithSU()[pri:339, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkLoginWithSU" duration-ms="13896" started-at="2023-01-03T22:58:33Z" finished-at="2023-01-03T22:58:47Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkLoginWithSU]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkLoginWithSU -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T22:58:47Z" finished-at="2023-01-03T22:58:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkProfitAndLossReportwithFilterOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:58:47Z" finished-at="2023-01-03T22:58:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkLoginWithSU status=SUCCESS method=SanityFAReportsTest.checkLoginWithSU()[pri:339, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkLoginWithSU]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="FAIL" signature="checkProfitAndLossReportwithFilterOption()[pri:340, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkProfitAndLossReportwithFilterOption" duration-ms="26255" started-at="2023-01-03T22:58:47Z" finished-at="2023-01-03T22:59:13Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at com.focus.testcases.SanityFAReportsTest.checkProfitAndLossReportwithFilterOption(SanityFAReportsTest.java:1930)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkProfitAndLossReportwithFilterOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkProfitAndLossReportwithFilterOption -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="102" started-at="2023-01-03T22:59:13Z" finished-at="2023-01-03T22:59:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkProfitAndLossReportwithFilterOption status=FAILURE method=SanityFAReportsTest.checkProfitAndLossReportwithFilterOption()[pri:340, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkProfitAndLossReportwithFilterOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="FAIL" signature="checkProfitLossAnalyzeOption()[pri:341, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkProfitLossAnalyzeOption" duration-ms="12491" started-at="2023-01-03T22:59:13Z" finished-at="2023-01-03T22:59:26Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at com.focus.testcases.SanityFAReportsTest.checkProfitLossAnalyzeOption(SanityFAReportsTest.java:1940)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkProfitLossAnalyzeOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkProfitLossAnalyzeOption -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:59:13Z" finished-at="2023-01-03T22:59:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkProfitLossAnalyzeOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="98" started-at="2023-01-03T22:59:26Z" finished-at="2023-01-03T22:59:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkProfitLossAnalyzeOption status=FAILURE method=SanityFAReportsTest.checkProfitLossAnalyzeOption()[pri:341, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkProfitLossAnalyzeOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:59:26Z" finished-at="2023-01-03T22:59:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkProfitLossAnalyzeReportExportExcelOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkProfitLossAnalyzeReportExportExcelOption()[pri:342, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkProfitLossAnalyzeReportExportExcelOption" duration-ms="19632" started-at="2023-01-03T22:59:26Z" finished-at="2023-01-03T22:59:46Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkProfitLossAnalyzeReportExportExcelOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkProfitLossAnalyzeReportExportExcelOption -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T22:59:46Z" finished-at="2023-01-03T22:59:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkProfitLossAnalyzeReportExportExcelOption status=SUCCESS method=SanityFAReportsTest.checkProfitLossAnalyzeReportExportExcelOption()[pri:342, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkProfitLossAnalyzeReportExportExcelOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="FAIL" signature="checkProfitLossAnalyzeReportExportPDFOption()[pri:343, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkProfitLossAnalyzeReportExportPDFOption" duration-ms="25265" started-at="2023-01-03T22:59:46Z" finished-at="2023-01-03T23:00:11Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at com.focus.testcases.SanityFAReportsTest.checkProfitLossAnalyzeReportExportPDFOption(SanityFAReportsTest.java:1956)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkProfitLossAnalyzeReportExportPDFOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkProfitLossAnalyzeReportExportPDFOption -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T22:59:46Z" finished-at="2023-01-03T22:59:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkProfitLossAnalyzeReportExportPDFOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="105" started-at="2023-01-03T23:00:11Z" finished-at="2023-01-03T23:00:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkProfitLossAnalyzeReportExportPDFOption status=FAILURE method=SanityFAReportsTest.checkProfitLossAnalyzeReportExportPDFOption()[pri:343, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkProfitLossAnalyzeReportExportPDFOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:00:11Z" finished-at="2023-01-03T23:00:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkProfitLossAnalyzeReportPrintOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkProfitLossAnalyzeReportPrintOption()[pri:345, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkProfitLossAnalyzeReportPrintOption" duration-ms="11777" started-at="2023-01-03T23:00:11Z" finished-at="2023-01-03T23:00:23Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkProfitLossAnalyzeReportPrintOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkProfitLossAnalyzeReportPrintOption -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:00:23Z" finished-at="2023-01-03T23:00:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkProfitLossAnalyzeReportSaveOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:00:23Z" finished-at="2023-01-03T23:00:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkProfitLossAnalyzeReportPrintOption status=SUCCESS method=SanityFAReportsTest.checkProfitLossAnalyzeReportPrintOption()[pri:345, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkProfitLossAnalyzeReportPrintOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkProfitLossAnalyzeReportSaveOption()[pri:346, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkProfitLossAnalyzeReportSaveOption" duration-ms="10976" started-at="2023-01-03T23:00:23Z" finished-at="2023-01-03T23:00:34Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkProfitLossAnalyzeReportSaveOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkProfitLossAnalyzeReportSaveOption -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T23:00:34Z" finished-at="2023-01-03T23:00:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkProfitLossAnalyzeReportSaveOption status=SUCCESS method=SanityFAReportsTest.checkProfitLossAnalyzeReportSaveOption()[pri:346, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkProfitLossAnalyzeReportSaveOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="FAIL" signature="checkProfitLossReportwithtakingfilterOptionasNotEqualTo()[pri:347, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkProfitLossReportwithtakingfilterOptionasNotEqualTo" duration-ms="30272" started-at="2023-01-03T23:00:34Z" finished-at="2023-01-03T23:01:04Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at com.focus.testcases.SanityFAReportsTest.checkProfitLossReportwithtakingfilterOptionasNotEqualTo(SanityFAReportsTest.java:1986)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkProfitLossReportwithtakingfilterOptionasNotEqualTo]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkProfitLossReportwithtakingfilterOptionasNotEqualTo -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:00:34Z" finished-at="2023-01-03T23:00:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkProfitLossReportwithtakingfilterOptionasNotEqualTo() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="105" started-at="2023-01-03T23:01:04Z" finished-at="2023-01-03T23:01:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkProfitLossReportwithtakingfilterOptionasNotEqualTo status=FAILURE method=SanityFAReportsTest.checkProfitLossReportwithtakingfilterOptionasNotEqualTo()[pri:347, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkProfitLossReportwithtakingfilterOptionasNotEqualTo]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="FAIL" signature="checkBalanceSheetReportwithFilterOption()[pri:348, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkBalanceSheetReportwithFilterOption" duration-ms="25787" started-at="2023-01-03T23:01:04Z" finished-at="2023-01-03T23:01:30Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at com.focus.testcases.SanityFAReportsTest.checkBalanceSheetReportwithFilterOption(SanityFAReportsTest.java:1999)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkBalanceSheetReportwithFilterOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkBalanceSheetReportwithFilterOption -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:01:04Z" finished-at="2023-01-03T23:01:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkBalanceSheetReportwithFilterOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="118" started-at="2023-01-03T23:01:30Z" finished-at="2023-01-03T23:01:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkBalanceSheetReportwithFilterOption status=FAILURE method=SanityFAReportsTest.checkBalanceSheetReportwithFilterOption()[pri:348, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkBalanceSheetReportwithFilterOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:01:30Z" finished-at="2023-01-03T23:01:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkBalanceSheetAnalyzeOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="FAIL" signature="checkBalanceSheetAnalyzeOption()[pri:349, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkBalanceSheetAnalyzeOption" duration-ms="12413" started-at="2023-01-03T23:01:30Z" finished-at="2023-01-03T23:01:42Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at com.focus.testcases.SanityFAReportsTest.checkBalanceSheetAnalyzeOption(SanityFAReportsTest.java:2007)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkBalanceSheetAnalyzeOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkBalanceSheetAnalyzeOption -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="107" started-at="2023-01-03T23:01:42Z" finished-at="2023-01-03T23:01:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkBalanceSheetAnalyzeOption status=FAILURE method=SanityFAReportsTest.checkBalanceSheetAnalyzeOption()[pri:349, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkBalanceSheetAnalyzeOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T23:01:42Z" finished-at="2023-01-03T23:01:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkBalanceSheetAnalyzeReportExportExcelOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkBalanceSheetAnalyzeReportExportExcelOption()[pri:350, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkBalanceSheetAnalyzeReportExportExcelOption" duration-ms="19616" started-at="2023-01-03T23:01:42Z" finished-at="2023-01-03T23:02:02Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkBalanceSheetAnalyzeReportExportExcelOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkBalanceSheetAnalyzeReportExportExcelOption -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T23:02:02Z" finished-at="2023-01-03T23:02:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkBalanceSheetAnalyzeReportExportExcelOption status=SUCCESS method=SanityFAReportsTest.checkBalanceSheetAnalyzeReportExportExcelOption()[pri:350, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkBalanceSheetAnalyzeReportExportExcelOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:02:02Z" finished-at="2023-01-03T23:02:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkBalanceSheetAnalyzeReportExportPDFOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="FAIL" signature="checkBalanceSheetAnalyzeReportExportPDFOption()[pri:351, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkBalanceSheetAnalyzeReportExportPDFOption" duration-ms="24257" started-at="2023-01-03T23:02:02Z" finished-at="2023-01-03T23:02:26Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at com.focus.testcases.SanityFAReportsTest.checkBalanceSheetAnalyzeReportExportPDFOption(SanityFAReportsTest.java:2023)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkBalanceSheetAnalyzeReportExportPDFOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkBalanceSheetAnalyzeReportExportPDFOption -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="105" started-at="2023-01-03T23:02:26Z" finished-at="2023-01-03T23:02:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkBalanceSheetAnalyzeReportExportPDFOption status=FAILURE method=SanityFAReportsTest.checkBalanceSheetAnalyzeReportExportPDFOption()[pri:351, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkBalanceSheetAnalyzeReportExportPDFOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:02:26Z" finished-at="2023-01-03T23:02:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkBalanceSheetAnalyzeReportPrintOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkBalanceSheetAnalyzeReportPrintOption()[pri:352, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkBalanceSheetAnalyzeReportPrintOption" duration-ms="11776" started-at="2023-01-03T23:02:26Z" finished-at="2023-01-03T23:02:38Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkBalanceSheetAnalyzeReportPrintOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkBalanceSheetAnalyzeReportPrintOption -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:02:38Z" finished-at="2023-01-03T23:02:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkBalanceSheetAnalyzeReportPrintOption status=SUCCESS method=SanityFAReportsTest.checkBalanceSheetAnalyzeReportPrintOption()[pri:352, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkBalanceSheetAnalyzeReportPrintOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:02:38Z" finished-at="2023-01-03T23:02:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkBalanceSheetAnalyzeReportSaveOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkBalanceSheetAnalyzeReportSaveOption()[pri:353, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkBalanceSheetAnalyzeReportSaveOption" duration-ms="10971" started-at="2023-01-03T23:02:38Z" finished-at="2023-01-03T23:02:49Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkBalanceSheetAnalyzeReportSaveOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkBalanceSheetAnalyzeReportSaveOption -->
        <test-method status="PASS" signature="checkCustomerAgeingSummaryReportwithFilterOptionincludeMontlyAgeingChkBox()[pri:354, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkCustomerAgeingSummaryReportwithFilterOptionincludeMontlyAgeingChkBox" duration-ms="69735" started-at="2023-01-03T23:02:49Z" finished-at="2023-01-03T23:03:59Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomerAgeingSummaryReportwithFilterOptionincludeMontlyAgeingChkBox]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkCustomerAgeingSummaryReportwithFilterOptionincludeMontlyAgeingChkBox -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:02:49Z" finished-at="2023-01-03T23:02:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkBalanceSheetAnalyzeReportSaveOption status=SUCCESS method=SanityFAReportsTest.checkBalanceSheetAnalyzeReportSaveOption()[pri:353, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkBalanceSheetAnalyzeReportSaveOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:02:49Z" finished-at="2023-01-03T23:02:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkCustomerAgeingSummaryReportwithFilterOptionincludeMontlyAgeingChkBox() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:03:59Z" finished-at="2023-01-03T23:03:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkCustomerAgeingSummaryReportwithFilterOptionincludeMontlyAgeingChkBox status=SUCCESS method=SanityFAReportsTest.checkCustomerAgeingSummaryReportwithFilterOptionincludeMontlyAgeingChkBox()[pri:354, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkCustomerAgeingSummaryReportwithFilterOptionincludeMontlyAgeingChkBox]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkCustomerAgeingSummaryReportwithFilterOptionasAccountWithoutIncludeMothlyAgeingChkBox()[pri:355, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkCustomerAgeingSummaryReportwithFilterOptionasAccountWithoutIncludeMothlyAgeingChkBox" duration-ms="46746" started-at="2023-01-03T23:03:59Z" finished-at="2023-01-03T23:04:46Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomerAgeingSummaryReportwithFilterOptionasAccountWithoutIncludeMothlyAgeingChkBox]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkCustomerAgeingSummaryReportwithFilterOptionasAccountWithoutIncludeMothlyAgeingChkBox -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:03:59Z" finished-at="2023-01-03T23:03:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkCustomerAgeingSummaryReportwithFilterOptionasAccountWithoutIncludeMothlyAgeingChkBox() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkCustomerSummaryByDueDatewithFilterOptionincludeMonthlyAgeingChkBox()[pri:356, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkCustomerSummaryByDueDatewithFilterOptionincludeMonthlyAgeingChkBox" duration-ms="48532" started-at="2023-01-03T23:04:46Z" finished-at="2023-01-03T23:05:34Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomerSummaryByDueDatewithFilterOptionincludeMonthlyAgeingChkBox]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkCustomerSummaryByDueDatewithFilterOptionincludeMonthlyAgeingChkBox -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:04:46Z" finished-at="2023-01-03T23:04:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkCustomerAgeingSummaryReportwithFilterOptionasAccountWithoutIncludeMothlyAgeingChkBox status=SUCCESS method=SanityFAReportsTest.checkCustomerAgeingSummaryReportwithFilterOptionasAccountWithoutIncludeMothlyAgeingChkBox()[pri:355, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkCustomerAgeingSummaryReportwithFilterOptionasAccountWithoutIncludeMothlyAgeingChkBox]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:04:46Z" finished-at="2023-01-03T23:04:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkCustomerSummaryByDueDatewithFilterOptionincludeMonthlyAgeingChkBox() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:05:34Z" finished-at="2023-01-03T23:05:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkLoginWithUserAllOptionsSTforCustomer() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkLoginWithUserAllOptionsSTforCustomer()[pri:357, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkLoginWithUserAllOptionsSTforCustomer" duration-ms="15291" started-at="2023-01-03T23:05:34Z" finished-at="2023-01-03T23:05:49Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkLoginWithUserAllOptionsSTforCustomer]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkLoginWithUserAllOptionsSTforCustomer -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:05:34Z" finished-at="2023-01-03T23:05:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkCustomerSummaryByDueDatewithFilterOptionincludeMonthlyAgeingChkBox status=SUCCESS method=SanityFAReportsTest.checkCustomerSummaryByDueDatewithFilterOptionincludeMonthlyAgeingChkBox()[pri:356, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkCustomerSummaryByDueDatewithFilterOptionincludeMonthlyAgeingChkBox]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkCustomerAgeingSummaryReportwithFilterOptionincludeMontlyAgeingChkBoxWithUserAllOptionsST()[pri:358, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkCustomerAgeingSummaryReportwithFilterOptionincludeMontlyAgeingChkBoxWithUserAllOptionsST" duration-ms="52945" started-at="2023-01-03T23:05:49Z" finished-at="2023-01-03T23:06:42Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomerAgeingSummaryReportwithFilterOptionincludeMontlyAgeingChkBoxWithUserAllOptionsST]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkCustomerAgeingSummaryReportwithFilterOptionincludeMontlyAgeingChkBoxWithUserAllOptionsST -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:05:49Z" finished-at="2023-01-03T23:05:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkCustomerAgeingSummaryReportwithFilterOptionincludeMontlyAgeingChkBoxWithUserAllOptionsST() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:05:49Z" finished-at="2023-01-03T23:05:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkLoginWithUserAllOptionsSTforCustomer status=SUCCESS method=SanityFAReportsTest.checkLoginWithUserAllOptionsSTforCustomer()[pri:357, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkLoginWithUserAllOptionsSTforCustomer]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:06:42Z" finished-at="2023-01-03T23:06:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkCustomerAgeingSummaryReportwithFilterOptionincludeMontlyAgeingChkBoxWithUserAllOptionsST status=SUCCESS method=SanityFAReportsTest.checkCustomerAgeingSummaryReportwithFilterOptionincludeMontlyAgeingChkBoxWithUserAllOptionsST()[pri:358, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkCustomerAgeingSummaryReportwithFilterOptionincludeMontlyAgeingChkBoxWithUserAllOptionsST]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:06:42Z" finished-at="2023-01-03T23:06:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkCustomerAgeingSummaryReportwithFilterOptionasAccountWithoutIncludeMothlyAgeingChkBoxWithUserAllOptionsST() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkCustomerAgeingSummaryReportwithFilterOptionasAccountWithoutIncludeMothlyAgeingChkBoxWithUserAllOptionsST()[pri:359, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkCustomerAgeingSummaryReportwithFilterOptionasAccountWithoutIncludeMothlyAgeingChkBoxWithUserAllOptionsST" duration-ms="43801" started-at="2023-01-03T23:06:42Z" finished-at="2023-01-03T23:07:26Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomerAgeingSummaryReportwithFilterOptionasAccountWithoutIncludeMothlyAgeingChkBoxWithUserAllOptionsST]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkCustomerAgeingSummaryReportwithFilterOptionasAccountWithoutIncludeMothlyAgeingChkBoxWithUserAllOptionsST -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T23:07:26Z" finished-at="2023-01-03T23:07:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkCustomerAgeingSummaryReportwithFilterOptionasAccountWithoutIncludeMothlyAgeingChkBoxWithUserAllOptionsST status=SUCCESS method=SanityFAReportsTest.checkCustomerAgeingSummaryReportwithFilterOptionasAccountWithoutIncludeMothlyAgeingChkBoxWithUserAllOptionsST()[pri:359, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkCustomerAgeingSummaryReportwithFilterOptionasAccountWithoutIncludeMothlyAgeingChkBoxWithUserAllOptionsST]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="FAIL" signature="checkCustomerSummaryByDueDatewithFilterOptionincludeMonthlyAgeingChkBoxWithUserAllOptionsST()[pri:360, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkCustomerSummaryByDueDatewithFilterOptionincludeMonthlyAgeingChkBoxWithUserAllOptionsST" duration-ms="42456" started-at="2023-01-03T23:07:26Z" finished-at="2023-01-03T23:08:09Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at com.focus.testcases.SanityFAReportsTest.checkCustomerSummaryByDueDatewithFilterOptionincludeMonthlyAgeingChkBoxWithUserAllOptionsST(SanityFAReportsTest.java:2103)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomerSummaryByDueDatewithFilterOptionincludeMonthlyAgeingChkBoxWithUserAllOptionsST]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkCustomerSummaryByDueDatewithFilterOptionincludeMonthlyAgeingChkBoxWithUserAllOptionsST -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:07:26Z" finished-at="2023-01-03T23:07:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkCustomerSummaryByDueDatewithFilterOptionincludeMonthlyAgeingChkBoxWithUserAllOptionsST() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="132" started-at="2023-01-03T23:08:09Z" finished-at="2023-01-03T23:08:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkCustomerSummaryByDueDatewithFilterOptionincludeMonthlyAgeingChkBoxWithUserAllOptionsST status=FAILURE method=SanityFAReportsTest.checkCustomerSummaryByDueDatewithFilterOptionincludeMonthlyAgeingChkBoxWithUserAllOptionsST()[pri:360, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkCustomerSummaryByDueDatewithFilterOptionincludeMonthlyAgeingChkBoxWithUserAllOptionsST]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkCustomerStatementHeaderFieldsBeforeCustomization()[pri:361, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkCustomerStatementHeaderFieldsBeforeCustomization" duration-ms="39497" started-at="2023-01-03T23:08:09Z" finished-at="2023-01-03T23:08:48Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomerStatementHeaderFieldsBeforeCustomization]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkCustomerStatementHeaderFieldsBeforeCustomization -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:08:09Z" finished-at="2023-01-03T23:08:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkCustomerStatementHeaderFieldsBeforeCustomization() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:08:48Z" finished-at="2023-01-03T23:08:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkCustomerStatementHeaderFieldsBeforeCustomization status=SUCCESS method=SanityFAReportsTest.checkCustomerStatementHeaderFieldsBeforeCustomization()[pri:361, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkCustomerStatementHeaderFieldsBeforeCustomization]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T23:08:48Z" finished-at="2023-01-03T23:08:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkCustomerStatementwithCustomizationLevelFieldsReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkCustomerStatementwithCustomizationLevelFieldsReport()[pri:362, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkCustomerStatementwithCustomizationLevelFieldsReport" duration-ms="6739" started-at="2023-01-03T23:08:48Z" finished-at="2023-01-03T23:08:55Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomerStatementwithCustomizationLevelFieldsReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkCustomerStatementwithCustomizationLevelFieldsReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:08:55Z" finished-at="2023-01-03T23:08:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkAddingLevelFieldsunderCustomization() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:08:55Z" finished-at="2023-01-03T23:08:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkCustomerStatementwithCustomizationLevelFieldsReport status=SUCCESS method=SanityFAReportsTest.checkCustomerStatementwithCustomizationLevelFieldsReport()[pri:362, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkCustomerStatementwithCustomizationLevelFieldsReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="FAIL" signature="checkAddingLevelFieldsunderCustomization()[pri:363, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkAddingLevelFieldsunderCustomization" duration-ms="9258" started-at="2023-01-03T23:08:55Z" finished-at="2023-01-03T23:09:04Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at com.focus.testcases.SanityFAReportsTest.checkAddingLevelFieldsunderCustomization(SanityFAReportsTest.java:2137)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkAddingLevelFieldsunderCustomization]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkAddingLevelFieldsunderCustomization -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="119" started-at="2023-01-03T23:09:04Z" finished-at="2023-01-03T23:09:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkAddingLevelFieldsunderCustomization status=FAILURE method=SanityFAReportsTest.checkAddingLevelFieldsunderCustomization()[pri:363, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkAddingLevelFieldsunderCustomization]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:09:04Z" finished-at="2023-01-03T23:09:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkCustomerStatementHeaderDetailsAfterCustomization() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkCustomerStatementHeaderDetailsAfterCustomization()[pri:364, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkCustomerStatementHeaderDetailsAfterCustomization" duration-ms="6219" started-at="2023-01-03T23:09:04Z" finished-at="2023-01-03T23:09:11Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomerStatementHeaderDetailsAfterCustomization]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkCustomerStatementHeaderDetailsAfterCustomization -->
        <test-method status="PASS" signature="checkLoginUserAllOptionsST()[pri:365, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkLoginUserAllOptionsST" duration-ms="14587" started-at="2023-01-03T23:09:11Z" finished-at="2023-01-03T23:09:25Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkLoginUserAllOptionsST]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkLoginUserAllOptionsST -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:09:11Z" finished-at="2023-01-03T23:09:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkLoginUserAllOptionsST() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:09:11Z" finished-at="2023-01-03T23:09:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkCustomerStatementHeaderDetailsAfterCustomization status=SUCCESS method=SanityFAReportsTest.checkCustomerStatementHeaderDetailsAfterCustomization()[pri:364, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkCustomerStatementHeaderDetailsAfterCustomization]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T23:09:25Z" finished-at="2023-01-03T23:09:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkLoginUserAllOptionsST status=SUCCESS method=SanityFAReportsTest.checkLoginUserAllOptionsST()[pri:365, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkLoginUserAllOptionsST]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="FAIL" signature="checkProfitAndLossReportwithFilterOptionatUserAllOptionsST()[pri:366, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkProfitAndLossReportwithFilterOptionatUserAllOptionsST" duration-ms="24165" started-at="2023-01-03T23:09:25Z" finished-at="2023-01-03T23:09:49Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at com.focus.testcases.SanityFAReportsTest.checkProfitAndLossReportwithFilterOptionatUserAllOptionsST(SanityFAReportsTest.java:2164)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkProfitAndLossReportwithFilterOptionatUserAllOptionsST]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkProfitAndLossReportwithFilterOptionatUserAllOptionsST -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:09:25Z" finished-at="2023-01-03T23:09:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkProfitAndLossReportwithFilterOptionatUserAllOptionsST() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="131" started-at="2023-01-03T23:09:49Z" finished-at="2023-01-03T23:09:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkProfitAndLossReportwithFilterOptionatUserAllOptionsST status=FAILURE method=SanityFAReportsTest.checkProfitAndLossReportwithFilterOptionatUserAllOptionsST()[pri:366, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkProfitAndLossReportwithFilterOptionatUserAllOptionsST]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:09:50Z" finished-at="2023-01-03T23:09:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkProfitLossAnalyzeOptionatUserAllOptionsST() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="FAIL" signature="checkProfitLossAnalyzeOptionatUserAllOptionsST()[pri:367, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkProfitLossAnalyzeOptionatUserAllOptionsST" duration-ms="12442" started-at="2023-01-03T23:09:50Z" finished-at="2023-01-03T23:10:02Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at com.focus.testcases.SanityFAReportsTest.checkProfitLossAnalyzeOptionatUserAllOptionsST(SanityFAReportsTest.java:2174)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkProfitLossAnalyzeOptionatUserAllOptionsST]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkProfitLossAnalyzeOptionatUserAllOptionsST -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="97" started-at="2023-01-03T23:10:02Z" finished-at="2023-01-03T23:10:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkProfitLossAnalyzeOptionatUserAllOptionsST status=FAILURE method=SanityFAReportsTest.checkProfitLossAnalyzeOptionatUserAllOptionsST()[pri:367, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkProfitLossAnalyzeOptionatUserAllOptionsST]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T23:10:02Z" finished-at="2023-01-03T23:10:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkProfitLossAnalyzeReportExportExcelOptionatUserAllOptionsST() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkProfitLossAnalyzeReportExportExcelOptionatUserAllOptionsST()[pri:368, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkProfitLossAnalyzeReportExportExcelOptionatUserAllOptionsST" duration-ms="19612" started-at="2023-01-03T23:10:02Z" finished-at="2023-01-03T23:10:22Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkProfitLossAnalyzeReportExportExcelOptionatUserAllOptionsST]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkProfitLossAnalyzeReportExportExcelOptionatUserAllOptionsST -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T23:10:22Z" finished-at="2023-01-03T23:10:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkProfitLossAnalyzeReportExportExcelOptionatUserAllOptionsST status=SUCCESS method=SanityFAReportsTest.checkProfitLossAnalyzeReportExportExcelOptionatUserAllOptionsST()[pri:368, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkProfitLossAnalyzeReportExportExcelOptionatUserAllOptionsST]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="FAIL" signature="checkProfitLossAnalyzeReportExportPDFOptionatUserAllOptionsST()[pri:369, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkProfitLossAnalyzeReportExportPDFOptionatUserAllOptionsST" duration-ms="25205" started-at="2023-01-03T23:10:22Z" finished-at="2023-01-03T23:10:47Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at com.focus.testcases.SanityFAReportsTest.checkProfitLossAnalyzeReportExportPDFOptionatUserAllOptionsST(SanityFAReportsTest.java:2190)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkProfitLossAnalyzeReportExportPDFOptionatUserAllOptionsST]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkProfitLossAnalyzeReportExportPDFOptionatUserAllOptionsST -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:10:22Z" finished-at="2023-01-03T23:10:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkProfitLossAnalyzeReportExportPDFOptionatUserAllOptionsST() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="99" started-at="2023-01-03T23:10:47Z" finished-at="2023-01-03T23:10:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkProfitLossAnalyzeReportExportPDFOptionatUserAllOptionsST status=FAILURE method=SanityFAReportsTest.checkProfitLossAnalyzeReportExportPDFOptionatUserAllOptionsST()[pri:369, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkProfitLossAnalyzeReportExportPDFOptionatUserAllOptionsST]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T23:10:47Z" finished-at="2023-01-03T23:10:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkProfitLossAnalyzeReportPrintOptionatUserAllOptionsST() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkProfitLossAnalyzeReportPrintOptionatUserAllOptionsST()[pri:370, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkProfitLossAnalyzeReportPrintOptionatUserAllOptionsST" duration-ms="11771" started-at="2023-01-03T23:10:47Z" finished-at="2023-01-03T23:10:59Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkProfitLossAnalyzeReportPrintOptionatUserAllOptionsST]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkProfitLossAnalyzeReportPrintOptionatUserAllOptionsST -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:10:59Z" finished-at="2023-01-03T23:10:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkProfitLossAnalyzeReportSaveOptionatUserAllOptionsST() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkProfitLossAnalyzeReportSaveOptionatUserAllOptionsST()[pri:371, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkProfitLossAnalyzeReportSaveOptionatUserAllOptionsST" duration-ms="10961" started-at="2023-01-03T23:10:59Z" finished-at="2023-01-03T23:11:10Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkProfitLossAnalyzeReportSaveOptionatUserAllOptionsST]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkProfitLossAnalyzeReportSaveOptionatUserAllOptionsST -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:10:59Z" finished-at="2023-01-03T23:10:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkProfitLossAnalyzeReportPrintOptionatUserAllOptionsST status=SUCCESS method=SanityFAReportsTest.checkProfitLossAnalyzeReportPrintOptionatUserAllOptionsST()[pri:370, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkProfitLossAnalyzeReportPrintOptionatUserAllOptionsST]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T23:11:10Z" finished-at="2023-01-03T23:11:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkProfitLossAnalyzeReportSaveOptionatUserAllOptionsST status=SUCCESS method=SanityFAReportsTest.checkProfitLossAnalyzeReportSaveOptionatUserAllOptionsST()[pri:371, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkProfitLossAnalyzeReportSaveOptionatUserAllOptionsST]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="FAIL" signature="checkBalanceSheetReportwithFilterOptionatUserAllOptionsST()[pri:373, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkBalanceSheetReportwithFilterOptionatUserAllOptionsST" duration-ms="23645" started-at="2023-01-03T23:11:10Z" finished-at="2023-01-03T23:11:33Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at com.focus.testcases.SanityFAReportsTest.checkBalanceSheetReportwithFilterOptionatUserAllOptionsST(SanityFAReportsTest.java:2228)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkBalanceSheetReportwithFilterOptionatUserAllOptionsST]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkBalanceSheetReportwithFilterOptionatUserAllOptionsST -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:11:10Z" finished-at="2023-01-03T23:11:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkBalanceSheetReportwithFilterOptionatUserAllOptionsST() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="109" started-at="2023-01-03T23:11:33Z" finished-at="2023-01-03T23:11:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkBalanceSheetReportwithFilterOptionatUserAllOptionsST status=FAILURE method=SanityFAReportsTest.checkBalanceSheetReportwithFilterOptionatUserAllOptionsST()[pri:373, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkBalanceSheetReportwithFilterOptionatUserAllOptionsST]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T23:11:33Z" finished-at="2023-01-03T23:11:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkBalanceSheetAnalyzeOptionatUserAllOptionsST() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="FAIL" signature="checkBalanceSheetAnalyzeOptionatUserAllOptionsST()[pri:374, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkBalanceSheetAnalyzeOptionatUserAllOptionsST" duration-ms="12448" started-at="2023-01-03T23:11:33Z" finished-at="2023-01-03T23:11:46Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at com.focus.testcases.SanityFAReportsTest.checkBalanceSheetAnalyzeOptionatUserAllOptionsST(SanityFAReportsTest.java:2236)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkBalanceSheetAnalyzeOptionatUserAllOptionsST]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkBalanceSheetAnalyzeOptionatUserAllOptionsST -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="108" started-at="2023-01-03T23:11:46Z" finished-at="2023-01-03T23:11:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkBalanceSheetAnalyzeOptionatUserAllOptionsST status=FAILURE method=SanityFAReportsTest.checkBalanceSheetAnalyzeOptionatUserAllOptionsST()[pri:374, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkBalanceSheetAnalyzeOptionatUserAllOptionsST]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkBalanceSheetAnalyzeReportExportExcelOptionatUserAllOptionsST()[pri:375, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkBalanceSheetAnalyzeReportExportExcelOptionatUserAllOptionsST" duration-ms="19623" started-at="2023-01-03T23:11:46Z" finished-at="2023-01-03T23:12:06Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkBalanceSheetAnalyzeReportExportExcelOptionatUserAllOptionsST]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkBalanceSheetAnalyzeReportExportExcelOptionatUserAllOptionsST -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:11:46Z" finished-at="2023-01-03T23:11:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkBalanceSheetAnalyzeReportExportExcelOptionatUserAllOptionsST() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T23:12:06Z" finished-at="2023-01-03T23:12:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkBalanceSheetAnalyzeReportExportExcelOptionatUserAllOptionsST status=SUCCESS method=SanityFAReportsTest.checkBalanceSheetAnalyzeReportExportExcelOptionatUserAllOptionsST()[pri:375, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkBalanceSheetAnalyzeReportExportExcelOptionatUserAllOptionsST]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:12:06Z" finished-at="2023-01-03T23:12:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkBalanceSheetAnalyzeReportExportPDFOptionatUserAllOptionsST() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="FAIL" signature="checkBalanceSheetAnalyzeReportExportPDFOptionatUserAllOptionsST()[pri:376, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkBalanceSheetAnalyzeReportExportPDFOptionatUserAllOptionsST" duration-ms="24204" started-at="2023-01-03T23:12:06Z" finished-at="2023-01-03T23:12:30Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at com.focus.testcases.SanityFAReportsTest.checkBalanceSheetAnalyzeReportExportPDFOptionatUserAllOptionsST(SanityFAReportsTest.java:2252)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkBalanceSheetAnalyzeReportExportPDFOptionatUserAllOptionsST]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkBalanceSheetAnalyzeReportExportPDFOptionatUserAllOptionsST -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="103" started-at="2023-01-03T23:12:30Z" finished-at="2023-01-03T23:12:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkBalanceSheetAnalyzeReportExportPDFOptionatUserAllOptionsST status=FAILURE method=SanityFAReportsTest.checkBalanceSheetAnalyzeReportExportPDFOptionatUserAllOptionsST()[pri:376, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkBalanceSheetAnalyzeReportExportPDFOptionatUserAllOptionsST]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:12:30Z" finished-at="2023-01-03T23:12:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkBalanceSheetAnalyzeReportPrintOptionatUserAllOptionsST() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkBalanceSheetAnalyzeReportPrintOptionatUserAllOptionsST()[pri:377, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkBalanceSheetAnalyzeReportPrintOptionatUserAllOptionsST" duration-ms="11757" started-at="2023-01-03T23:12:30Z" finished-at="2023-01-03T23:12:42Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkBalanceSheetAnalyzeReportPrintOptionatUserAllOptionsST]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkBalanceSheetAnalyzeReportPrintOptionatUserAllOptionsST -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:12:42Z" finished-at="2023-01-03T23:12:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkBalanceSheetAnalyzeReportSaveOptionatUserAllOptionsST() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:12:42Z" finished-at="2023-01-03T23:12:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkBalanceSheetAnalyzeReportPrintOptionatUserAllOptionsST status=SUCCESS method=SanityFAReportsTest.checkBalanceSheetAnalyzeReportPrintOptionatUserAllOptionsST()[pri:377, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkBalanceSheetAnalyzeReportPrintOptionatUserAllOptionsST]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkBalanceSheetAnalyzeReportSaveOptionatUserAllOptionsST()[pri:378, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkBalanceSheetAnalyzeReportSaveOptionatUserAllOptionsST" duration-ms="10993" started-at="2023-01-03T23:12:42Z" finished-at="2023-01-03T23:12:53Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkBalanceSheetAnalyzeReportSaveOptionatUserAllOptionsST]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkBalanceSheetAnalyzeReportSaveOptionatUserAllOptionsST -->
        <test-method status="PASS" signature="checkLoginWithSUAgain()[pri:379, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkLoginWithSUAgain" duration-ms="14089" started-at="2023-01-03T23:12:53Z" finished-at="2023-01-03T23:13:07Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkLoginWithSUAgain]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkLoginWithSUAgain -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:12:53Z" finished-at="2023-01-03T23:12:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkBalanceSheetAnalyzeReportSaveOptionatUserAllOptionsST status=SUCCESS method=SanityFAReportsTest.checkBalanceSheetAnalyzeReportSaveOptionatUserAllOptionsST()[pri:378, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkBalanceSheetAnalyzeReportSaveOptionatUserAllOptionsST]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:12:53Z" finished-at="2023-01-03T23:12:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkLoginWithSUAgain() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:13:07Z" finished-at="2023-01-03T23:13:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkFinanacialLedgerReportwithDateRangeasCurrentMonth() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:13:07Z" finished-at="2023-01-03T23:13:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkLoginWithSUAgain status=SUCCESS method=SanityFAReportsTest.checkLoginWithSUAgain()[pri:379, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkLoginWithSUAgain]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkFinanacialLedgerReportwithDateRangeasCurrentMonth()[pri:380, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkFinanacialLedgerReportwithDateRangeasCurrentMonth" duration-ms="16482" started-at="2023-01-03T23:13:07Z" finished-at="2023-01-03T23:13:23Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkFinanacialLedgerReportwithDateRangeasCurrentMonth]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkFinanacialLedgerReportwithDateRangeasCurrentMonth -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:13:23Z" finished-at="2023-01-03T23:13:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkFinanacialLedgerReportwithDateRangeasCurrentMonth status=SUCCESS method=SanityFAReportsTest.checkFinanacialLedgerReportwithDateRangeasCurrentMonth()[pri:380, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkFinanacialLedgerReportwithDateRangeasCurrentMonth]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkFinanacialLedgerReportwithDateRangeasPreviousMonth()[pri:381, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkFinanacialLedgerReportwithDateRangeasPreviousMonth" duration-ms="6109" started-at="2023-01-03T23:13:23Z" finished-at="2023-01-03T23:13:29Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkFinanacialLedgerReportwithDateRangeasPreviousMonth]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkFinanacialLedgerReportwithDateRangeasPreviousMonth -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:13:23Z" finished-at="2023-01-03T23:13:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkFinanacialLedgerReportwithDateRangeasPreviousMonth() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:13:29Z" finished-at="2023-01-03T23:13:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkFinanacialLedgerReportwithDateRangeasPreviousMonth status=SUCCESS method=SanityFAReportsTest.checkFinanacialLedgerReportwithDateRangeasPreviousMonth()[pri:381, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkFinanacialLedgerReportwithDateRangeasPreviousMonth]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:13:29Z" finished-at="2023-01-03T23:13:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkFinanacialLedgerReportwithDateRangeasCurrentWeek() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkFinanacialLedgerReportwithDateRangeasCurrentWeek()[pri:382, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkFinanacialLedgerReportwithDateRangeasCurrentWeek" duration-ms="8819" started-at="2023-01-03T23:13:29Z" finished-at="2023-01-03T23:13:38Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkFinanacialLedgerReportwithDateRangeasCurrentWeek]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkFinanacialLedgerReportwithDateRangeasCurrentWeek -->
        <test-method status="FAIL" signature="checkFinanacialLedgerReportwithDateRangeasPreviousWeek()[pri:383, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkFinanacialLedgerReportwithDateRangeasPreviousWeek" duration-ms="7138" started-at="2023-01-03T23:13:38Z" finished-at="2023-01-03T23:13:45Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at com.focus.testcases.SanityFAReportsTest.checkFinanacialLedgerReportwithDateRangeasPreviousWeek(SanityFAReportsTest.java:2323)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkFinanacialLedgerReportwithDateRangeasPreviousWeek]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkFinanacialLedgerReportwithDateRangeasPreviousWeek -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:13:38Z" finished-at="2023-01-03T23:13:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkFinanacialLedgerReportwithDateRangeasPreviousWeek() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:13:38Z" finished-at="2023-01-03T23:13:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkFinanacialLedgerReportwithDateRangeasCurrentWeek status=SUCCESS method=SanityFAReportsTest.checkFinanacialLedgerReportwithDateRangeasCurrentWeek()[pri:382, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkFinanacialLedgerReportwithDateRangeasCurrentWeek]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="186" started-at="2023-01-03T23:13:45Z" finished-at="2023-01-03T23:13:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkFinanacialLedgerReportwithDateRangeasPreviousWeek status=FAILURE method=SanityFAReportsTest.checkFinanacialLedgerReportwithDateRangeasPreviousWeek()[pri:383, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkFinanacialLedgerReportwithDateRangeasPreviousWeek]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkFinanacialLedgerReportwithDateRangeasToday()[pri:384, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkFinanacialLedgerReportwithDateRangeasToday" duration-ms="8812" started-at="2023-01-03T23:13:46Z" finished-at="2023-01-03T23:13:54Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkFinanacialLedgerReportwithDateRangeasToday]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkFinanacialLedgerReportwithDateRangeasToday -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:13:46Z" finished-at="2023-01-03T23:13:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkFinanacialLedgerReportwithDateRangeasToday() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:13:54Z" finished-at="2023-01-03T23:13:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkFinanacialLedgerReportwithDateRangeasToday status=SUCCESS method=SanityFAReportsTest.checkFinanacialLedgerReportwithDateRangeasToday()[pri:384, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkFinanacialLedgerReportwithDateRangeasToday]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T23:13:54Z" finished-at="2023-01-03T23:13:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkFinanacialLedgerReportwithDateRangeasCurrentYear() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkFinanacialLedgerReportwithDateRangeasCurrentYear()[pri:385, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkFinanacialLedgerReportwithDateRangeasCurrentYear" duration-ms="7828" started-at="2023-01-03T23:13:54Z" finished-at="2023-01-03T23:14:02Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkFinanacialLedgerReportwithDateRangeasCurrentYear]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkFinanacialLedgerReportwithDateRangeasCurrentYear -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:14:02Z" finished-at="2023-01-03T23:14:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkFinanacialLedgerReportwithDateRangeasCurrentYear status=SUCCESS method=SanityFAReportsTest.checkFinanacialLedgerReportwithDateRangeasCurrentYear()[pri:385, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkFinanacialLedgerReportwithDateRangeasCurrentYear]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:14:02Z" finished-at="2023-01-03T23:14:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkFinanacialLedgerReportwithDateRangeasPreviousYear() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkFinanacialLedgerReportwithDateRangeasPreviousYear()[pri:386, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkFinanacialLedgerReportwithDateRangeasPreviousYear" duration-ms="6080" started-at="2023-01-03T23:14:02Z" finished-at="2023-01-03T23:14:08Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkFinanacialLedgerReportwithDateRangeasPreviousYear]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkFinanacialLedgerReportwithDateRangeasPreviousYear -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:14:08Z" finished-at="2023-01-03T23:14:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkFinanacialLedgerReportwithDateRangeasPreviousYear status=SUCCESS method=SanityFAReportsTest.checkFinanacialLedgerReportwithDateRangeasPreviousYear()[pri:386, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkFinanacialLedgerReportwithDateRangeasPreviousYear]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T23:14:08Z" finished-at="2023-01-03T23:14:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkFinanacialLedgerReportwithDateRangeasCurrentFinancialYear() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="FAIL" signature="checkFinanacialLedgerReportwithDateRangeasCurrentFinancialYear()[pri:387, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkFinanacialLedgerReportwithDateRangeasCurrentFinancialYear" duration-ms="7828" started-at="2023-01-03T23:14:08Z" finished-at="2023-01-03T23:14:16Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at com.focus.testcases.SanityFAReportsTest.checkFinanacialLedgerReportwithDateRangeasCurrentFinancialYear(SanityFAReportsTest.java:2353)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkFinanacialLedgerReportwithDateRangeasCurrentFinancialYear]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkFinanacialLedgerReportwithDateRangeasCurrentFinancialYear -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="129" started-at="2023-01-03T23:14:16Z" finished-at="2023-01-03T23:14:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkFinanacialLedgerReportwithDateRangeasCurrentFinancialYear status=FAILURE method=SanityFAReportsTest.checkFinanacialLedgerReportwithDateRangeasCurrentFinancialYear()[pri:387, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkFinanacialLedgerReportwithDateRangeasCurrentFinancialYear]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:14:16Z" finished-at="2023-01-03T23:14:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkFinanacialLedgerReportwithDateRangeasYesterDay() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkFinanacialLedgerReportwithDateRangeasYesterDay()[pri:388, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkFinanacialLedgerReportwithDateRangeasYesterDay" duration-ms="6077" started-at="2023-01-03T23:14:16Z" finished-at="2023-01-03T23:14:22Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkFinanacialLedgerReportwithDateRangeasYesterDay]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkFinanacialLedgerReportwithDateRangeasYesterDay -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:14:22Z" finished-at="2023-01-03T23:14:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkFinanacialLedgerReportwithDateRangeasCurrentQuarterYear() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkFinanacialLedgerReportwithDateRangeasCurrentQuarterYear()[pri:389, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkFinanacialLedgerReportwithDateRangeasCurrentQuarterYear" duration-ms="7831" started-at="2023-01-03T23:14:22Z" finished-at="2023-01-03T23:14:30Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkFinanacialLedgerReportwithDateRangeasCurrentQuarterYear]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkFinanacialLedgerReportwithDateRangeasCurrentQuarterYear -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:14:22Z" finished-at="2023-01-03T23:14:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkFinanacialLedgerReportwithDateRangeasYesterDay status=SUCCESS method=SanityFAReportsTest.checkFinanacialLedgerReportwithDateRangeasYesterDay()[pri:388, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkFinanacialLedgerReportwithDateRangeasYesterDay]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T23:14:30Z" finished-at="2023-01-03T23:14:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkFinanacialLedgerReportwithDateRangeasCurrentQuarterYear status=SUCCESS method=SanityFAReportsTest.checkFinanacialLedgerReportwithDateRangeasCurrentQuarterYear()[pri:389, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkFinanacialLedgerReportwithDateRangeasCurrentQuarterYear]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="FAIL" signature="checkFinanacialLedgerReportwithDateRangeasPreviousQuarterYear()[pri:390, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkFinanacialLedgerReportwithDateRangeasPreviousQuarterYear" duration-ms="6102" started-at="2023-01-03T23:14:30Z" finished-at="2023-01-03T23:14:36Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at com.focus.testcases.SanityFAReportsTest.checkFinanacialLedgerReportwithDateRangeasPreviousQuarterYear(SanityFAReportsTest.java:2376)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkFinanacialLedgerReportwithDateRangeasPreviousQuarterYear]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkFinanacialLedgerReportwithDateRangeasPreviousQuarterYear -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:14:30Z" finished-at="2023-01-03T23:14:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkFinanacialLedgerReportwithDateRangeasPreviousQuarterYear() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="112" started-at="2023-01-03T23:14:36Z" finished-at="2023-01-03T23:14:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkFinanacialLedgerReportwithDateRangeasPreviousQuarterYear status=FAILURE method=SanityFAReportsTest.checkFinanacialLedgerReportwithDateRangeasPreviousQuarterYear()[pri:390, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkFinanacialLedgerReportwithDateRangeasPreviousQuarterYear]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkTrailBalanceReportwithDateRangeasCurrentMonth()[pri:391, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrailBalanceReportwithDateRangeasCurrentMonth" duration-ms="10711" started-at="2023-01-03T23:14:36Z" finished-at="2023-01-03T23:14:47Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrailBalanceReportwithDateRangeasCurrentMonth]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrailBalanceReportwithDateRangeasCurrentMonth -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:14:36Z" finished-at="2023-01-03T23:14:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrailBalanceReportwithDateRangeasCurrentMonth() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T23:14:47Z" finished-at="2023-01-03T23:14:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrailBalanceReportwithDateRangeasCurrentMonth status=SUCCESS method=SanityFAReportsTest.checkTrailBalanceReportwithDateRangeasCurrentMonth()[pri:391, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrailBalanceReportwithDateRangeasCurrentMonth]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:14:47Z" finished-at="2023-01-03T23:14:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrailBalanceReportwithDateRangeasPreviousMonth() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkTrailBalanceReportwithDateRangeasPreviousMonth()[pri:392, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrailBalanceReportwithDateRangeasPreviousMonth" duration-ms="3370" started-at="2023-01-03T23:14:47Z" finished-at="2023-01-03T23:14:50Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrailBalanceReportwithDateRangeasPreviousMonth]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrailBalanceReportwithDateRangeasPreviousMonth -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T23:14:50Z" finished-at="2023-01-03T23:14:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrailBalanceReportwithDateRangeasPreviousMonth status=SUCCESS method=SanityFAReportsTest.checkTrailBalanceReportwithDateRangeasPreviousMonth()[pri:392, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrailBalanceReportwithDateRangeasPreviousMonth]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:14:50Z" finished-at="2023-01-03T23:14:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrailBalanceReportwithDateRangeasCurrentWeek() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkTrailBalanceReportwithDateRangeasCurrentWeek()[pri:393, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrailBalanceReportwithDateRangeasCurrentWeek" duration-ms="3369" started-at="2023-01-03T23:14:50Z" finished-at="2023-01-03T23:14:54Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrailBalanceReportwithDateRangeasCurrentWeek]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrailBalanceReportwithDateRangeasCurrentWeek -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T23:14:54Z" finished-at="2023-01-03T23:14:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrailBalanceReportwithDateRangeasPreviousWeek() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:14:54Z" finished-at="2023-01-03T23:14:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrailBalanceReportwithDateRangeasCurrentWeek status=SUCCESS method=SanityFAReportsTest.checkTrailBalanceReportwithDateRangeasCurrentWeek()[pri:393, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrailBalanceReportwithDateRangeasCurrentWeek]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="FAIL" signature="checkTrailBalanceReportwithDateRangeasPreviousWeek()[pri:394, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrailBalanceReportwithDateRangeasPreviousWeek" duration-ms="3362" started-at="2023-01-03T23:14:54Z" finished-at="2023-01-03T23:14:57Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at com.focus.testcases.SanityFAReportsTest.checkTrailBalanceReportwithDateRangeasPreviousWeek(SanityFAReportsTest.java:2407)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrailBalanceReportwithDateRangeasPreviousWeek]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrailBalanceReportwithDateRangeasPreviousWeek -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="100" started-at="2023-01-03T23:14:57Z" finished-at="2023-01-03T23:14:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrailBalanceReportwithDateRangeasPreviousWeek status=FAILURE method=SanityFAReportsTest.checkTrailBalanceReportwithDateRangeasPreviousWeek()[pri:394, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrailBalanceReportwithDateRangeasPreviousWeek]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:14:57Z" finished-at="2023-01-03T23:14:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrailBalanceReportwithDateRangeasToday() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkTrailBalanceReportwithDateRangeasToday()[pri:395, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrailBalanceReportwithDateRangeasToday" duration-ms="3362" started-at="2023-01-03T23:14:57Z" finished-at="2023-01-03T23:15:01Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrailBalanceReportwithDateRangeasToday]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrailBalanceReportwithDateRangeasToday -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:15:01Z" finished-at="2023-01-03T23:15:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrailBalanceReportwithDateRangeasCurrentYear() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkTrailBalanceReportwithDateRangeasCurrentYear()[pri:396, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrailBalanceReportwithDateRangeasCurrentYear" duration-ms="3392" started-at="2023-01-03T23:15:01Z" finished-at="2023-01-03T23:15:04Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrailBalanceReportwithDateRangeasCurrentYear]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrailBalanceReportwithDateRangeasCurrentYear -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:15:01Z" finished-at="2023-01-03T23:15:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrailBalanceReportwithDateRangeasToday status=SUCCESS method=SanityFAReportsTest.checkTrailBalanceReportwithDateRangeasToday()[pri:395, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrailBalanceReportwithDateRangeasToday]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:15:04Z" finished-at="2023-01-03T23:15:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrailBalanceReportwithDateRangeasCurrentYear status=SUCCESS method=SanityFAReportsTest.checkTrailBalanceReportwithDateRangeasCurrentYear()[pri:396, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrailBalanceReportwithDateRangeasCurrentYear]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:15:04Z" finished-at="2023-01-03T23:15:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrailBalanceReportwithDateRangeasPreviousYear() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkTrailBalanceReportwithDateRangeasPreviousYear()[pri:397, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrailBalanceReportwithDateRangeasPreviousYear" duration-ms="3380" started-at="2023-01-03T23:15:04Z" finished-at="2023-01-03T23:15:07Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrailBalanceReportwithDateRangeasPreviousYear]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrailBalanceReportwithDateRangeasPreviousYear -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:15:07Z" finished-at="2023-01-03T23:15:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrailBalanceReportwithDateRangeasPreviousYear status=SUCCESS method=SanityFAReportsTest.checkTrailBalanceReportwithDateRangeasPreviousYear()[pri:397, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrailBalanceReportwithDateRangeasPreviousYear]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="FAIL" signature="checkTrailBalanceReportwithDateRangeasCurrentFinancialYear()[pri:398, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrailBalanceReportwithDateRangeasCurrentFinancialYear" duration-ms="3374" started-at="2023-01-03T23:15:07Z" finished-at="2023-01-03T23:15:11Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at com.focus.testcases.SanityFAReportsTest.checkTrailBalanceReportwithDateRangeasCurrentFinancialYear(SanityFAReportsTest.java:2435)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrailBalanceReportwithDateRangeasCurrentFinancialYear]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrailBalanceReportwithDateRangeasCurrentFinancialYear -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:15:07Z" finished-at="2023-01-03T23:15:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrailBalanceReportwithDateRangeasCurrentFinancialYear() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="102" started-at="2023-01-03T23:15:11Z" finished-at="2023-01-03T23:15:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrailBalanceReportwithDateRangeasCurrentFinancialYear status=FAILURE method=SanityFAReportsTest.checkTrailBalanceReportwithDateRangeasCurrentFinancialYear()[pri:398, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrailBalanceReportwithDateRangeasCurrentFinancialYear]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkTrailBalanceReportwithDateRangeasYesterDay()[pri:399, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrailBalanceReportwithDateRangeasYesterDay" duration-ms="3365" started-at="2023-01-03T23:15:11Z" finished-at="2023-01-03T23:15:14Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrailBalanceReportwithDateRangeasYesterDay]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrailBalanceReportwithDateRangeasYesterDay -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:15:11Z" finished-at="2023-01-03T23:15:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrailBalanceReportwithDateRangeasYesterDay() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:15:14Z" finished-at="2023-01-03T23:15:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrailBalanceReportwithDateRangeasYesterDay status=SUCCESS method=SanityFAReportsTest.checkTrailBalanceReportwithDateRangeasYesterDay()[pri:399, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrailBalanceReportwithDateRangeasYesterDay]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:15:14Z" finished-at="2023-01-03T23:15:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrailBalanceReportwithDateRangeasCurrentQuarterYear() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkTrailBalanceReportwithDateRangeasCurrentQuarterYear()[pri:400, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrailBalanceReportwithDateRangeasCurrentQuarterYear" duration-ms="3365" started-at="2023-01-03T23:15:14Z" finished-at="2023-01-03T23:15:18Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrailBalanceReportwithDateRangeasCurrentQuarterYear]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrailBalanceReportwithDateRangeasCurrentQuarterYear -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:15:18Z" finished-at="2023-01-03T23:15:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrailBalanceReportwithDateRangeasCurrentQuarterYear status=SUCCESS method=SanityFAReportsTest.checkTrailBalanceReportwithDateRangeasCurrentQuarterYear()[pri:400, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrailBalanceReportwithDateRangeasCurrentQuarterYear]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="FAIL" signature="checkTrailBalanceReportwithDateRangeasPreviousQuarterYear()[pri:401, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrailBalanceReportwithDateRangeasPreviousQuarterYear" duration-ms="3370" started-at="2023-01-03T23:15:18Z" finished-at="2023-01-03T23:15:21Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at com.focus.testcases.SanityFAReportsTest.checkTrailBalanceReportwithDateRangeasPreviousQuarterYear(SanityFAReportsTest.java:2462)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrailBalanceReportwithDateRangeasPreviousQuarterYear]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrailBalanceReportwithDateRangeasPreviousQuarterYear -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:15:18Z" finished-at="2023-01-03T23:15:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrailBalanceReportwithDateRangeasPreviousQuarterYear() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="99" started-at="2023-01-03T23:15:21Z" finished-at="2023-01-03T23:15:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrailBalanceReportwithDateRangeasPreviousQuarterYear status=FAILURE method=SanityFAReportsTest.checkTrailBalanceReportwithDateRangeasPreviousQuarterYear()[pri:401, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrailBalanceReportwithDateRangeasPreviousQuarterYear]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:15:21Z" finished-at="2023-01-03T23:15:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkCustomerStatementReportDateRangeasCurrentMonth() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="FAIL" signature="checkCustomerStatementReportDateRangeasCurrentMonth()[pri:402, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkCustomerStatementReportDateRangeasCurrentMonth" duration-ms="24293" started-at="2023-01-03T23:15:21Z" finished-at="2023-01-03T23:15:45Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at com.focus.testcases.SanityFAReportsTest.checkCustomerStatementReportDateRangeasCurrentMonth(SanityFAReportsTest.java:2472)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomerStatementReportDateRangeasCurrentMonth]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkCustomerStatementReportDateRangeasCurrentMonth -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="121" started-at="2023-01-03T23:15:45Z" finished-at="2023-01-03T23:15:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkCustomerStatementReportDateRangeasCurrentMonth status=FAILURE method=SanityFAReportsTest.checkCustomerStatementReportDateRangeasCurrentMonth()[pri:402, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkCustomerStatementReportDateRangeasCurrentMonth]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkCustomerStatementReportDateRangeasPreviousMonth()[pri:403, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkCustomerStatementReportDateRangeasPreviousMonth" duration-ms="4052" started-at="2023-01-03T23:15:46Z" finished-at="2023-01-03T23:15:50Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomerStatementReportDateRangeasPreviousMonth]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkCustomerStatementReportDateRangeasPreviousMonth -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:15:46Z" finished-at="2023-01-03T23:15:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkCustomerStatementReportDateRangeasPreviousMonth() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T23:15:50Z" finished-at="2023-01-03T23:15:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkCustomerStatementReportDateRangeasPreviousMonth status=SUCCESS method=SanityFAReportsTest.checkCustomerStatementReportDateRangeasPreviousMonth()[pri:403, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkCustomerStatementReportDateRangeasPreviousMonth]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="FAIL" signature="checkCustomerStatementReportDateRangeasCurrentWeek()[pri:404, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkCustomerStatementReportDateRangeasCurrentWeek" duration-ms="7750" started-at="2023-01-03T23:15:50Z" finished-at="2023-01-03T23:15:57Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at com.focus.testcases.SanityFAReportsTest.checkCustomerStatementReportDateRangeasCurrentWeek(SanityFAReportsTest.java:2485)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomerStatementReportDateRangeasCurrentWeek]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkCustomerStatementReportDateRangeasCurrentWeek -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:15:50Z" finished-at="2023-01-03T23:15:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkCustomerStatementReportDateRangeasCurrentWeek() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="135" started-at="2023-01-03T23:15:57Z" finished-at="2023-01-03T23:15:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkCustomerStatementReportDateRangeasCurrentWeek status=FAILURE method=SanityFAReportsTest.checkCustomerStatementReportDateRangeasCurrentWeek()[pri:404, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkCustomerStatementReportDateRangeasCurrentWeek]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T23:15:57Z" finished-at="2023-01-03T23:15:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkCustomerStatementReportDateRangeasPreviousWeek() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="FAIL" signature="checkCustomerStatementReportDateRangeasPreviousWeek()[pri:405, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkCustomerStatementReportDateRangeasPreviousWeek" duration-ms="4147" started-at="2023-01-03T23:15:57Z" finished-at="2023-01-03T23:16:02Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at com.focus.testcases.SanityFAReportsTest.checkCustomerStatementReportDateRangeasPreviousWeek(SanityFAReportsTest.java:2491)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomerStatementReportDateRangeasPreviousWeek]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkCustomerStatementReportDateRangeasPreviousWeek -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="113" started-at="2023-01-03T23:16:02Z" finished-at="2023-01-03T23:16:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkCustomerStatementReportDateRangeasPreviousWeek status=FAILURE method=SanityFAReportsTest.checkCustomerStatementReportDateRangeasPreviousWeek()[pri:405, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkCustomerStatementReportDateRangeasPreviousWeek]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkCustomerStatementReportDateRangeasToday()[pri:406, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkCustomerStatementReportDateRangeasToday" duration-ms="8033" started-at="2023-01-03T23:16:02Z" finished-at="2023-01-03T23:16:10Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomerStatementReportDateRangeasToday]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkCustomerStatementReportDateRangeasToday -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:16:02Z" finished-at="2023-01-03T23:16:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkCustomerStatementReportDateRangeasToday() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:16:10Z" finished-at="2023-01-03T23:16:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkCustomerStatementReportDateRangeasToday status=SUCCESS method=SanityFAReportsTest.checkCustomerStatementReportDateRangeasToday()[pri:406, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkCustomerStatementReportDateRangeasToday]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T23:16:10Z" finished-at="2023-01-03T23:16:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkCustomerStatementReportDateRangeasCurrentYear() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="FAIL" signature="checkCustomerStatementReportDateRangeasCurrentYear()[pri:407, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkCustomerStatementReportDateRangeasCurrentYear" duration-ms="7955" started-at="2023-01-03T23:16:10Z" finished-at="2023-01-03T23:16:18Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at com.focus.testcases.SanityFAReportsTest.checkCustomerStatementReportDateRangeasCurrentYear(SanityFAReportsTest.java:2503)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomerStatementReportDateRangeasCurrentYear]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkCustomerStatementReportDateRangeasCurrentYear -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="137" started-at="2023-01-03T23:16:18Z" finished-at="2023-01-03T23:16:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkCustomerStatementReportDateRangeasCurrentYear status=FAILURE method=SanityFAReportsTest.checkCustomerStatementReportDateRangeasCurrentYear()[pri:407, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkCustomerStatementReportDateRangeasCurrentYear]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkCustomerStatementReportDateRangeasPreviousYear()[pri:408, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkCustomerStatementReportDateRangeasPreviousYear" duration-ms="4040" started-at="2023-01-03T23:16:18Z" finished-at="2023-01-03T23:16:22Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomerStatementReportDateRangeasPreviousYear]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkCustomerStatementReportDateRangeasPreviousYear -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:16:18Z" finished-at="2023-01-03T23:16:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkCustomerStatementReportDateRangeasPreviousYear() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T23:16:22Z" finished-at="2023-01-03T23:16:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkCustomerStatementReportDateRangeasPreviousYear status=SUCCESS method=SanityFAReportsTest.checkCustomerStatementReportDateRangeasPreviousYear()[pri:408, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkCustomerStatementReportDateRangeasPreviousYear]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkCustomerStatementReportDateRangeasCurrentFinancialYear()[pri:409, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkCustomerStatementReportDateRangeasCurrentFinancialYear" duration-ms="8226" started-at="2023-01-03T23:16:22Z" finished-at="2023-01-03T23:16:30Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomerStatementReportDateRangeasCurrentFinancialYear]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkCustomerStatementReportDateRangeasCurrentFinancialYear -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:16:22Z" finished-at="2023-01-03T23:16:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkCustomerStatementReportDateRangeasCurrentFinancialYear() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T23:16:30Z" finished-at="2023-01-03T23:16:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkCustomerStatementReportDateRangeasCurrentFinancialYear status=SUCCESS method=SanityFAReportsTest.checkCustomerStatementReportDateRangeasCurrentFinancialYear()[pri:409, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkCustomerStatementReportDateRangeasCurrentFinancialYear]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkCustomerStatementReportDateRangeasYesterDay()[pri:410, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkCustomerStatementReportDateRangeasYesterDay" duration-ms="4042" started-at="2023-01-03T23:16:30Z" finished-at="2023-01-03T23:16:34Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomerStatementReportDateRangeasYesterDay]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkCustomerStatementReportDateRangeasYesterDay -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:16:30Z" finished-at="2023-01-03T23:16:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkCustomerStatementReportDateRangeasYesterDay() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="FAIL" signature="checkCustomerStatementReportDateRangeasCurrentQuarter()[pri:411, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkCustomerStatementReportDateRangeasCurrentQuarter" duration-ms="8027" started-at="2023-01-03T23:16:34Z" finished-at="2023-01-03T23:16:42Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at com.focus.testcases.SanityFAReportsTest.checkCustomerStatementReportDateRangeasCurrentQuarter(SanityFAReportsTest.java:2530)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomerStatementReportDateRangeasCurrentQuarter]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkCustomerStatementReportDateRangeasCurrentQuarter -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:16:34Z" finished-at="2023-01-03T23:16:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkCustomerStatementReportDateRangeasCurrentQuarter() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:16:34Z" finished-at="2023-01-03T23:16:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkCustomerStatementReportDateRangeasYesterDay status=SUCCESS method=SanityFAReportsTest.checkCustomerStatementReportDateRangeasYesterDay()[pri:410, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkCustomerStatementReportDateRangeasYesterDay]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="127" started-at="2023-01-03T23:16:42Z" finished-at="2023-01-03T23:16:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkCustomerStatementReportDateRangeasCurrentQuarter status=FAILURE method=SanityFAReportsTest.checkCustomerStatementReportDateRangeasCurrentQuarter()[pri:411, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkCustomerStatementReportDateRangeasCurrentQuarter]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:16:42Z" finished-at="2023-01-03T23:16:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkCustomerStatementReportDateRangeasPreviousQuarter() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="FAIL" signature="checkCustomerStatementReportDateRangeasPreviousQuarter()[pri:412, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkCustomerStatementReportDateRangeasPreviousQuarter" duration-ms="4030" started-at="2023-01-03T23:16:42Z" finished-at="2023-01-03T23:16:46Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at com.focus.testcases.SanityFAReportsTest.checkCustomerStatementReportDateRangeasPreviousQuarter(SanityFAReportsTest.java:2538)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomerStatementReportDateRangeasPreviousQuarter]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkCustomerStatementReportDateRangeasPreviousQuarter -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="115" started-at="2023-01-03T23:16:46Z" finished-at="2023-01-03T23:16:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkCustomerStatementReportDateRangeasPreviousQuarter status=FAILURE method=SanityFAReportsTest.checkCustomerStatementReportDateRangeasPreviousQuarter()[pri:412, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkCustomerStatementReportDateRangeasPreviousQuarter]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkFinancialLedgerWithMovedAccountOnlyChkBox()[pri:413, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkFinancialLedgerWithMovedAccountOnlyChkBox" duration-ms="41217" started-at="2023-01-03T23:16:46Z" finished-at="2023-01-03T23:17:28Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkFinancialLedgerWithMovedAccountOnlyChkBox]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkFinancialLedgerWithMovedAccountOnlyChkBox -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:16:46Z" finished-at="2023-01-03T23:16:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkFinancialLedgerWithMovedAccountOnlyChkBox() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="FAIL" signature="checkFinancialLedgerWithPrintAccountIndexChkBox()[pri:414, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkFinancialLedgerWithPrintAccountIndexChkBox" duration-ms="29596" started-at="2023-01-03T23:17:28Z" finished-at="2023-01-03T23:17:57Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at com.focus.testcases.SanityFAReportsTest.checkFinancialLedgerWithPrintAccountIndexChkBox(SanityFAReportsTest.java:2557)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkFinancialLedgerWithPrintAccountIndexChkBox]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkFinancialLedgerWithPrintAccountIndexChkBox -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:17:28Z" finished-at="2023-01-03T23:17:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkFinancialLedgerWithPrintAccountIndexChkBox() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:17:28Z" finished-at="2023-01-03T23:17:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkFinancialLedgerWithMovedAccountOnlyChkBox status=SUCCESS method=SanityFAReportsTest.checkFinancialLedgerWithMovedAccountOnlyChkBox()[pri:413, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkFinancialLedgerWithMovedAccountOnlyChkBox]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="118" started-at="2023-01-03T23:17:57Z" finished-at="2023-01-03T23:17:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkFinancialLedgerWithPrintAccountIndexChkBox status=FAILURE method=SanityFAReportsTest.checkFinancialLedgerWithPrintAccountIndexChkBox()[pri:414, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkFinancialLedgerWithPrintAccountIndexChkBox]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="FAIL" signature="checkFinancialLedgerFreshPageforEachAccountChkBox()[pri:415, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkFinancialLedgerFreshPageforEachAccountChkBox" duration-ms="109135" started-at="2023-01-03T23:17:57Z" finished-at="2023-01-03T23:19:47Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at com.focus.testcases.SanityFAReportsTest.checkFinancialLedgerFreshPageforEachAccountChkBox(SanityFAReportsTest.java:2565)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkFinancialLedgerFreshPageforEachAccountChkBox]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkFinancialLedgerFreshPageforEachAccountChkBox -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:17:57Z" finished-at="2023-01-03T23:17:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkFinancialLedgerFreshPageforEachAccountChkBox() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="112" started-at="2023-01-03T23:19:47Z" finished-at="2023-01-03T23:19:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkFinancialLedgerFreshPageforEachAccountChkBox status=FAILURE method=SanityFAReportsTest.checkFinancialLedgerFreshPageforEachAccountChkBox()[pri:415, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkFinancialLedgerFreshPageforEachAccountChkBox]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T23:19:47Z" finished-at="2023-01-03T23:19:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkFinancialLedgerPrintasStatementofAccountChkBox() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="FAIL" signature="checkFinancialLedgerPrintasStatementofAccountChkBox()[pri:416, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkFinancialLedgerPrintasStatementofAccountChkBox" duration-ms="31149" started-at="2023-01-03T23:19:47Z" finished-at="2023-01-03T23:20:18Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at com.focus.testcases.SanityFAReportsTest.checkFinancialLedgerPrintasStatementofAccountChkBox(SanityFAReportsTest.java:2572)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkFinancialLedgerPrintasStatementofAccountChkBox]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkFinancialLedgerPrintasStatementofAccountChkBox -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="110" started-at="2023-01-03T23:20:18Z" finished-at="2023-01-03T23:20:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkFinancialLedgerPrintasStatementofAccountChkBox status=FAILURE method=SanityFAReportsTest.checkFinancialLedgerPrintasStatementofAccountChkBox()[pri:416, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkFinancialLedgerPrintasStatementofAccountChkBox]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:20:18Z" finished-at="2023-01-03T23:20:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkFinancialLedgerDisplayUnrelizedProfitLossChkBox() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="FAIL" signature="checkFinancialLedgerDisplayUnrelizedProfitLossChkBox()[pri:417, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkFinancialLedgerDisplayUnrelizedProfitLossChkBox" duration-ms="29640" started-at="2023-01-03T23:20:18Z" finished-at="2023-01-03T23:20:48Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at com.focus.testcases.SanityFAReportsTest.checkFinancialLedgerDisplayUnrelizedProfitLossChkBox(SanityFAReportsTest.java:2581)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkFinancialLedgerDisplayUnrelizedProfitLossChkBox]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkFinancialLedgerDisplayUnrelizedProfitLossChkBox -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="112" started-at="2023-01-03T23:20:48Z" finished-at="2023-01-03T23:20:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkFinancialLedgerDisplayUnrelizedProfitLossChkBox status=FAILURE method=SanityFAReportsTest.checkFinancialLedgerDisplayUnrelizedProfitLossChkBox()[pri:417, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkFinancialLedgerDisplayUnrelizedProfitLossChkBox]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:20:48Z" finished-at="2023-01-03T23:20:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkFinancialLedgerIgnoreConvertedPDCChkBox() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="FAIL" signature="checkFinancialLedgerIgnoreConvertedPDCChkBox()[pri:418, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkFinancialLedgerIgnoreConvertedPDCChkBox" duration-ms="29389" started-at="2023-01-03T23:20:48Z" finished-at="2023-01-03T23:21:17Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at com.focus.testcases.SanityFAReportsTest.checkFinancialLedgerIgnoreConvertedPDCChkBox(SanityFAReportsTest.java:2591)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkFinancialLedgerIgnoreConvertedPDCChkBox]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkFinancialLedgerIgnoreConvertedPDCChkBox -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="112" started-at="2023-01-03T23:21:17Z" finished-at="2023-01-03T23:21:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkFinancialLedgerIgnoreConvertedPDCChkBox status=FAILURE method=SanityFAReportsTest.checkFinancialLedgerIgnoreConvertedPDCChkBox()[pri:418, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkFinancialLedgerIgnoreConvertedPDCChkBox]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:21:17Z" finished-at="2023-01-03T23:21:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkFinancialLedgerDisplayMaturedPDCChkBox() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="FAIL" signature="checkFinancialLedgerDisplayMaturedPDCChkBox()[pri:419, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkFinancialLedgerDisplayMaturedPDCChkBox" duration-ms="29556" started-at="2023-01-03T23:21:17Z" finished-at="2023-01-03T23:21:47Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at com.focus.testcases.SanityFAReportsTest.checkFinancialLedgerDisplayMaturedPDCChkBox(SanityFAReportsTest.java:2601)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkFinancialLedgerDisplayMaturedPDCChkBox]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkFinancialLedgerDisplayMaturedPDCChkBox -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="114" started-at="2023-01-03T23:21:47Z" finished-at="2023-01-03T23:21:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkFinancialLedgerDisplayMaturedPDCChkBox status=FAILURE method=SanityFAReportsTest.checkFinancialLedgerDisplayMaturedPDCChkBox()[pri:419, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkFinancialLedgerDisplayMaturedPDCChkBox]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:21:47Z" finished-at="2023-01-03T23:21:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkFinancialLedgerOutputDropdownwithPrinterasOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkFinancialLedgerOutputDropdownwithPrinterasOption()[pri:420, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkFinancialLedgerOutputDropdownwithPrinterasOption" duration-ms="32979" started-at="2023-01-03T23:21:47Z" finished-at="2023-01-03T23:22:20Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkFinancialLedgerOutputDropdownwithPrinterasOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkFinancialLedgerOutputDropdownwithPrinterasOption -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:22:20Z" finished-at="2023-01-03T23:22:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkFinancialLedgerOutputDropdownwithPrinterasOption status=SUCCESS method=SanityFAReportsTest.checkFinancialLedgerOutputDropdownwithPrinterasOption()[pri:420, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkFinancialLedgerOutputDropdownwithPrinterasOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkFinancialLedgerOutputDropdownasPrintDraftModeOption()[pri:421, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkFinancialLedgerOutputDropdownasPrintDraftModeOption" duration-ms="21315" started-at="2023-01-03T23:22:20Z" finished-at="2023-01-03T23:22:41Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkFinancialLedgerOutputDropdownasPrintDraftModeOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkFinancialLedgerOutputDropdownasPrintDraftModeOption -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:22:20Z" finished-at="2023-01-03T23:22:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkFinancialLedgerOutputDropdownasPrintDraftModeOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:22:41Z" finished-at="2023-01-03T23:22:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.ckeckFinancialLedgerOutputDropdownwithExcelSheetOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:22:41Z" finished-at="2023-01-03T23:22:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkFinancialLedgerOutputDropdownasPrintDraftModeOption status=SUCCESS method=SanityFAReportsTest.checkFinancialLedgerOutputDropdownasPrintDraftModeOption()[pri:421, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkFinancialLedgerOutputDropdownasPrintDraftModeOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="ckeckFinancialLedgerOutputDropdownwithExcelSheetOption()[pri:422, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="ckeckFinancialLedgerOutputDropdownwithExcelSheetOption" duration-ms="17881" started-at="2023-01-03T23:22:41Z" finished-at="2023-01-03T23:22:59Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.ckeckFinancialLedgerOutputDropdownwithExcelSheetOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- ckeckFinancialLedgerOutputDropdownwithExcelSheetOption -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:22:59Z" finished-at="2023-01-03T23:22:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ckeckFinancialLedgerOutputDropdownwithExcelSheetOption status=SUCCESS method=SanityFAReportsTest.ckeckFinancialLedgerOutputDropdownwithExcelSheetOption()[pri:422, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.ckeckFinancialLedgerOutputDropdownwithExcelSheetOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:22:59Z" finished-at="2023-01-03T23:22:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.ckeckFinancialLedgerOutputDropdownwithExcelCSVOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="ckeckFinancialLedgerOutputDropdownwithExcelCSVOption()[pri:423, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="ckeckFinancialLedgerOutputDropdownwithExcelCSVOption" duration-ms="17893" started-at="2023-01-03T23:22:59Z" finished-at="2023-01-03T23:23:17Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.ckeckFinancialLedgerOutputDropdownwithExcelCSVOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- ckeckFinancialLedgerOutputDropdownwithExcelCSVOption -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:23:17Z" finished-at="2023-01-03T23:23:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ckeckFinancialLedgerOutputDropdownwithExcelCSVOption status=SUCCESS method=SanityFAReportsTest.ckeckFinancialLedgerOutputDropdownwithExcelCSVOption()[pri:423, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.ckeckFinancialLedgerOutputDropdownwithExcelCSVOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkFinancialLedgerOutputDropdownasFilePathOption()[pri:424, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkFinancialLedgerOutputDropdownasFilePathOption" duration-ms="21193" started-at="2023-01-03T23:23:17Z" finished-at="2023-01-03T23:23:38Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkFinancialLedgerOutputDropdownasFilePathOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkFinancialLedgerOutputDropdownasFilePathOption -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:23:17Z" finished-at="2023-01-03T23:23:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkFinancialLedgerOutputDropdownasFilePathOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkTrialBalanceOutputDropdownwithPrinterasOption()[pri:445, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrialBalanceOutputDropdownwithPrinterasOption" duration-ms="26923" started-at="2023-01-03T23:23:38Z" finished-at="2023-01-03T23:24:05Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceOutputDropdownwithPrinterasOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrialBalanceOutputDropdownwithPrinterasOption -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:23:38Z" finished-at="2023-01-03T23:23:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrialBalanceOutputDropdownwithPrinterasOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:23:38Z" finished-at="2023-01-03T23:23:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkFinancialLedgerOutputDropdownasFilePathOption status=SUCCESS method=SanityFAReportsTest.checkFinancialLedgerOutputDropdownasFilePathOption()[pri:424, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkFinancialLedgerOutputDropdownasFilePathOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:24:05Z" finished-at="2023-01-03T23:24:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrialBalanceOutputDropdownwithPrinterasOption status=SUCCESS method=SanityFAReportsTest.checkTrialBalanceOutputDropdownwithPrinterasOption()[pri:445, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrialBalanceOutputDropdownwithPrinterasOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkTrialBalanceOutputDropdownasPrintDraftModeOption()[pri:446, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrialBalanceOutputDropdownasPrintDraftModeOption" duration-ms="21585" started-at="2023-01-03T23:24:05Z" finished-at="2023-01-03T23:24:27Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceOutputDropdownasPrintDraftModeOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrialBalanceOutputDropdownasPrintDraftModeOption -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:24:05Z" finished-at="2023-01-03T23:24:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrialBalanceOutputDropdownasPrintDraftModeOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:24:27Z" finished-at="2023-01-03T23:24:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrialBalanceOutputDropdownasPrintDraftModeOption status=SUCCESS method=SanityFAReportsTest.checkTrialBalanceOutputDropdownasPrintDraftModeOption()[pri:446, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrialBalanceOutputDropdownasPrintDraftModeOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="ckeckTrialBalanceOutputDropdownwithExcelSheetOption()[pri:447, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="ckeckTrialBalanceOutputDropdownwithExcelSheetOption" duration-ms="17859" started-at="2023-01-03T23:24:27Z" finished-at="2023-01-03T23:24:44Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.ckeckTrialBalanceOutputDropdownwithExcelSheetOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- ckeckTrialBalanceOutputDropdownwithExcelSheetOption -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:24:27Z" finished-at="2023-01-03T23:24:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.ckeckTrialBalanceOutputDropdownwithExcelSheetOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:24:44Z" finished-at="2023-01-03T23:24:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.ckeckTrialBalanceOutputDropdownwithExcelCSVOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:24:44Z" finished-at="2023-01-03T23:24:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ckeckTrialBalanceOutputDropdownwithExcelSheetOption status=SUCCESS method=SanityFAReportsTest.ckeckTrialBalanceOutputDropdownwithExcelSheetOption()[pri:447, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.ckeckTrialBalanceOutputDropdownwithExcelSheetOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="ckeckTrialBalanceOutputDropdownwithExcelCSVOption()[pri:448, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="ckeckTrialBalanceOutputDropdownwithExcelCSVOption" duration-ms="17850" started-at="2023-01-03T23:24:44Z" finished-at="2023-01-03T23:25:02Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.ckeckTrialBalanceOutputDropdownwithExcelCSVOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- ckeckTrialBalanceOutputDropdownwithExcelCSVOption -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:25:02Z" finished-at="2023-01-03T23:25:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ckeckTrialBalanceOutputDropdownwithExcelCSVOption status=SUCCESS method=SanityFAReportsTest.ckeckTrialBalanceOutputDropdownwithExcelCSVOption()[pri:448, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.ckeckTrialBalanceOutputDropdownwithExcelCSVOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:25:02Z" finished-at="2023-01-03T23:25:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrialBalanceOutputDropdownasFilePathOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkTrialBalanceOutputDropdownasFilePathOption()[pri:449, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrialBalanceOutputDropdownasFilePathOption" duration-ms="21520" started-at="2023-01-03T23:25:02Z" finished-at="2023-01-03T23:25:24Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceOutputDropdownasFilePathOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrialBalanceOutputDropdownasFilePathOption -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:25:24Z" finished-at="2023-01-03T23:25:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrialBalanceOutputDropdownasFilePathOption status=SUCCESS method=SanityFAReportsTest.checkTrialBalanceOutputDropdownasFilePathOption()[pri:449, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrialBalanceOutputDropdownasFilePathOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T23:25:24Z" finished-at="2023-01-03T23:25:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrailBalanceOutputDropdownasGraph() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkTrailBalanceOutputDropdownasGraph()[pri:450, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrailBalanceOutputDropdownasGraph" duration-ms="54318" started-at="2023-01-03T23:25:24Z" finished-at="2023-01-03T23:26:18Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrailBalanceOutputDropdownasGraph]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrailBalanceOutputDropdownasGraph -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T23:26:18Z" finished-at="2023-01-03T23:26:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrailBalanceOutputDropdownasGraph status=SUCCESS method=SanityFAReportsTest.checkTrailBalanceOutputDropdownasGraph()[pri:450, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrailBalanceOutputDropdownasGraph]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:26:18Z" finished-at="2023-01-03T23:26:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkClickingonScheduleBtninLedgerReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkClickingonScheduleBtninLedgerReport()[pri:453, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkClickingonScheduleBtninLedgerReport" duration-ms="22581" started-at="2023-01-03T23:26:18Z" finished-at="2023-01-03T23:26:41Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkClickingonScheduleBtninLedgerReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkClickingonScheduleBtninLedgerReport -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T23:26:41Z" finished-at="2023-01-03T23:26:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkClickingonScheduleBtninLedgerReport status=SUCCESS method=SanityFAReportsTest.checkClickingonScheduleBtninLedgerReport()[pri:453, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkClickingonScheduleBtninLedgerReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:26:41Z" finished-at="2023-01-03T23:26:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkOutputRadioButtonsandOutputPathisDisplayedinLedgerScheduleReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkOutputRadioButtonsandOutputPathisDisplayedinLedgerScheduleReport()[pri:454, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkOutputRadioButtonsandOutputPathisDisplayedinLedgerScheduleReport" duration-ms="432" started-at="2023-01-03T23:26:41Z" finished-at="2023-01-03T23:26:41Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkOutputRadioButtonsandOutputPathisDisplayedinLedgerScheduleReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkOutputRadioButtonsandOutputPathisDisplayedinLedgerScheduleReport -->
        <test-method status="PASS" signature="checkRecurrencePatternRadioButtonsisDisplayedinLedgerScheduleReport()[pri:455, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkRecurrencePatternRadioButtonsisDisplayedinLedgerScheduleReport" duration-ms="379" started-at="2023-01-03T23:26:41Z" finished-at="2023-01-03T23:26:42Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkRecurrencePatternRadioButtonsisDisplayedinLedgerScheduleReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkRecurrencePatternRadioButtonsisDisplayedinLedgerScheduleReport -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:26:41Z" finished-at="2023-01-03T23:26:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkOutputRadioButtonsandOutputPathisDisplayedinLedgerScheduleReport status=SUCCESS method=SanityFAReportsTest.checkOutputRadioButtonsandOutputPathisDisplayedinLedgerScheduleReport()[pri:454, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkOutputRadioButtonsandOutputPathisDisplayedinLedgerScheduleReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:26:41Z" finished-at="2023-01-03T23:26:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkRecurrencePatternRadioButtonsisDisplayedinLedgerScheduleReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:26:42Z" finished-at="2023-01-03T23:26:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkRecurrencePatternRadioButtonsisDisplayedinLedgerScheduleReport status=SUCCESS method=SanityFAReportsTest.checkRecurrencePatternRadioButtonsisDisplayedinLedgerScheduleReport()[pri:455, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkRecurrencePatternRadioButtonsisDisplayedinLedgerScheduleReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkVerifyMinuteRadioBtn()[pri:456, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkVerifyMinuteRadioBtn" duration-ms="2454" started-at="2023-01-03T23:26:42Z" finished-at="2023-01-03T23:26:44Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkVerifyMinuteRadioBtn]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkVerifyMinuteRadioBtn -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:26:42Z" finished-at="2023-01-03T23:26:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkVerifyMinuteRadioBtn() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:26:44Z" finished-at="2023-01-03T23:26:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkVerifyMinuteRadioBtn status=SUCCESS method=SanityFAReportsTest.checkVerifyMinuteRadioBtn()[pri:456, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkVerifyMinuteRadioBtn]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:26:44Z" finished-at="2023-01-03T23:26:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkVerifyHourRadioBtn() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkVerifyHourRadioBtn()[pri:457, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkVerifyHourRadioBtn" duration-ms="2342" started-at="2023-01-03T23:26:44Z" finished-at="2023-01-03T23:26:46Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkVerifyHourRadioBtn]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkVerifyHourRadioBtn -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T23:26:46Z" finished-at="2023-01-03T23:26:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkVerifyDayRadioBtn() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:26:46Z" finished-at="2023-01-03T23:26:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkVerifyHourRadioBtn status=SUCCESS method=SanityFAReportsTest.checkVerifyHourRadioBtn()[pri:457, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkVerifyHourRadioBtn]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkVerifyDayRadioBtn()[pri:458, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkVerifyDayRadioBtn" duration-ms="2372" started-at="2023-01-03T23:26:46Z" finished-at="2023-01-03T23:26:49Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkVerifyDayRadioBtn]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkVerifyDayRadioBtn -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:26:49Z" finished-at="2023-01-03T23:26:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkVerifyWeekRadioBtn() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:26:49Z" finished-at="2023-01-03T23:26:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkVerifyDayRadioBtn status=SUCCESS method=SanityFAReportsTest.checkVerifyDayRadioBtn()[pri:458, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkVerifyDayRadioBtn]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkVerifyWeekRadioBtn()[pri:459, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkVerifyWeekRadioBtn" duration-ms="2728" started-at="2023-01-03T23:26:49Z" finished-at="2023-01-03T23:26:51Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkVerifyWeekRadioBtn]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkVerifyWeekRadioBtn -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:26:51Z" finished-at="2023-01-03T23:26:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkVerifyWeekRadioBtn status=SUCCESS method=SanityFAReportsTest.checkVerifyWeekRadioBtn()[pri:459, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkVerifyWeekRadioBtn]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:26:51Z" finished-at="2023-01-03T23:26:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkVerifyMonthRadioButton() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkVerifyMonthRadioButton()[pri:460, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkVerifyMonthRadioButton" duration-ms="6358" started-at="2023-01-03T23:26:51Z" finished-at="2023-01-03T23:26:58Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkVerifyMonthRadioButton]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkVerifyMonthRadioButton -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:26:58Z" finished-at="2023-01-03T23:26:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkVerifyMonthRadioButton status=SUCCESS method=SanityFAReportsTest.checkVerifyMonthRadioButton()[pri:460, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkVerifyMonthRadioButton]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkVerifyYearRadioBtn()[pri:461, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkVerifyYearRadioBtn" duration-ms="5731" started-at="2023-01-03T23:26:58Z" finished-at="2023-01-03T23:27:04Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkVerifyYearRadioBtn]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkVerifyYearRadioBtn -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:26:58Z" finished-at="2023-01-03T23:26:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkVerifyYearRadioBtn() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:27:04Z" finished-at="2023-01-03T23:27:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkRangeofRecurrenceFields() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkRangeofRecurrenceFields()[pri:462, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkRangeofRecurrenceFields" duration-ms="3784" started-at="2023-01-03T23:27:04Z" finished-at="2023-01-03T23:27:07Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkRangeofRecurrenceFields]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkRangeofRecurrenceFields -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:27:04Z" finished-at="2023-01-03T23:27:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkVerifyYearRadioBtn status=SUCCESS method=SanityFAReportsTest.checkVerifyYearRadioBtn()[pri:461, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkVerifyYearRadioBtn]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T23:27:07Z" finished-at="2023-01-03T23:27:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkRangeofRecurrenceFields status=SUCCESS method=SanityFAReportsTest.checkRangeofRecurrenceFields()[pri:462, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkRangeofRecurrenceFields]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:27:07Z" finished-at="2023-01-03T23:27:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkAccountGroupsListinFinancialLedger() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkAccountGroupsListinFinancialLedger()[pri:463, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkAccountGroupsListinFinancialLedger" duration-ms="13353" started-at="2023-01-03T23:27:07Z" finished-at="2023-01-03T23:27:21Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkAccountGroupsListinFinancialLedger]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkAccountGroupsListinFinancialLedger -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:27:21Z" finished-at="2023-01-03T23:27:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkControlAccountsGroupinLedgerReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:27:21Z" finished-at="2023-01-03T23:27:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkAccountGroupsListinFinancialLedger status=SUCCESS method=SanityFAReportsTest.checkAccountGroupsListinFinancialLedger()[pri:463, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkAccountGroupsListinFinancialLedger]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkControlAccountsGroupinLedgerReport()[pri:464, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkControlAccountsGroupinLedgerReport" duration-ms="6078" started-at="2023-01-03T23:27:21Z" finished-at="2023-01-03T23:27:27Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkControlAccountsGroupinLedgerReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkControlAccountsGroupinLedgerReport -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:27:27Z" finished-at="2023-01-03T23:27:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkControlAccountsGroupinLedgerReport status=SUCCESS method=SanityFAReportsTest.checkControlAccountsGroupinLedgerReport()[pri:464, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkControlAccountsGroupinLedgerReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkPricebookGroupOneAccountinLedgerReport()[pri:465, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkPricebookGroupOneAccountinLedgerReport" duration-ms="7485" started-at="2023-01-03T23:27:27Z" finished-at="2023-01-03T23:27:34Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkPricebookGroupOneAccountinLedgerReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkPricebookGroupOneAccountinLedgerReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:27:27Z" finished-at="2023-01-03T23:27:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkPricebookGroupOneAccountinLedgerReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:27:34Z" finished-at="2023-01-03T23:27:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkPricebookGroupOneAccountinLedgerReport status=SUCCESS method=SanityFAReportsTest.checkPricebookGroupOneAccountinLedgerReport()[pri:465, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkPricebookGroupOneAccountinLedgerReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:27:34Z" finished-at="2023-01-03T23:27:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkAccountsGroupinCustomerAgeingSummaryReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkAccountsGroupinCustomerAgeingSummaryReport()[pri:466, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkAccountsGroupinCustomerAgeingSummaryReport" duration-ms="14701" started-at="2023-01-03T23:27:34Z" finished-at="2023-01-03T23:27:49Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkAccountsGroupinCustomerAgeingSummaryReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkAccountsGroupinCustomerAgeingSummaryReport -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:27:49Z" finished-at="2023-01-03T23:27:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkAccountsGroupinCustomerAgeingSummaryReport status=SUCCESS method=SanityFAReportsTest.checkAccountsGroupinCustomerAgeingSummaryReport()[pri:466, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkAccountsGroupinCustomerAgeingSummaryReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T23:27:49Z" finished-at="2023-01-03T23:27:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkCustomerUpdateGroupinCustomerAgeingSummaryReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkCustomerUpdateGroupinCustomerAgeingSummaryReport()[pri:467, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkCustomerUpdateGroupinCustomerAgeingSummaryReport" duration-ms="4671" started-at="2023-01-03T23:27:49Z" finished-at="2023-01-03T23:27:54Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkCustomerUpdateGroupinCustomerAgeingSummaryReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkCustomerUpdateGroupinCustomerAgeingSummaryReport -->
        <test-method status="PASS" signature="checkPricebookGroupOneinCustomerAgeingSummaryReport()[pri:468, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkPricebookGroupOneinCustomerAgeingSummaryReport" duration-ms="6597" started-at="2023-01-03T23:27:54Z" finished-at="2023-01-03T23:28:00Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkPricebookGroupOneinCustomerAgeingSummaryReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkPricebookGroupOneinCustomerAgeingSummaryReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:27:54Z" finished-at="2023-01-03T23:27:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkPricebookGroupOneinCustomerAgeingSummaryReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:27:54Z" finished-at="2023-01-03T23:27:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkCustomerUpdateGroupinCustomerAgeingSummaryReport status=SUCCESS method=SanityFAReportsTest.checkCustomerUpdateGroupinCustomerAgeingSummaryReport()[pri:467, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkCustomerUpdateGroupinCustomerAgeingSummaryReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkPricebookGroupTwoinCustomerAgeingSummaryReport()[pri:469, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkPricebookGroupTwoinCustomerAgeingSummaryReport" duration-ms="6660" started-at="2023-01-03T23:28:00Z" finished-at="2023-01-03T23:28:07Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkPricebookGroupTwoinCustomerAgeingSummaryReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkPricebookGroupTwoinCustomerAgeingSummaryReport -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:28:00Z" finished-at="2023-01-03T23:28:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkPricebookGroupOneinCustomerAgeingSummaryReport status=SUCCESS method=SanityFAReportsTest.checkPricebookGroupOneinCustomerAgeingSummaryReport()[pri:468, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkPricebookGroupOneinCustomerAgeingSummaryReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:28:00Z" finished-at="2023-01-03T23:28:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkPricebookGroupTwoinCustomerAgeingSummaryReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T23:28:07Z" finished-at="2023-01-03T23:28:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkPricebookGroupTwoinCustomerAgeingSummaryReport status=SUCCESS method=SanityFAReportsTest.checkPricebookGroupTwoinCustomerAgeingSummaryReport()[pri:469, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkPricebookGroupTwoinCustomerAgeingSummaryReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkAccountsGroupinVendorAgeingSummaryReport()[pri:470, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkAccountsGroupinVendorAgeingSummaryReport" duration-ms="16680" started-at="2023-01-03T23:28:07Z" finished-at="2023-01-03T23:28:24Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkAccountsGroupinVendorAgeingSummaryReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkAccountsGroupinVendorAgeingSummaryReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:28:07Z" finished-at="2023-01-03T23:28:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkAccountsGroupinVendorAgeingSummaryReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:28:24Z" finished-at="2023-01-03T23:28:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTradePayableGroupinVendorAgeingSummaryReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:28:24Z" finished-at="2023-01-03T23:28:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkAccountsGroupinVendorAgeingSummaryReport status=SUCCESS method=SanityFAReportsTest.checkAccountsGroupinVendorAgeingSummaryReport()[pri:470, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkAccountsGroupinVendorAgeingSummaryReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="FAIL" signature="checkTradePayableGroupinVendorAgeingSummaryReport()[pri:471, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTradePayableGroupinVendorAgeingSummaryReport" duration-ms="8728" started-at="2023-01-03T23:28:24Z" finished-at="2023-01-03T23:28:32Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at com.focus.testcases.SanityFAReportsTest.checkTradePayableGroupinVendorAgeingSummaryReport(SanityFAReportsTest.java:2879)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTradePayableGroupinVendorAgeingSummaryReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTradePayableGroupinVendorAgeingSummaryReport -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="142" started-at="2023-01-03T23:28:32Z" finished-at="2023-01-03T23:28:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTradePayableGroupinVendorAgeingSummaryReport status=FAILURE method=SanityFAReportsTest.checkTradePayableGroupinVendorAgeingSummaryReport()[pri:471, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTradePayableGroupinVendorAgeingSummaryReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkPricebookGroupOneinVendorAgeingSummaryReport()[pri:472, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkPricebookGroupOneinVendorAgeingSummaryReport" duration-ms="6597" started-at="2023-01-03T23:28:32Z" finished-at="2023-01-03T23:28:39Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkPricebookGroupOneinVendorAgeingSummaryReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkPricebookGroupOneinVendorAgeingSummaryReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:28:32Z" finished-at="2023-01-03T23:28:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkPricebookGroupOneinVendorAgeingSummaryReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:28:39Z" finished-at="2023-01-03T23:28:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkPricebookGroupTwoinVendorAgeingSummaryReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:28:39Z" finished-at="2023-01-03T23:28:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkPricebookGroupOneinVendorAgeingSummaryReport status=SUCCESS method=SanityFAReportsTest.checkPricebookGroupOneinVendorAgeingSummaryReport()[pri:472, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkPricebookGroupOneinVendorAgeingSummaryReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkPricebookGroupTwoinVendorAgeingSummaryReport()[pri:473, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkPricebookGroupTwoinVendorAgeingSummaryReport" duration-ms="6597" started-at="2023-01-03T23:28:39Z" finished-at="2023-01-03T23:28:46Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkPricebookGroupTwoinVendorAgeingSummaryReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkPricebookGroupTwoinVendorAgeingSummaryReport -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:28:46Z" finished-at="2023-01-03T23:28:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkPricebookGroupTwoinVendorAgeingSummaryReport status=SUCCESS method=SanityFAReportsTest.checkPricebookGroupTwoinVendorAgeingSummaryReport()[pri:473, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkPricebookGroupTwoinVendorAgeingSummaryReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="FAIL" signature="checkFinanacialLedgerReportanalyze()[pri:474, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkFinanacialLedgerReportanalyze" duration-ms="62273" started-at="2023-01-03T23:28:46Z" finished-at="2023-01-03T23:29:48Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at com.focus.testcases.SanityFAReportsTest.checkFinanacialLedgerReportanalyze(SanityFAReportsTest.java:2903)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkFinanacialLedgerReportanalyze]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkFinanacialLedgerReportanalyze -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:28:46Z" finished-at="2023-01-03T23:28:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkFinanacialLedgerReportanalyze() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="125" started-at="2023-01-03T23:29:48Z" finished-at="2023-01-03T23:29:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkFinanacialLedgerReportanalyze status=FAILURE method=SanityFAReportsTest.checkFinanacialLedgerReportanalyze()[pri:474, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkFinanacialLedgerReportanalyze]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:29:48Z" finished-at="2023-01-03T23:29:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkDeleteBalanceColumnfromColumnMeasureinAlanayzeLedgerReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkDeleteBalanceColumnfromColumnMeasureinAlanayzeLedgerReport()[pri:475, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkDeleteBalanceColumnfromColumnMeasureinAlanayzeLedgerReport" duration-ms="5650" started-at="2023-01-03T23:29:48Z" finished-at="2023-01-03T23:29:54Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkDeleteBalanceColumnfromColumnMeasureinAlanayzeLedgerReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkDeleteBalanceColumnfromColumnMeasureinAlanayzeLedgerReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T23:29:54Z" finished-at="2023-01-03T23:29:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkDeleteBalanceColumnfromColumnRemoveBtninAlanayzeLedgerReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:29:54Z" finished-at="2023-01-03T23:29:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkDeleteBalanceColumnfromColumnMeasureinAlanayzeLedgerReport status=SUCCESS method=SanityFAReportsTest.checkDeleteBalanceColumnfromColumnMeasureinAlanayzeLedgerReport()[pri:475, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkDeleteBalanceColumnfromColumnMeasureinAlanayzeLedgerReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkDeleteBalanceColumnfromColumnRemoveBtninAlanayzeLedgerReport()[pri:476, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkDeleteBalanceColumnfromColumnRemoveBtninAlanayzeLedgerReport" duration-ms="33301" started-at="2023-01-03T23:29:54Z" finished-at="2023-01-03T23:30:27Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkDeleteBalanceColumnfromColumnRemoveBtninAlanayzeLedgerReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkDeleteBalanceColumnfromColumnRemoveBtninAlanayzeLedgerReport -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T23:30:27Z" finished-at="2023-01-03T23:30:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkDeleteBalanceColumnfromColumnRemoveBtninAlanayzeLedgerReport status=SUCCESS method=SanityFAReportsTest.checkDeleteBalanceColumnfromColumnRemoveBtninAlanayzeLedgerReport()[pri:476, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkDeleteBalanceColumnfromColumnRemoveBtninAlanayzeLedgerReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="FAIL" signature="checkFinanacialLedgerReportanalyzeExportCSV()[pri:477, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkFinanacialLedgerReportanalyzeExportCSV" duration-ms="91288" started-at="2023-01-03T23:30:27Z" finished-at="2023-01-03T23:31:58Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at com.focus.testcases.SanityFAReportsTest.checkFinanacialLedgerReportanalyzeExportCSV(SanityFAReportsTest.java:2935)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkFinanacialLedgerReportanalyzeExportCSV]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkFinanacialLedgerReportanalyzeExportCSV -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:30:27Z" finished-at="2023-01-03T23:30:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkFinanacialLedgerReportanalyzeExportCSV() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="105" started-at="2023-01-03T23:31:58Z" finished-at="2023-01-03T23:31:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkFinanacialLedgerReportanalyzeExportCSV status=FAILURE method=SanityFAReportsTest.checkFinanacialLedgerReportanalyzeExportCSV()[pri:477, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkFinanacialLedgerReportanalyzeExportCSV]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:31:58Z" finished-at="2023-01-03T23:31:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasPlainandDisplayColasNoneandOutputasScreen() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="FAIL" signature="checkTrialBalanceFormatasPlainandDisplayColasNoneandOutputasScreen()[pri:478, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrialBalanceFormatasPlainandDisplayColasNoneandOutputasScreen" duration-ms="22608" started-at="2023-01-03T23:31:58Z" finished-at="2023-01-03T23:32:21Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasPlainandDisplayColasNoneandOutputasScreen(SanityFAReportsTest.java:2948)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasPlainandDisplayColasNoneandOutputasScreen]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrialBalanceFormatasPlainandDisplayColasNoneandOutputasScreen -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="125" started-at="2023-01-03T23:32:21Z" finished-at="2023-01-03T23:32:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrialBalanceFormatasPlainandDisplayColasNoneandOutputasScreen status=FAILURE method=SanityFAReportsTest.checkTrialBalanceFormatasPlainandDisplayColasNoneandOutputasScreen()[pri:478, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasPlainandDisplayColasNoneandOutputasScreen]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="FAIL" signature="checkTrialBalanceFormatasPlainDisplayColasNoneandOutputasPrinter()[pri:479, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrialBalanceFormatasPlainDisplayColasNoneandOutputasPrinter" duration-ms="24846" started-at="2023-01-03T23:32:21Z" finished-at="2023-01-03T23:32:46Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasNoneandOutputasPrinter(SanityFAReportsTest.java:2957)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasNoneandOutputasPrinter]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrialBalanceFormatasPlainDisplayColasNoneandOutputasPrinter -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:32:21Z" finished-at="2023-01-03T23:32:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasNoneandOutputasPrinter() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="105" started-at="2023-01-03T23:32:46Z" finished-at="2023-01-03T23:32:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrialBalanceFormatasPlainDisplayColasNoneandOutputasPrinter status=FAILURE method=SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasNoneandOutputasPrinter()[pri:479, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasNoneandOutputasPrinter]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:32:46Z" finished-at="2023-01-03T23:32:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrialBalanaceFormatasPlainDisplayColasNoneandOutputasExcel() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="FAIL" signature="checkTrialBalanaceFormatasPlainDisplayColasNoneandOutputasExcel()[pri:480, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrialBalanaceFormatasPlainDisplayColasNoneandOutputasExcel" duration-ms="35816" started-at="2023-01-03T23:32:46Z" finished-at="2023-01-03T23:33:22Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at com.focus.testcases.SanityFAReportsTest.checkTrialBalanaceFormatasPlainDisplayColasNoneandOutputasExcel(SanityFAReportsTest.java:2966)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanaceFormatasPlainDisplayColasNoneandOutputasExcel]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrialBalanaceFormatasPlainDisplayColasNoneandOutputasExcel -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="105" started-at="2023-01-03T23:33:22Z" finished-at="2023-01-03T23:33:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrialBalanaceFormatasPlainDisplayColasNoneandOutputasExcel status=FAILURE method=SanityFAReportsTest.checkTrialBalanaceFormatasPlainDisplayColasNoneandOutputasExcel()[pri:480, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrialBalanaceFormatasPlainDisplayColasNoneandOutputasExcel]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:33:22Z" finished-at="2023-01-03T23:33:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasNoneandOutputasPrintDraft() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="FAIL" signature="checkTrialBalanceFormatasPlainDisplayColasNoneandOutputasPrintDraft()[pri:481, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrialBalanceFormatasPlainDisplayColasNoneandOutputasPrintDraft" duration-ms="21708" started-at="2023-01-03T23:33:22Z" finished-at="2023-01-03T23:33:44Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasNoneandOutputasPrintDraft(SanityFAReportsTest.java:2974)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasNoneandOutputasPrintDraft]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrialBalanceFormatasPlainDisplayColasNoneandOutputasPrintDraft -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="103" started-at="2023-01-03T23:33:44Z" finished-at="2023-01-03T23:33:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrialBalanceFormatasPlainDisplayColasNoneandOutputasPrintDraft status=FAILURE method=SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasNoneandOutputasPrintDraft()[pri:481, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasNoneandOutputasPrintDraft]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="FAIL" signature="checkTrialBalanceFormatasPlainDisplayColasNoneandOutputasFilePath()[pri:482, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrialBalanceFormatasPlainDisplayColasNoneandOutputasFilePath" duration-ms="26754" started-at="2023-01-03T23:33:44Z" finished-at="2023-01-03T23:34:11Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasNoneandOutputasFilePath(SanityFAReportsTest.java:2982)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasNoneandOutputasFilePath]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrialBalanceFormatasPlainDisplayColasNoneandOutputasFilePath -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:33:44Z" finished-at="2023-01-03T23:33:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasNoneandOutputasFilePath() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="108" started-at="2023-01-03T23:34:11Z" finished-at="2023-01-03T23:34:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrialBalanceFormatasPlainDisplayColasNoneandOutputasFilePath status=FAILURE method=SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasNoneandOutputasFilePath()[pri:482, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasNoneandOutputasFilePath]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:34:11Z" finished-at="2023-01-03T23:34:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasNoneandOutputasExcelCSV() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="FAIL" signature="checkTrialBalanceFormatasPlainDisplayColasNoneandOutputasExcelCSV()[pri:483, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrialBalanceFormatasPlainDisplayColasNoneandOutputasExcelCSV" duration-ms="57034" started-at="2023-01-03T23:34:11Z" finished-at="2023-01-03T23:35:08Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasNoneandOutputasExcelCSV(SanityFAReportsTest.java:2990)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasNoneandOutputasExcelCSV]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrialBalanceFormatasPlainDisplayColasNoneandOutputasExcelCSV -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="178" started-at="2023-01-03T23:35:08Z" finished-at="2023-01-03T23:35:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrialBalanceFormatasPlainDisplayColasNoneandOutputasExcelCSV status=FAILURE method=SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasNoneandOutputasExcelCSV()[pri:483, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasNoneandOutputasExcelCSV]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="FAIL" signature="checkTrialBalanceFormatasPlainDisplayColasNoneandOutputasEmail()[pri:484, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrialBalanceFormatasPlainDisplayColasNoneandOutputasEmail" duration-ms="157443" started-at="2023-01-03T23:35:08Z" finished-at="2023-01-03T23:37:45Z">
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[java.lang.reflect.InvocationTargetException
Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z'
System info: host: 'FOCUS-QA-10', ip: '192.168.4.206', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_111'
Driver info: driver.version: RemoteWebDriver]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: java.lang.reflect.InvocationTargetException
Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z'
System info: host: 'FOCUS-QA-10', ip: '192.168.4.206', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_111'
Driver info: driver.version: RemoteWebDriver
	at org.openqa.selenium.json.BeanToJsonConverter.convertUsingMethod(BeanToJsonConverter.java:195)
	at org.openqa.selenium.json.BeanToJsonConverter.lambda$new$11(BeanToJsonConverter.java:90)
	at org.openqa.selenium.json.BeanToJsonConverter.lambda$convertObject$26(BeanToJsonConverter.java:171)
	at java.util.Optional.map(Unknown Source)
	at org.openqa.selenium.json.BeanToJsonConverter.convertObject(BeanToJsonConverter.java:171)
	at org.openqa.selenium.json.BeanToJsonConverter.lambda$null$16(BeanToJsonConverter.java:102)
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
	at java.util.Iterator.forEachRemaining(Unknown Source)
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Unknown Source)
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source)
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
	at java.util.stream.ReferencePipeline.collect(Unknown Source)
	at org.openqa.selenium.json.BeanToJsonConverter.lambda$new$18(BeanToJsonConverter.java:103)
	at org.openqa.selenium.json.BeanToJsonConverter.lambda$convertObject$26(BeanToJsonConverter.java:171)
	at java.util.Optional.map(Unknown Source)
	at org.openqa.selenium.json.BeanToJsonConverter.convertObject(BeanToJsonConverter.java:171)
	at org.openqa.selenium.json.BeanToJsonConverter.lambda$null$19(BeanToJsonConverter.java:109)
	at com.google.common.collect.SingletonImmutableBiMap.forEach(SingletonImmutableBiMap.java:65)
	at org.openqa.selenium.json.BeanToJsonConverter.lambda$new$20(BeanToJsonConverter.java:108)
	at org.openqa.selenium.json.BeanToJsonConverter.lambda$convertObject$26(BeanToJsonConverter.java:171)
	at java.util.Optional.map(Unknown Source)
	at org.openqa.selenium.json.BeanToJsonConverter.convertObject(BeanToJsonConverter.java:171)
	at org.openqa.selenium.json.BeanToJsonConverter.convert(BeanToJsonConverter.java:139)
	at org.openqa.selenium.json.Json.toJson(Json.java:48)
	at org.openqa.selenium.remote.http.AbstractHttpCommandCodec.encode(AbstractHttpCommandCodec.java:227)
	at org.openqa.selenium.remote.http.AbstractHttpCommandCodec.encode(AbstractHttpCommandCodec.java:117)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:152)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
	at org.openqa.selenium.remote.RemoteWebDriver.perform(RemoteWebDriver.java:609)
	at org.openqa.selenium.interactions.Actions$BuiltAction.perform(Actions.java:638)
	at com.focus.Pages.SanityFAReportsPage.checkTrialBalanceFormatasPlainDisplayColasNoneandOutputasEmail(SanityFAReportsPage.java:53423)
	at com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasNoneandOutputasEmail(SanityFAReportsTest.java:2997)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: java.lang.reflect.InvocationTargetException
	at sun.reflect.GeneratedMethodAccessor10.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.openqa.selenium.json.BeanToJsonConverter.convertUsingMethod(BeanToJsonConverter.java:191)
	... 58 more
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"(//*[@data-tooltip='Download'])[1]"}
  (Session info: chrome=108.0.5359.125)
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z'
System info: host: 'FOCUS-QA-10', ip: '192.168.4.206', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\Rakesh\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:59756}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 56bfff794ecbcecb25f8ad2526ab4f26
*** Element info: {Using=xpath, value=(//*[@data-tooltip='Download'])[1]}
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
	at com.sun.proxy.$Proxy12.getWrappedElement(Unknown Source)
	at org.openqa.selenium.interactions.PointerInput$Origin.asArg(PointerInput.java:203)
	at org.openqa.selenium.interactions.PointerInput$Move.encode(PointerInput.java:154)
	at org.openqa.selenium.interactions.Sequence.encode(Sequence.java:75)
	at org.openqa.selenium.interactions.Sequence.toJson(Sequence.java:84)
	... 62 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasNoneandOutputasEmail]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrialBalanceFormatasPlainDisplayColasNoneandOutputasEmail -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:35:08Z" finished-at="2023-01-03T23:35:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasNoneandOutputasEmail() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="125" started-at="2023-01-03T23:37:45Z" finished-at="2023-01-03T23:37:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrialBalanceFormatasPlainDisplayColasNoneandOutputasEmail status=FAILURE method=SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasNoneandOutputasEmail()[pri:484, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasNoneandOutputasEmail]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="FAIL" signature="checkTrialBalanceFormatasPlainDisplayColasNoneandOutputasGraph()[pri:484, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrialBalanceFormatasPlainDisplayColasNoneandOutputasGraph" duration-ms="80059" started-at="2023-01-03T23:37:45Z" finished-at="2023-01-03T23:39:05Z">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='60']//div[contains(text(),'Financials')]' (tried for 40 second(s) with 5000 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='60']//div[contains(text(),'Financials')]' (tried for 40 second(s) with 5000 milliseconds interval)
	at org.openqa.selenium.support.ui.FluentWait.timeoutException(FluentWait.java:303)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:271)
	at com.focus.Pages.SanityFAReportsPage.checkTrialBalanceFormatasPlainDisplayColasNoneandOutputasGraph(SanityFAReportsPage.java:53602)
	at com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasNoneandOutputasGraph(SanityFAReportsTest.java:3004)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id='60']//div[contains(text(),'Financials')]"}
  (Session info: chrome=108.0.5359.125)
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z'
System info: host: 'FOCUS-QA-10', ip: '192.168.4.206', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\Rakesh\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:59756}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 56bfff794ecbcecb25f8ad2526ab4f26
*** Element info: {Using=xpath, value=//*[@id='60']//div[contains(text(),'Financials')]}
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
	at com.sun.proxy.$Proxy12.isDisplayed(Unknown Source)
	at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:315)
	at org.openqa.selenium.support.ui.ExpectedConditions.access$100(ExpectedConditions.java:44)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:301)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:298)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:686)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:682)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:248)
	... 26 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasNoneandOutputasGraph]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrialBalanceFormatasPlainDisplayColasNoneandOutputasGraph -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:37:45Z" finished-at="2023-01-03T23:37:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasNoneandOutputasGraph() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="131" started-at="2023-01-03T23:39:06Z" finished-at="2023-01-03T23:39:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrialBalanceFormatasPlainDisplayColasNoneandOutputasGraph status=FAILURE method=SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasNoneandOutputasGraph()[pri:484, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasNoneandOutputasGraph]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:39:06Z" finished-at="2023-01-03T23:39:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasPlainandDisplayColasMonthandOutputasScreen() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="FAIL" signature="checkTrialBalanceFormatasPlainandDisplayColasMonthandOutputasScreen()[pri:485, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrialBalanceFormatasPlainandDisplayColasMonthandOutputasScreen" duration-ms="80074" started-at="2023-01-03T23:39:06Z" finished-at="2023-01-03T23:40:26Z">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='60']//div[contains(text(),'Financials')]' (tried for 40 second(s) with 5000 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='60']//div[contains(text(),'Financials')]' (tried for 40 second(s) with 5000 milliseconds interval)
	at org.openqa.selenium.support.ui.FluentWait.timeoutException(FluentWait.java:303)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:271)
	at com.focus.Pages.SanityFAReportsPage.checkTrialBalanceFormatasPlainandDisplayColasMonthandOutputasScreen(SanityFAReportsPage.java:53784)
	at com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasPlainandDisplayColasMonthandOutputasScreen(SanityFAReportsTest.java:3013)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id='60']//div[contains(text(),'Financials')]"}
  (Session info: chrome=108.0.5359.125)
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z'
System info: host: 'FOCUS-QA-10', ip: '192.168.4.206', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\Rakesh\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:59756}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 56bfff794ecbcecb25f8ad2526ab4f26
*** Element info: {Using=xpath, value=//*[@id='60']//div[contains(text(),'Financials')]}
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
	at com.sun.proxy.$Proxy12.isDisplayed(Unknown Source)
	at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:315)
	at org.openqa.selenium.support.ui.ExpectedConditions.access$100(ExpectedConditions.java:44)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:301)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:298)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:686)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:682)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:248)
	... 26 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasPlainandDisplayColasMonthandOutputasScreen]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrialBalanceFormatasPlainandDisplayColasMonthandOutputasScreen -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="122" started-at="2023-01-03T23:40:26Z" finished-at="2023-01-03T23:40:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrialBalanceFormatasPlainandDisplayColasMonthandOutputasScreen status=FAILURE method=SanityFAReportsTest.checkTrialBalanceFormatasPlainandDisplayColasMonthandOutputasScreen()[pri:485, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasPlainandDisplayColasMonthandOutputasScreen]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:40:26Z" finished-at="2023-01-03T23:40:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasMonthandOutputasPrinter() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="FAIL" signature="checkTrialBalanceFormatasPlainDisplayColasMonthandOutputasPrinter()[pri:486, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrialBalanceFormatasPlainDisplayColasMonthandOutputasPrinter" duration-ms="80052" started-at="2023-01-03T23:40:26Z" finished-at="2023-01-03T23:41:46Z">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='RITOutput_']' (tried for 40 second(s) with 5000 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='RITOutput_']' (tried for 40 second(s) with 5000 milliseconds interval)
	at org.openqa.selenium.support.ui.FluentWait.timeoutException(FluentWait.java:303)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:271)
	at com.focus.Pages.SanityFAReportsPage.checkTrialBalanceFormatasPlainDisplayColasMonthandOutputasPrinter(SanityFAReportsPage.java:53959)
	at com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasMonthandOutputasPrinter(SanityFAReportsTest.java:3022)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id='RITOutput_']"}
  (Session info: chrome=108.0.5359.125)
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z'
System info: host: 'FOCUS-QA-10', ip: '192.168.4.206', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\Rakesh\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:59756}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 56bfff794ecbcecb25f8ad2526ab4f26
*** Element info: {Using=xpath, value=//*[@id='RITOutput_']}
	at sun.reflect.GeneratedConstructorAccessor52.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
	at com.sun.proxy.$Proxy12.isDisplayed(Unknown Source)
	at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:315)
	at org.openqa.selenium.support.ui.ExpectedConditions.access$100(ExpectedConditions.java:44)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:301)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:298)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:686)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:682)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:248)
	... 26 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasMonthandOutputasPrinter]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrialBalanceFormatasPlainDisplayColasMonthandOutputasPrinter -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="127" started-at="2023-01-03T23:41:46Z" finished-at="2023-01-03T23:41:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrialBalanceFormatasPlainDisplayColasMonthandOutputasPrinter status=FAILURE method=SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasMonthandOutputasPrinter()[pri:486, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasMonthandOutputasPrinter]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:41:46Z" finished-at="2023-01-03T23:41:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrialBalanaceFormatasPlainDisplayColasMonthandOutputasExcel() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="FAIL" signature="checkTrialBalanaceFormatasPlainDisplayColasMonthandOutputasExcel()[pri:487, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrialBalanaceFormatasPlainDisplayColasMonthandOutputasExcel" duration-ms="80069" started-at="2023-01-03T23:41:46Z" finished-at="2023-01-03T23:43:06Z">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='RITOutput_']' (tried for 40 second(s) with 5000 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='RITOutput_']' (tried for 40 second(s) with 5000 milliseconds interval)
	at org.openqa.selenium.support.ui.FluentWait.timeoutException(FluentWait.java:303)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:271)
	at com.focus.Pages.SanityFAReportsPage.checkTrialBalanaceFormatasPlainDisplayColasMonthandOutputasExcel(SanityFAReportsPage.java:54238)
	at com.focus.testcases.SanityFAReportsTest.checkTrialBalanaceFormatasPlainDisplayColasMonthandOutputasExcel(SanityFAReportsTest.java:3031)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id='RITOutput_']"}
  (Session info: chrome=108.0.5359.125)
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z'
System info: host: 'FOCUS-QA-10', ip: '192.168.4.206', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\Rakesh\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:59756}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 56bfff794ecbcecb25f8ad2526ab4f26
*** Element info: {Using=xpath, value=//*[@id='RITOutput_']}
	at sun.reflect.GeneratedConstructorAccessor52.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
	at com.sun.proxy.$Proxy12.isDisplayed(Unknown Source)
	at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:315)
	at org.openqa.selenium.support.ui.ExpectedConditions.access$100(ExpectedConditions.java:44)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:301)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:298)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:686)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:682)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:248)
	... 26 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanaceFormatasPlainDisplayColasMonthandOutputasExcel]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrialBalanaceFormatasPlainDisplayColasMonthandOutputasExcel -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="127" started-at="2023-01-03T23:43:06Z" finished-at="2023-01-03T23:43:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrialBalanaceFormatasPlainDisplayColasMonthandOutputasExcel status=FAILURE method=SanityFAReportsTest.checkTrialBalanaceFormatasPlainDisplayColasMonthandOutputasExcel()[pri:487, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrialBalanaceFormatasPlainDisplayColasMonthandOutputasExcel]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="FAIL" signature="checkTrialBalanceFormatasPlainDisplayColasMonthandOutputasPrintDraft()[pri:488, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrialBalanceFormatasPlainDisplayColasMonthandOutputasPrintDraft" duration-ms="80062" started-at="2023-01-03T23:43:06Z" finished-at="2023-01-03T23:44:26Z">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='RITOutput_']' (tried for 40 second(s) with 5000 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='RITOutput_']' (tried for 40 second(s) with 5000 milliseconds interval)
	at org.openqa.selenium.support.ui.FluentWait.timeoutException(FluentWait.java:303)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:271)
	at com.focus.Pages.SanityFAReportsPage.checkTrialBalanceFormatasPlainDisplayColasMonthandOutputasPrintDraft(SanityFAReportsPage.java:54097)
	at com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasMonthandOutputasPrintDraft(SanityFAReportsTest.java:3039)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id='RITOutput_']"}
  (Session info: chrome=108.0.5359.125)
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z'
System info: host: 'FOCUS-QA-10', ip: '192.168.4.206', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\Rakesh\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:59756}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 56bfff794ecbcecb25f8ad2526ab4f26
*** Element info: {Using=xpath, value=//*[@id='RITOutput_']}
	at sun.reflect.GeneratedConstructorAccessor52.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
	at com.sun.proxy.$Proxy12.isDisplayed(Unknown Source)
	at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:315)
	at org.openqa.selenium.support.ui.ExpectedConditions.access$100(ExpectedConditions.java:44)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:301)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:298)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:686)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:682)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:248)
	... 26 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasMonthandOutputasPrintDraft]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrialBalanceFormatasPlainDisplayColasMonthandOutputasPrintDraft -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:43:06Z" finished-at="2023-01-03T23:43:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasMonthandOutputasPrintDraft() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="132" started-at="2023-01-03T23:44:26Z" finished-at="2023-01-03T23:44:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrialBalanceFormatasPlainDisplayColasMonthandOutputasPrintDraft status=FAILURE method=SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasMonthandOutputasPrintDraft()[pri:488, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasMonthandOutputasPrintDraft]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="FAIL" signature="checkTrialBalanceFormatasPlainDisplayColasMonthandOutputasFilePath()[pri:489, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrialBalanceFormatasPlainDisplayColasMonthandOutputasFilePath" duration-ms="80065" started-at="2023-01-03T23:44:26Z" finished-at="2023-01-03T23:45:46Z">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='RITOutput_']' (tried for 40 second(s) with 5000 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='RITOutput_']' (tried for 40 second(s) with 5000 milliseconds interval)
	at org.openqa.selenium.support.ui.FluentWait.timeoutException(FluentWait.java:303)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:271)
	at com.focus.Pages.SanityFAReportsPage.checkTrialBalanceFormatasPlainDisplayColasMonthandOutputasFilePath(SanityFAReportsPage.java:54398)
	at com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasMonthandOutputasFilePath(SanityFAReportsTest.java:3047)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id='RITOutput_']"}
  (Session info: chrome=108.0.5359.125)
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z'
System info: host: 'FOCUS-QA-10', ip: '192.168.4.206', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\Rakesh\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:59756}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 56bfff794ecbcecb25f8ad2526ab4f26
*** Element info: {Using=xpath, value=//*[@id='RITOutput_']}
	at sun.reflect.GeneratedConstructorAccessor52.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
	at com.sun.proxy.$Proxy12.isDisplayed(Unknown Source)
	at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:315)
	at org.openqa.selenium.support.ui.ExpectedConditions.access$100(ExpectedConditions.java:44)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:301)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:298)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:686)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:682)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:248)
	... 26 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasMonthandOutputasFilePath]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrialBalanceFormatasPlainDisplayColasMonthandOutputasFilePath -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:44:26Z" finished-at="2023-01-03T23:44:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasMonthandOutputasFilePath() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="132" started-at="2023-01-03T23:45:46Z" finished-at="2023-01-03T23:45:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrialBalanceFormatasPlainDisplayColasMonthandOutputasFilePath status=FAILURE method=SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasMonthandOutputasFilePath()[pri:489, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasMonthandOutputasFilePath]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:45:47Z" finished-at="2023-01-03T23:45:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasMonthandOutputasExcelCSV() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="FAIL" signature="checkTrialBalanceFormatasPlainDisplayColasMonthandOutputasExcelCSV()[pri:490, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrialBalanceFormatasPlainDisplayColasMonthandOutputasExcelCSV" duration-ms="80077" started-at="2023-01-03T23:45:47Z" finished-at="2023-01-03T23:47:07Z">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='RITOutput_']' (tried for 40 second(s) with 5000 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='RITOutput_']' (tried for 40 second(s) with 5000 milliseconds interval)
	at org.openqa.selenium.support.ui.FluentWait.timeoutException(FluentWait.java:303)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:271)
	at com.focus.Pages.SanityFAReportsPage.checkTrialBalanaceFormatasPlainDisplayColasMonthandOutputasExcelCSV(SanityFAReportsPage.java:54549)
	at com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasMonthandOutputasExcelCSV(SanityFAReportsTest.java:3055)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id='RITOutput_']"}
  (Session info: chrome=108.0.5359.125)
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z'
System info: host: 'FOCUS-QA-10', ip: '192.168.4.206', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\Rakesh\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:59756}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 56bfff794ecbcecb25f8ad2526ab4f26
*** Element info: {Using=xpath, value=//*[@id='RITOutput_']}
	at sun.reflect.GeneratedConstructorAccessor52.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
	at com.sun.proxy.$Proxy12.isDisplayed(Unknown Source)
	at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:315)
	at org.openqa.selenium.support.ui.ExpectedConditions.access$100(ExpectedConditions.java:44)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:301)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:298)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:686)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:682)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:248)
	... 26 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasMonthandOutputasExcelCSV]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrialBalanceFormatasPlainDisplayColasMonthandOutputasExcelCSV -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="119" started-at="2023-01-03T23:47:07Z" finished-at="2023-01-03T23:47:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrialBalanceFormatasPlainDisplayColasMonthandOutputasExcelCSV status=FAILURE method=SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasMonthandOutputasExcelCSV()[pri:490, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasMonthandOutputasExcelCSV]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:47:07Z" finished-at="2023-01-03T23:47:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasMonthandOutputasEmail() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="FAIL" signature="checkTrialBalanceFormatasPlainDisplayColasMonthandOutputasEmail()[pri:491, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrialBalanceFormatasPlainDisplayColasMonthandOutputasEmail" duration-ms="80056" started-at="2023-01-03T23:47:07Z" finished-at="2023-01-03T23:48:27Z">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='RITOutput_']' (tried for 40 second(s) with 5000 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='RITOutput_']' (tried for 40 second(s) with 5000 milliseconds interval)
	at org.openqa.selenium.support.ui.FluentWait.timeoutException(FluentWait.java:303)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:271)
	at com.focus.Pages.SanityFAReportsPage.checkTrialBalanceFormatasPlainDisplayColasMonthandOutputasEmail(SanityFAReportsPage.java:54726)
	at com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasMonthandOutputasEmail(SanityFAReportsTest.java:3062)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id='RITOutput_']"}
  (Session info: chrome=108.0.5359.125)
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z'
System info: host: 'FOCUS-QA-10', ip: '192.168.4.206', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\Rakesh\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:59756}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 56bfff794ecbcecb25f8ad2526ab4f26
*** Element info: {Using=xpath, value=//*[@id='RITOutput_']}
	at sun.reflect.GeneratedConstructorAccessor52.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
	at com.sun.proxy.$Proxy12.isDisplayed(Unknown Source)
	at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:315)
	at org.openqa.selenium.support.ui.ExpectedConditions.access$100(ExpectedConditions.java:44)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:301)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:298)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:686)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:682)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:248)
	... 26 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasMonthandOutputasEmail]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrialBalanceFormatasPlainDisplayColasMonthandOutputasEmail -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="123" started-at="2023-01-03T23:48:27Z" finished-at="2023-01-03T23:48:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrialBalanceFormatasPlainDisplayColasMonthandOutputasEmail status=FAILURE method=SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasMonthandOutputasEmail()[pri:491, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasMonthandOutputasEmail]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="FAIL" signature="checkTrialBalanceFormatasPlainDisplayColasMonthandOutputasGraph()[pri:492, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrialBalanceFormatasPlainDisplayColasMonthandOutputasGraph" duration-ms="80091" started-at="2023-01-03T23:48:27Z" finished-at="2023-01-03T23:49:47Z">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='60']//div[contains(text(),'Financials')]' (tried for 40 second(s) with 5000 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='60']//div[contains(text(),'Financials')]' (tried for 40 second(s) with 5000 milliseconds interval)
	at org.openqa.selenium.support.ui.FluentWait.timeoutException(FluentWait.java:303)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:271)
	at com.focus.Pages.SanityFAReportsPage.checkTrialBalanceFormatasPlainDisplayColasMonthandOutputasGraph(SanityFAReportsPage.java:55096)
	at com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasMonthandOutputasGraph(SanityFAReportsTest.java:3069)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id='60']//div[contains(text(),'Financials')]"}
  (Session info: chrome=108.0.5359.125)
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z'
System info: host: 'FOCUS-QA-10', ip: '192.168.4.206', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\Rakesh\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:59756}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 56bfff794ecbcecb25f8ad2526ab4f26
*** Element info: {Using=xpath, value=//*[@id='60']//div[contains(text(),'Financials')]}
	at sun.reflect.GeneratedConstructorAccessor52.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
	at com.sun.proxy.$Proxy12.isDisplayed(Unknown Source)
	at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:315)
	at org.openqa.selenium.support.ui.ExpectedConditions.access$100(ExpectedConditions.java:44)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:301)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:298)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:686)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:682)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:248)
	... 26 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasMonthandOutputasGraph]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrialBalanceFormatasPlainDisplayColasMonthandOutputasGraph -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:48:27Z" finished-at="2023-01-03T23:48:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasMonthandOutputasGraph() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="141" started-at="2023-01-03T23:49:47Z" finished-at="2023-01-03T23:49:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrialBalanceFormatasPlainDisplayColasMonthandOutputasGraph status=FAILURE method=SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasMonthandOutputasGraph()[pri:492, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasPlainDisplayColasMonthandOutputasGraph]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:49:47Z" finished-at="2023-01-03T23:49:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasVerticalandDisplayColasNoneandOutputasScreen() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="FAIL" signature="checkTrialBalanceFormatasVerticalandDisplayColasNoneandOutputasScreen()[pri:493, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrialBalanceFormatasVerticalandDisplayColasNoneandOutputasScreen" duration-ms="82539" started-at="2023-01-03T23:49:47Z" finished-at="2023-01-03T23:51:10Z">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='60']//div[contains(text(),'Financials')]' (tried for 40 second(s) with 5000 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='60']//div[contains(text(),'Financials')]' (tried for 40 second(s) with 5000 milliseconds interval)
	at org.openqa.selenium.support.ui.FluentWait.timeoutException(FluentWait.java:303)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:271)
	at com.focus.Pages.SanityFAReportsPage.checkTrialBalanceFormatasVerticalandDisplayColasNoneandOutputasScreen(SanityFAReportsPage.java:55278)
	at com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasVerticalandDisplayColasNoneandOutputasScreen(SanityFAReportsTest.java:3080)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id='60']//div[contains(text(),'Financials')]"}
  (Session info: chrome=108.0.5359.125)
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z'
System info: host: 'FOCUS-QA-10', ip: '192.168.4.206', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\Rakesh\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:59756}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 56bfff794ecbcecb25f8ad2526ab4f26
*** Element info: {Using=xpath, value=//*[@id='60']//div[contains(text(),'Financials')]}
	at sun.reflect.GeneratedConstructorAccessor52.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
	at com.sun.proxy.$Proxy12.isDisplayed(Unknown Source)
	at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:315)
	at org.openqa.selenium.support.ui.ExpectedConditions.access$100(ExpectedConditions.java:44)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:301)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:298)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:686)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:682)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:248)
	... 26 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasVerticalandDisplayColasNoneandOutputasScreen]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrialBalanceFormatasVerticalandDisplayColasNoneandOutputasScreen -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="139" started-at="2023-01-03T23:51:10Z" finished-at="2023-01-03T23:51:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrialBalanceFormatasVerticalandDisplayColasNoneandOutputasScreen status=FAILURE method=SanityFAReportsTest.checkTrialBalanceFormatasVerticalandDisplayColasNoneandOutputasScreen()[pri:493, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasVerticalandDisplayColasNoneandOutputasScreen]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="FAIL" signature="checkTrialBalanceFormatasVerticalDisplayColasNoneandOutputasPrinter()[pri:494, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrialBalanceFormatasVerticalDisplayColasNoneandOutputasPrinter" duration-ms="80084" started-at="2023-01-03T23:51:10Z" finished-at="2023-01-03T23:52:30Z">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='RITOutput_']' (tried for 40 second(s) with 5000 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='RITOutput_']' (tried for 40 second(s) with 5000 milliseconds interval)
	at org.openqa.selenium.support.ui.FluentWait.timeoutException(FluentWait.java:303)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:271)
	at com.focus.Pages.SanityFAReportsPage.checkTrialBalanceFormatasVerticalDisplayColasNoneandOutputasPrinter(SanityFAReportsPage.java:55452)
	at com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasNoneandOutputasPrinter(SanityFAReportsTest.java:3089)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id='RITOutput_']"}
  (Session info: chrome=108.0.5359.125)
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z'
System info: host: 'FOCUS-QA-10', ip: '192.168.4.206', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\Rakesh\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:59756}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 56bfff794ecbcecb25f8ad2526ab4f26
*** Element info: {Using=xpath, value=//*[@id='RITOutput_']}
	at sun.reflect.GeneratedConstructorAccessor52.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
	at com.sun.proxy.$Proxy12.isDisplayed(Unknown Source)
	at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:315)
	at org.openqa.selenium.support.ui.ExpectedConditions.access$100(ExpectedConditions.java:44)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:301)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:298)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:686)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:682)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:248)
	... 26 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasNoneandOutputasPrinter]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrialBalanceFormatasVerticalDisplayColasNoneandOutputasPrinter -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:51:10Z" finished-at="2023-01-03T23:51:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasNoneandOutputasPrinter() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="137" started-at="2023-01-03T23:52:30Z" finished-at="2023-01-03T23:52:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrialBalanceFormatasVerticalDisplayColasNoneandOutputasPrinter status=FAILURE method=SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasNoneandOutputasPrinter()[pri:494, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasNoneandOutputasPrinter]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="FAIL" signature="checkTrialBalanaceFormatasVerticalDisplayColasNoneandOutputasExcel()[pri:495, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrialBalanaceFormatasVerticalDisplayColasNoneandOutputasExcel" duration-ms="80167" started-at="2023-01-03T23:52:30Z" finished-at="2023-01-03T23:53:50Z">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='RITOutput_']' (tried for 40 second(s) with 5000 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='RITOutput_']' (tried for 40 second(s) with 5000 milliseconds interval)
	at org.openqa.selenium.support.ui.FluentWait.timeoutException(FluentWait.java:303)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:271)
	at com.focus.Pages.SanityFAReportsPage.checkTrialBalanaceFormatasVerticalDisplayColasNoneandOutputasExcel(SanityFAReportsPage.java:55731)
	at com.focus.testcases.SanityFAReportsTest.checkTrialBalanaceFormatasVerticalDisplayColasNoneandOutputasExcel(SanityFAReportsTest.java:3098)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id='RITOutput_']"}
  (Session info: chrome=108.0.5359.125)
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z'
System info: host: 'FOCUS-QA-10', ip: '192.168.4.206', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\Rakesh\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:59756}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 56bfff794ecbcecb25f8ad2526ab4f26
*** Element info: {Using=xpath, value=//*[@id='RITOutput_']}
	at sun.reflect.GeneratedConstructorAccessor52.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
	at com.sun.proxy.$Proxy12.isDisplayed(Unknown Source)
	at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:315)
	at org.openqa.selenium.support.ui.ExpectedConditions.access$100(ExpectedConditions.java:44)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:301)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:298)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:686)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:682)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:248)
	... 26 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanaceFormatasVerticalDisplayColasNoneandOutputasExcel]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrialBalanaceFormatasVerticalDisplayColasNoneandOutputasExcel -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:52:30Z" finished-at="2023-01-03T23:52:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrialBalanaceFormatasVerticalDisplayColasNoneandOutputasExcel() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="127" started-at="2023-01-03T23:53:50Z" finished-at="2023-01-03T23:53:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrialBalanaceFormatasVerticalDisplayColasNoneandOutputasExcel status=FAILURE method=SanityFAReportsTest.checkTrialBalanaceFormatasVerticalDisplayColasNoneandOutputasExcel()[pri:495, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrialBalanaceFormatasVerticalDisplayColasNoneandOutputasExcel]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:53:50Z" finished-at="2023-01-03T23:53:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasNoneandOutputasPrintDraft() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="FAIL" signature="checkTrialBalanceFormatasVerticalDisplayColasNoneandOutputasPrintDraft()[pri:496, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrialBalanceFormatasVerticalDisplayColasNoneandOutputasPrintDraft" duration-ms="80086" started-at="2023-01-03T23:53:50Z" finished-at="2023-01-03T23:55:10Z">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='RITOutput_']' (tried for 40 second(s) with 5000 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='RITOutput_']' (tried for 40 second(s) with 5000 milliseconds interval)
	at org.openqa.selenium.support.ui.FluentWait.timeoutException(FluentWait.java:303)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:271)
	at com.focus.Pages.SanityFAReportsPage.checkTrialBalanceFormatasVerticalDisplayColasNoneandOutputasPrintDraft(SanityFAReportsPage.java:55590)
	at com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasNoneandOutputasPrintDraft(SanityFAReportsTest.java:3106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id='RITOutput_']"}
  (Session info: chrome=108.0.5359.125)
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z'
System info: host: 'FOCUS-QA-10', ip: '192.168.4.206', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\Rakesh\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:59756}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 56bfff794ecbcecb25f8ad2526ab4f26
*** Element info: {Using=xpath, value=//*[@id='RITOutput_']}
	at sun.reflect.GeneratedConstructorAccessor52.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
	at com.sun.proxy.$Proxy12.isDisplayed(Unknown Source)
	at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:315)
	at org.openqa.selenium.support.ui.ExpectedConditions.access$100(ExpectedConditions.java:44)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:301)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:298)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:686)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:682)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:248)
	... 26 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasNoneandOutputasPrintDraft]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrialBalanceFormatasVerticalDisplayColasNoneandOutputasPrintDraft -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="127" started-at="2023-01-03T23:55:10Z" finished-at="2023-01-03T23:55:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrialBalanceFormatasVerticalDisplayColasNoneandOutputasPrintDraft status=FAILURE method=SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasNoneandOutputasPrintDraft()[pri:496, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasNoneandOutputasPrintDraft]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T23:55:11Z" finished-at="2023-01-03T23:55:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasNoneandOutputasFilePath() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="FAIL" signature="checkTrialBalanceFormatasVerticalDisplayColasNoneandOutputasFilePath()[pri:497, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrialBalanceFormatasVerticalDisplayColasNoneandOutputasFilePath" duration-ms="80036" started-at="2023-01-03T23:55:11Z" finished-at="2023-01-03T23:56:31Z">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='RITOutput_']' (tried for 40 second(s) with 5000 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='RITOutput_']' (tried for 40 second(s) with 5000 milliseconds interval)
	at org.openqa.selenium.support.ui.FluentWait.timeoutException(FluentWait.java:303)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:271)
	at com.focus.Pages.SanityFAReportsPage.checkTrialBalanceFormatasVerticalDisplayColasNoneandOutputasFilePath(SanityFAReportsPage.java:55891)
	at com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasNoneandOutputasFilePath(SanityFAReportsTest.java:3114)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id='RITOutput_']"}
  (Session info: chrome=108.0.5359.125)
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z'
System info: host: 'FOCUS-QA-10', ip: '192.168.4.206', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\Rakesh\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:59756}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 56bfff794ecbcecb25f8ad2526ab4f26
*** Element info: {Using=xpath, value=//*[@id='RITOutput_']}
	at sun.reflect.GeneratedConstructorAccessor52.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
	at com.sun.proxy.$Proxy12.isDisplayed(Unknown Source)
	at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:315)
	at org.openqa.selenium.support.ui.ExpectedConditions.access$100(ExpectedConditions.java:44)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:301)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:298)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:686)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:682)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:248)
	... 26 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasNoneandOutputasFilePath]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrialBalanceFormatasVerticalDisplayColasNoneandOutputasFilePath -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="126" started-at="2023-01-03T23:56:31Z" finished-at="2023-01-03T23:56:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrialBalanceFormatasVerticalDisplayColasNoneandOutputasFilePath status=FAILURE method=SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasNoneandOutputasFilePath()[pri:497, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasNoneandOutputasFilePath]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="FAIL" signature="checkTrialBalanceFormatasVerticalDisplayColasNoneandOutputasExcelCSV()[pri:498, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrialBalanceFormatasVerticalDisplayColasNoneandOutputasExcelCSV" duration-ms="80061" started-at="2023-01-03T23:56:31Z" finished-at="2023-01-03T23:57:51Z">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='RITOutput_']' (tried for 40 second(s) with 5000 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='RITOutput_']' (tried for 40 second(s) with 5000 milliseconds interval)
	at org.openqa.selenium.support.ui.FluentWait.timeoutException(FluentWait.java:303)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:271)
	at com.focus.Pages.SanityFAReportsPage.checkTrialBalanaceFormatasVerticalDisplayColasNoneandOutputasExcelCSV(SanityFAReportsPage.java:56042)
	at com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasNoneandOutputasExcelCSV(SanityFAReportsTest.java:3122)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id='RITOutput_']"}
  (Session info: chrome=108.0.5359.125)
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z'
System info: host: 'FOCUS-QA-10', ip: '192.168.4.206', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\Rakesh\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:59756}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 56bfff794ecbcecb25f8ad2526ab4f26
*** Element info: {Using=xpath, value=//*[@id='RITOutput_']}
	at sun.reflect.GeneratedConstructorAccessor52.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
	at com.sun.proxy.$Proxy12.isDisplayed(Unknown Source)
	at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:315)
	at org.openqa.selenium.support.ui.ExpectedConditions.access$100(ExpectedConditions.java:44)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:301)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:298)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:686)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:682)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:248)
	... 26 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasNoneandOutputasExcelCSV]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrialBalanceFormatasVerticalDisplayColasNoneandOutputasExcelCSV -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:56:31Z" finished-at="2023-01-03T23:56:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasNoneandOutputasExcelCSV() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="134" started-at="2023-01-03T23:57:51Z" finished-at="2023-01-03T23:57:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrialBalanceFormatasVerticalDisplayColasNoneandOutputasExcelCSV status=FAILURE method=SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasNoneandOutputasExcelCSV()[pri:498, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasNoneandOutputasExcelCSV]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="FAIL" signature="checkTrialBalanceFormatasVerticalDisplayColasNoneandOutputasEmail()[pri:499, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrialBalanceFormatasVerticalDisplayColasNoneandOutputasEmail" duration-ms="80093" started-at="2023-01-03T23:57:51Z" finished-at="2023-01-03T23:59:11Z">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='RITOutput_']' (tried for 40 second(s) with 5000 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='RITOutput_']' (tried for 40 second(s) with 5000 milliseconds interval)
	at org.openqa.selenium.support.ui.FluentWait.timeoutException(FluentWait.java:303)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:271)
	at com.focus.Pages.SanityFAReportsPage.checkTrialBalanceFormatasVerticalDisplayColasNoneandOutputasEmail(SanityFAReportsPage.java:56220)
	at com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasNoneandOutputasEmail(SanityFAReportsTest.java:3129)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id='RITOutput_']"}
  (Session info: chrome=108.0.5359.125)
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z'
System info: host: 'FOCUS-QA-10', ip: '192.168.4.206', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\Rakesh\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:59756}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 56bfff794ecbcecb25f8ad2526ab4f26
*** Element info: {Using=xpath, value=//*[@id='RITOutput_']}
	at sun.reflect.GeneratedConstructorAccessor52.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
	at com.sun.proxy.$Proxy12.isDisplayed(Unknown Source)
	at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:315)
	at org.openqa.selenium.support.ui.ExpectedConditions.access$100(ExpectedConditions.java:44)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:301)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:298)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:686)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:682)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:248)
	... 26 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasNoneandOutputasEmail]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrialBalanceFormatasVerticalDisplayColasNoneandOutputasEmail -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:57:51Z" finished-at="2023-01-03T23:57:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasNoneandOutputasEmail() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="120" started-at="2023-01-03T23:59:11Z" finished-at="2023-01-03T23:59:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrialBalanceFormatasVerticalDisplayColasNoneandOutputasEmail status=FAILURE method=SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasNoneandOutputasEmail()[pri:499, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasNoneandOutputasEmail]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T23:59:11Z" finished-at="2023-01-03T23:59:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasNoneandOutputasGraph() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="FAIL" signature="checkTrialBalanceFormatasVerticalDisplayColasNoneandOutputasGraph()[pri:500, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrialBalanceFormatasVerticalDisplayColasNoneandOutputasGraph" duration-ms="80061" started-at="2023-01-03T23:59:11Z" finished-at="2023-01-04T00:00:31Z">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='60']//div[contains(text(),'Financials')]' (tried for 40 second(s) with 5000 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='60']//div[contains(text(),'Financials')]' (tried for 40 second(s) with 5000 milliseconds interval)
	at org.openqa.selenium.support.ui.FluentWait.timeoutException(FluentWait.java:303)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:271)
	at com.focus.Pages.SanityFAReportsPage.checkTrialBalanceFormatasVerticalDisplayColasNoneandOutputasGraph(SanityFAReportsPage.java:56590)
	at com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasNoneandOutputasGraph(SanityFAReportsTest.java:3136)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id='60']//div[contains(text(),'Financials')]"}
  (Session info: chrome=108.0.5359.125)
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z'
System info: host: 'FOCUS-QA-10', ip: '192.168.4.206', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\Rakesh\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:59756}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 56bfff794ecbcecb25f8ad2526ab4f26
*** Element info: {Using=xpath, value=//*[@id='60']//div[contains(text(),'Financials')]}
	at sun.reflect.GeneratedConstructorAccessor52.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
	at com.sun.proxy.$Proxy12.isDisplayed(Unknown Source)
	at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:315)
	at org.openqa.selenium.support.ui.ExpectedConditions.access$100(ExpectedConditions.java:44)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:301)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:298)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:686)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:682)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:248)
	... 26 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasNoneandOutputasGraph]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrialBalanceFormatasVerticalDisplayColasNoneandOutputasGraph -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="119" started-at="2023-01-04T00:00:31Z" finished-at="2023-01-04T00:00:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrialBalanceFormatasVerticalDisplayColasNoneandOutputasGraph status=FAILURE method=SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasNoneandOutputasGraph()[pri:500, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasNoneandOutputasGraph]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-04T00:00:31Z" finished-at="2023-01-04T00:00:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasVerticalandDisplayColasMonthandOutputasScreen() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="FAIL" signature="checkTrialBalanceFormatasVerticalandDisplayColasMonthandOutputasScreen()[pri:501, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrialBalanceFormatasVerticalandDisplayColasMonthandOutputasScreen" duration-ms="80041" started-at="2023-01-04T00:00:31Z" finished-at="2023-01-04T00:01:51Z">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='60']//div[contains(text(),'Financials')]' (tried for 40 second(s) with 5000 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='60']//div[contains(text(),'Financials')]' (tried for 40 second(s) with 5000 milliseconds interval)
	at org.openqa.selenium.support.ui.FluentWait.timeoutException(FluentWait.java:303)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:271)
	at com.focus.Pages.SanityFAReportsPage.checkTrialBalanceFormatasVerticalandDisplayColasMonthandOutputasScreen(SanityFAReportsPage.java:56772)
	at com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasVerticalandDisplayColasMonthandOutputasScreen(SanityFAReportsTest.java:3145)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id='60']//div[contains(text(),'Financials')]"}
  (Session info: chrome=108.0.5359.125)
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z'
System info: host: 'FOCUS-QA-10', ip: '192.168.4.206', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\Rakesh\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:59756}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 56bfff794ecbcecb25f8ad2526ab4f26
*** Element info: {Using=xpath, value=//*[@id='60']//div[contains(text(),'Financials')]}
	at sun.reflect.GeneratedConstructorAccessor52.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
	at com.sun.proxy.$Proxy12.isDisplayed(Unknown Source)
	at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:315)
	at org.openqa.selenium.support.ui.ExpectedConditions.access$100(ExpectedConditions.java:44)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:301)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:298)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:686)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:682)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:248)
	... 26 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasVerticalandDisplayColasMonthandOutputasScreen]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrialBalanceFormatasVerticalandDisplayColasMonthandOutputasScreen -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="138" started-at="2023-01-04T00:01:51Z" finished-at="2023-01-04T00:01:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrialBalanceFormatasVerticalandDisplayColasMonthandOutputasScreen status=FAILURE method=SanityFAReportsTest.checkTrialBalanceFormatasVerticalandDisplayColasMonthandOutputasScreen()[pri:501, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasVerticalandDisplayColasMonthandOutputasScreen]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="FAIL" signature="checkTrialBalanceFormatasVerticalDisplayColasMonthandOutputasPrinter()[pri:502, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrialBalanceFormatasVerticalDisplayColasMonthandOutputasPrinter" duration-ms="80091" started-at="2023-01-04T00:01:52Z" finished-at="2023-01-04T00:03:12Z">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='RITOutput_']' (tried for 40 second(s) with 5000 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='RITOutput_']' (tried for 40 second(s) with 5000 milliseconds interval)
	at org.openqa.selenium.support.ui.FluentWait.timeoutException(FluentWait.java:303)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:271)
	at com.focus.Pages.SanityFAReportsPage.checkTrialBalanceFormatasVerticalDisplayColasMonthandOutputasPrinter(SanityFAReportsPage.java:56947)
	at com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasMonthandOutputasPrinter(SanityFAReportsTest.java:3154)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id='RITOutput_']"}
  (Session info: chrome=108.0.5359.125)
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z'
System info: host: 'FOCUS-QA-10', ip: '192.168.4.206', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\Rakesh\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:59756}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 56bfff794ecbcecb25f8ad2526ab4f26
*** Element info: {Using=xpath, value=//*[@id='RITOutput_']}
	at sun.reflect.GeneratedConstructorAccessor52.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
	at com.sun.proxy.$Proxy12.isDisplayed(Unknown Source)
	at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:315)
	at org.openqa.selenium.support.ui.ExpectedConditions.access$100(ExpectedConditions.java:44)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:301)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:298)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:686)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:682)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:248)
	... 26 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasMonthandOutputasPrinter]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrialBalanceFormatasVerticalDisplayColasMonthandOutputasPrinter -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-04T00:01:52Z" finished-at="2023-01-04T00:01:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasMonthandOutputasPrinter() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="138" started-at="2023-01-04T00:03:12Z" finished-at="2023-01-04T00:03:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrialBalanceFormatasVerticalDisplayColasMonthandOutputasPrinter status=FAILURE method=SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasMonthandOutputasPrinter()[pri:502, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasMonthandOutputasPrinter]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="FAIL" signature="checkTrialBalanaceFormatasVerticalDisplayColasMonthandOutputasExcel()[pri:503, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrialBalanaceFormatasVerticalDisplayColasMonthandOutputasExcel" duration-ms="80090" started-at="2023-01-04T00:03:12Z" finished-at="2023-01-04T00:04:32Z">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='RITOutput_']' (tried for 40 second(s) with 5000 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='RITOutput_']' (tried for 40 second(s) with 5000 milliseconds interval)
	at org.openqa.selenium.support.ui.FluentWait.timeoutException(FluentWait.java:303)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:271)
	at com.focus.Pages.SanityFAReportsPage.checkTrialBalanaceFormatasVerticalDisplayColasMonthandOutputasExcel(SanityFAReportsPage.java:57226)
	at com.focus.testcases.SanityFAReportsTest.checkTrialBalanaceFormatasVerticalDisplayColasMonthandOutputasExcel(SanityFAReportsTest.java:3163)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id='RITOutput_']"}
  (Session info: chrome=108.0.5359.125)
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z'
System info: host: 'FOCUS-QA-10', ip: '192.168.4.206', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\Rakesh\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:59756}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 56bfff794ecbcecb25f8ad2526ab4f26
*** Element info: {Using=xpath, value=//*[@id='RITOutput_']}
	at sun.reflect.GeneratedConstructorAccessor52.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
	at com.sun.proxy.$Proxy12.isDisplayed(Unknown Source)
	at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:315)
	at org.openqa.selenium.support.ui.ExpectedConditions.access$100(ExpectedConditions.java:44)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:301)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:298)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:686)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:682)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:248)
	... 26 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanaceFormatasVerticalDisplayColasMonthandOutputasExcel]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrialBalanaceFormatasVerticalDisplayColasMonthandOutputasExcel -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-04T00:03:12Z" finished-at="2023-01-04T00:03:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrialBalanaceFormatasVerticalDisplayColasMonthandOutputasExcel() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="121" started-at="2023-01-04T00:04:32Z" finished-at="2023-01-04T00:04:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrialBalanaceFormatasVerticalDisplayColasMonthandOutputasExcel status=FAILURE method=SanityFAReportsTest.checkTrialBalanaceFormatasVerticalDisplayColasMonthandOutputasExcel()[pri:503, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrialBalanaceFormatasVerticalDisplayColasMonthandOutputasExcel]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="FAIL" signature="checkTrialBalanceFormatasVerticalDisplayColasMonthandOutputasPrintDraft()[pri:504, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrialBalanceFormatasVerticalDisplayColasMonthandOutputasPrintDraft" duration-ms="80083" started-at="2023-01-04T00:04:32Z" finished-at="2023-01-04T00:05:52Z">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='RITOutput_']' (tried for 40 second(s) with 5000 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='RITOutput_']' (tried for 40 second(s) with 5000 milliseconds interval)
	at org.openqa.selenium.support.ui.FluentWait.timeoutException(FluentWait.java:303)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:271)
	at com.focus.Pages.SanityFAReportsPage.checkTrialBalanceFormatasVerticalDisplayColasMonthandOutputasPrintDraft(SanityFAReportsPage.java:57085)
	at com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasMonthandOutputasPrintDraft(SanityFAReportsTest.java:3171)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id='RITOutput_']"}
  (Session info: chrome=108.0.5359.125)
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z'
System info: host: 'FOCUS-QA-10', ip: '192.168.4.206', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\Rakesh\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:59756}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 56bfff794ecbcecb25f8ad2526ab4f26
*** Element info: {Using=xpath, value=//*[@id='RITOutput_']}
	at sun.reflect.GeneratedConstructorAccessor52.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
	at com.sun.proxy.$Proxy12.isDisplayed(Unknown Source)
	at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:315)
	at org.openqa.selenium.support.ui.ExpectedConditions.access$100(ExpectedConditions.java:44)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:301)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:298)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:686)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:682)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:248)
	... 26 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasMonthandOutputasPrintDraft]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrialBalanceFormatasVerticalDisplayColasMonthandOutputasPrintDraft -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-04T00:04:32Z" finished-at="2023-01-04T00:04:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasMonthandOutputasPrintDraft() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="131" started-at="2023-01-04T00:05:52Z" finished-at="2023-01-04T00:05:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrialBalanceFormatasVerticalDisplayColasMonthandOutputasPrintDraft status=FAILURE method=SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasMonthandOutputasPrintDraft()[pri:504, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasMonthandOutputasPrintDraft]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-04T00:05:52Z" finished-at="2023-01-04T00:05:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasMonthandOutputasFilePath() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="FAIL" signature="checkTrialBalanceFormatasVerticalDisplayColasMonthandOutputasFilePath()[pri:505, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrialBalanceFormatasVerticalDisplayColasMonthandOutputasFilePath" duration-ms="80122" started-at="2023-01-04T00:05:52Z" finished-at="2023-01-04T00:07:12Z">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='RITOutput_']' (tried for 40 second(s) with 5000 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='RITOutput_']' (tried for 40 second(s) with 5000 milliseconds interval)
	at org.openqa.selenium.support.ui.FluentWait.timeoutException(FluentWait.java:303)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:271)
	at com.focus.Pages.SanityFAReportsPage.checkTrialBalanceFormatasVerticalDisplayColasMonthandOutputasFilePath(SanityFAReportsPage.java:57386)
	at com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasMonthandOutputasFilePath(SanityFAReportsTest.java:3179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id='RITOutput_']"}
  (Session info: chrome=108.0.5359.125)
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z'
System info: host: 'FOCUS-QA-10', ip: '192.168.4.206', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\Rakesh\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:59756}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 56bfff794ecbcecb25f8ad2526ab4f26
*** Element info: {Using=xpath, value=//*[@id='RITOutput_']}
	at sun.reflect.GeneratedConstructorAccessor52.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
	at com.sun.proxy.$Proxy12.isDisplayed(Unknown Source)
	at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:315)
	at org.openqa.selenium.support.ui.ExpectedConditions.access$100(ExpectedConditions.java:44)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:301)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:298)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:686)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:682)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:248)
	... 26 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasMonthandOutputasFilePath]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrialBalanceFormatasVerticalDisplayColasMonthandOutputasFilePath -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="139" started-at="2023-01-04T00:07:12Z" finished-at="2023-01-04T00:07:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrialBalanceFormatasVerticalDisplayColasMonthandOutputasFilePath status=FAILURE method=SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasMonthandOutputasFilePath()[pri:505, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasMonthandOutputasFilePath]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="FAIL" signature="checkTrialBalanceFormatasVerticalDisplayColasMonthandOutputasExcelCSV()[pri:506, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrialBalanceFormatasVerticalDisplayColasMonthandOutputasExcelCSV" duration-ms="80099" started-at="2023-01-04T00:07:12Z" finished-at="2023-01-04T00:08:33Z">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='RITOutput_']' (tried for 40 second(s) with 5000 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='RITOutput_']' (tried for 40 second(s) with 5000 milliseconds interval)
	at org.openqa.selenium.support.ui.FluentWait.timeoutException(FluentWait.java:303)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:271)
	at com.focus.Pages.SanityFAReportsPage.checkTrialBalanaceFormatasVerticalDisplayColasMonthandOutputasExcelCSV(SanityFAReportsPage.java:57537)
	at com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasMonthandOutputasExcelCSV(SanityFAReportsTest.java:3187)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id='RITOutput_']"}
  (Session info: chrome=108.0.5359.125)
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z'
System info: host: 'FOCUS-QA-10', ip: '192.168.4.206', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\Rakesh\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:59756}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 56bfff794ecbcecb25f8ad2526ab4f26
*** Element info: {Using=xpath, value=//*[@id='RITOutput_']}
	at sun.reflect.GeneratedConstructorAccessor52.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
	at com.sun.proxy.$Proxy12.isDisplayed(Unknown Source)
	at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:315)
	at org.openqa.selenium.support.ui.ExpectedConditions.access$100(ExpectedConditions.java:44)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:301)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:298)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:686)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:682)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:248)
	... 26 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasMonthandOutputasExcelCSV]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrialBalanceFormatasVerticalDisplayColasMonthandOutputasExcelCSV -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-04T00:07:12Z" finished-at="2023-01-04T00:07:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasMonthandOutputasExcelCSV() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="129" started-at="2023-01-04T00:08:33Z" finished-at="2023-01-04T00:08:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrialBalanceFormatasVerticalDisplayColasMonthandOutputasExcelCSV status=FAILURE method=SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasMonthandOutputasExcelCSV()[pri:506, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasMonthandOutputasExcelCSV]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="FAIL" signature="checkTrialBalanceFormatasVerticalDisplayColasMonthandOutputasEmail()[pri:507, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrialBalanceFormatasVerticalDisplayColasMonthandOutputasEmail" duration-ms="80103" started-at="2023-01-04T00:08:33Z" finished-at="2023-01-04T00:09:53Z">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='RITOutput_']' (tried for 40 second(s) with 5000 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='RITOutput_']' (tried for 40 second(s) with 5000 milliseconds interval)
	at org.openqa.selenium.support.ui.FluentWait.timeoutException(FluentWait.java:303)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:271)
	at com.focus.Pages.SanityFAReportsPage.checkTrialBalanceFormatasVerticalDisplayColasMonthandOutputasEmail(SanityFAReportsPage.java:57714)
	at com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasMonthandOutputasEmail(SanityFAReportsTest.java:3194)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id='RITOutput_']"}
  (Session info: chrome=108.0.5359.125)
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z'
System info: host: 'FOCUS-QA-10', ip: '192.168.4.206', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\Rakesh\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:59756}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 56bfff794ecbcecb25f8ad2526ab4f26
*** Element info: {Using=xpath, value=//*[@id='RITOutput_']}
	at sun.reflect.GeneratedConstructorAccessor52.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
	at com.sun.proxy.$Proxy12.isDisplayed(Unknown Source)
	at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:315)
	at org.openqa.selenium.support.ui.ExpectedConditions.access$100(ExpectedConditions.java:44)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:301)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:298)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:686)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:682)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:248)
	... 26 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasMonthandOutputasEmail]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrialBalanceFormatasVerticalDisplayColasMonthandOutputasEmail -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-04T00:08:33Z" finished-at="2023-01-04T00:08:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasMonthandOutputasEmail() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="128" started-at="2023-01-04T00:09:53Z" finished-at="2023-01-04T00:09:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrialBalanceFormatasVerticalDisplayColasMonthandOutputasEmail status=FAILURE method=SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasMonthandOutputasEmail()[pri:507, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasMonthandOutputasEmail]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-04T00:09:53Z" finished-at="2023-01-04T00:09:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasMonthandOutputasGraph() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="FAIL" signature="checkTrialBalanceFormatasVerticalDisplayColasMonthandOutputasGraph()[pri:508, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrialBalanceFormatasVerticalDisplayColasMonthandOutputasGraph" duration-ms="80083" started-at="2023-01-04T00:09:53Z" finished-at="2023-01-04T00:11:13Z">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='60']//div[contains(text(),'Financials')]' (tried for 40 second(s) with 5000 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='60']//div[contains(text(),'Financials')]' (tried for 40 second(s) with 5000 milliseconds interval)
	at org.openqa.selenium.support.ui.FluentWait.timeoutException(FluentWait.java:303)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:271)
	at com.focus.Pages.SanityFAReportsPage.checkTrialBalanceFormatasVerticalDisplayColasMonthandOutputasGraph(SanityFAReportsPage.java:58084)
	at com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasMonthandOutputasGraph(SanityFAReportsTest.java:3201)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id='60']//div[contains(text(),'Financials')]"}
  (Session info: chrome=108.0.5359.125)
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z'
System info: host: 'FOCUS-QA-10', ip: '192.168.4.206', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\Rakesh\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:59756}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 56bfff794ecbcecb25f8ad2526ab4f26
*** Element info: {Using=xpath, value=//*[@id='60']//div[contains(text(),'Financials')]}
	at sun.reflect.GeneratedConstructorAccessor52.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
	at com.sun.proxy.$Proxy12.isDisplayed(Unknown Source)
	at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:315)
	at org.openqa.selenium.support.ui.ExpectedConditions.access$100(ExpectedConditions.java:44)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:301)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:298)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:686)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:682)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:248)
	... 26 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasMonthandOutputasGraph]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrialBalanceFormatasVerticalDisplayColasMonthandOutputasGraph -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="129" started-at="2023-01-04T00:11:13Z" finished-at="2023-01-04T00:11:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrialBalanceFormatasVerticalDisplayColasMonthandOutputasGraph status=FAILURE method=SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasMonthandOutputasGraph()[pri:508, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasVerticalDisplayColasMonthandOutputasGraph]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-04T00:11:13Z" finished-at="2023-01-04T00:11:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasHorizontalandDisplayColasQuarterandOutputasScreen() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="FAIL" signature="checkTrialBalanceFormatasHorizontalandDisplayColasQuarterandOutputasScreen()[pri:509, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrialBalanceFormatasHorizontalandDisplayColasQuarterandOutputasScreen" duration-ms="82768" started-at="2023-01-04T00:11:13Z" finished-at="2023-01-04T00:12:36Z">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='60']//div[contains(text(),'Financials')]' (tried for 40 second(s) with 5000 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='60']//div[contains(text(),'Financials')]' (tried for 40 second(s) with 5000 milliseconds interval)
	at org.openqa.selenium.support.ui.FluentWait.timeoutException(FluentWait.java:303)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:271)
	at com.focus.Pages.SanityFAReportsPage.checkTrialBalanceFormatasHorizontalandDisplayColasQuarterandOutputasScreen(SanityFAReportsPage.java:58267)
	at com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasHorizontalandDisplayColasQuarterandOutputasScreen(SanityFAReportsTest.java:3212)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id='60']//div[contains(text(),'Financials')]"}
  (Session info: chrome=108.0.5359.125)
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z'
System info: host: 'FOCUS-QA-10', ip: '192.168.4.206', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\Rakesh\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:59756}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 56bfff794ecbcecb25f8ad2526ab4f26
*** Element info: {Using=xpath, value=//*[@id='60']//div[contains(text(),'Financials')]}
	at sun.reflect.GeneratedConstructorAccessor52.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
	at com.sun.proxy.$Proxy12.isDisplayed(Unknown Source)
	at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:315)
	at org.openqa.selenium.support.ui.ExpectedConditions.access$100(ExpectedConditions.java:44)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:301)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:298)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:686)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:682)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:248)
	... 26 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasHorizontalandDisplayColasQuarterandOutputasScreen]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrialBalanceFormatasHorizontalandDisplayColasQuarterandOutputasScreen -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="141" started-at="2023-01-04T00:12:36Z" finished-at="2023-01-04T00:12:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrialBalanceFormatasHorizontalandDisplayColasQuarterandOutputasScreen status=FAILURE method=SanityFAReportsTest.checkTrialBalanceFormatasHorizontalandDisplayColasQuarterandOutputasScreen()[pri:509, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasHorizontalandDisplayColasQuarterandOutputasScreen]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-04T00:12:36Z" finished-at="2023-01-04T00:12:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasQuarterandOutputasPrinter() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="FAIL" signature="checkTrialBalanceFormatasHorizontalDisplayColasQuarterandOutputasPrinter()[pri:510, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrialBalanceFormatasHorizontalDisplayColasQuarterandOutputasPrinter" duration-ms="80039" started-at="2023-01-04T00:12:36Z" finished-at="2023-01-04T00:13:56Z">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='RITOutput_']' (tried for 40 second(s) with 5000 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='RITOutput_']' (tried for 40 second(s) with 5000 milliseconds interval)
	at org.openqa.selenium.support.ui.FluentWait.timeoutException(FluentWait.java:303)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:271)
	at com.focus.Pages.SanityFAReportsPage.checkTrialBalanceFormatasHorizontalDisplayColasQuarterandOutputasPrinter(SanityFAReportsPage.java:58441)
	at com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasQuarterandOutputasPrinter(SanityFAReportsTest.java:3221)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id='RITOutput_']"}
  (Session info: chrome=108.0.5359.125)
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z'
System info: host: 'FOCUS-QA-10', ip: '192.168.4.206', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\Rakesh\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:59756}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 56bfff794ecbcecb25f8ad2526ab4f26
*** Element info: {Using=xpath, value=//*[@id='RITOutput_']}
	at sun.reflect.GeneratedConstructorAccessor52.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
	at com.sun.proxy.$Proxy12.isDisplayed(Unknown Source)
	at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:315)
	at org.openqa.selenium.support.ui.ExpectedConditions.access$100(ExpectedConditions.java:44)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:301)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:298)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:686)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:682)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:248)
	... 26 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasQuarterandOutputasPrinter]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrialBalanceFormatasHorizontalDisplayColasQuarterandOutputasPrinter -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="124" started-at="2023-01-04T00:13:56Z" finished-at="2023-01-04T00:13:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrialBalanceFormatasHorizontalDisplayColasQuarterandOutputasPrinter status=FAILURE method=SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasQuarterandOutputasPrinter()[pri:510, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasQuarterandOutputasPrinter]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="FAIL" signature="checkTrialBalanaceFormatasHorizontalDisplayColasQuarterandOutputasExcel()[pri:511, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrialBalanaceFormatasHorizontalDisplayColasQuarterandOutputasExcel" duration-ms="80153" started-at="2023-01-04T00:13:56Z" finished-at="2023-01-04T00:15:16Z">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='RITOutput_']' (tried for 40 second(s) with 5000 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='RITOutput_']' (tried for 40 second(s) with 5000 milliseconds interval)
	at org.openqa.selenium.support.ui.FluentWait.timeoutException(FluentWait.java:303)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:271)
	at com.focus.Pages.SanityFAReportsPage.checkTrialBalanaceFormatasHorizontalDisplayColasQuarterandOutputasExcel(SanityFAReportsPage.java:58720)
	at com.focus.testcases.SanityFAReportsTest.checkTrialBalanaceFormatasHorizontalDisplayColasQuarterandOutputasExcel(SanityFAReportsTest.java:3230)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id='RITOutput_']"}
  (Session info: chrome=108.0.5359.125)
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z'
System info: host: 'FOCUS-QA-10', ip: '192.168.4.206', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\Rakesh\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:59756}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 56bfff794ecbcecb25f8ad2526ab4f26
*** Element info: {Using=xpath, value=//*[@id='RITOutput_']}
	at sun.reflect.GeneratedConstructorAccessor52.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
	at com.sun.proxy.$Proxy12.isDisplayed(Unknown Source)
	at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:315)
	at org.openqa.selenium.support.ui.ExpectedConditions.access$100(ExpectedConditions.java:44)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:301)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:298)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:686)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:682)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:248)
	... 26 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanaceFormatasHorizontalDisplayColasQuarterandOutputasExcel]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrialBalanaceFormatasHorizontalDisplayColasQuarterandOutputasExcel -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-04T00:13:56Z" finished-at="2023-01-04T00:13:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrialBalanaceFormatasHorizontalDisplayColasQuarterandOutputasExcel() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="125" started-at="2023-01-04T00:15:16Z" finished-at="2023-01-04T00:15:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrialBalanaceFormatasHorizontalDisplayColasQuarterandOutputasExcel status=FAILURE method=SanityFAReportsTest.checkTrialBalanaceFormatasHorizontalDisplayColasQuarterandOutputasExcel()[pri:511, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrialBalanaceFormatasHorizontalDisplayColasQuarterandOutputasExcel]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="FAIL" signature="checkTrialBalanceFormatasHorizontalDisplayColasQuarterandOutputasPrintDraft()[pri:512, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrialBalanceFormatasHorizontalDisplayColasQuarterandOutputasPrintDraft" duration-ms="80078" started-at="2023-01-04T00:15:17Z" finished-at="2023-01-04T00:16:37Z">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='RITOutput_']' (tried for 40 second(s) with 5000 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='RITOutput_']' (tried for 40 second(s) with 5000 milliseconds interval)
	at org.openqa.selenium.support.ui.FluentWait.timeoutException(FluentWait.java:303)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:271)
	at com.focus.Pages.SanityFAReportsPage.checkTrialBalanceFormatasHorizontalDisplayColasQuarterandOutputasPrintDraft(SanityFAReportsPage.java:58579)
	at com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasQuarterandOutputasPrintDraft(SanityFAReportsTest.java:3238)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id='RITOutput_']"}
  (Session info: chrome=108.0.5359.125)
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z'
System info: host: 'FOCUS-QA-10', ip: '192.168.4.206', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\Rakesh\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:59756}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 56bfff794ecbcecb25f8ad2526ab4f26
*** Element info: {Using=xpath, value=//*[@id='RITOutput_']}
	at sun.reflect.GeneratedConstructorAccessor52.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
	at com.sun.proxy.$Proxy12.isDisplayed(Unknown Source)
	at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:315)
	at org.openqa.selenium.support.ui.ExpectedConditions.access$100(ExpectedConditions.java:44)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:301)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:298)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:686)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:682)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:248)
	... 26 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasQuarterandOutputasPrintDraft]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrialBalanceFormatasHorizontalDisplayColasQuarterandOutputasPrintDraft -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-04T00:15:17Z" finished-at="2023-01-04T00:15:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasQuarterandOutputasPrintDraft() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="131" started-at="2023-01-04T00:16:37Z" finished-at="2023-01-04T00:16:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrialBalanceFormatasHorizontalDisplayColasQuarterandOutputasPrintDraft status=FAILURE method=SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasQuarterandOutputasPrintDraft()[pri:512, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasQuarterandOutputasPrintDraft]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-04T00:16:37Z" finished-at="2023-01-04T00:16:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasQuarterandOutputasFilePath() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="FAIL" signature="checkTrialBalanceFormatasHorizontalDisplayColasQuarterandOutputasFilePath()[pri:513, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrialBalanceFormatasHorizontalDisplayColasQuarterandOutputasFilePath" duration-ms="80100" started-at="2023-01-04T00:16:37Z" finished-at="2023-01-04T00:17:57Z">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='RITOutput_']' (tried for 40 second(s) with 5000 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='RITOutput_']' (tried for 40 second(s) with 5000 milliseconds interval)
	at org.openqa.selenium.support.ui.FluentWait.timeoutException(FluentWait.java:303)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:271)
	at com.focus.Pages.SanityFAReportsPage.checkTrialBalanceFormatasHorizontalDisplayColasQuarterandOutputasFilePath(SanityFAReportsPage.java:58880)
	at com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasQuarterandOutputasFilePath(SanityFAReportsTest.java:3246)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id='RITOutput_']"}
  (Session info: chrome=108.0.5359.125)
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z'
System info: host: 'FOCUS-QA-10', ip: '192.168.4.206', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\Rakesh\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:59756}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 56bfff794ecbcecb25f8ad2526ab4f26
*** Element info: {Using=xpath, value=//*[@id='RITOutput_']}
	at sun.reflect.GeneratedConstructorAccessor52.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
	at com.sun.proxy.$Proxy12.isDisplayed(Unknown Source)
	at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:315)
	at org.openqa.selenium.support.ui.ExpectedConditions.access$100(ExpectedConditions.java:44)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:301)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:298)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:686)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:682)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:248)
	... 26 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasQuarterandOutputasFilePath]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrialBalanceFormatasHorizontalDisplayColasQuarterandOutputasFilePath -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="128" started-at="2023-01-04T00:17:57Z" finished-at="2023-01-04T00:17:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrialBalanceFormatasHorizontalDisplayColasQuarterandOutputasFilePath status=FAILURE method=SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasQuarterandOutputasFilePath()[pri:513, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasQuarterandOutputasFilePath]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="FAIL" signature="checkTrialBalanaceFormatasHorizontalDisplayColasQuarterandOutputasExcelCSV()[pri:514, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrialBalanaceFormatasHorizontalDisplayColasQuarterandOutputasExcelCSV" duration-ms="80143" started-at="2023-01-04T00:17:57Z" finished-at="2023-01-04T00:19:17Z">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='RITOutput_']' (tried for 40 second(s) with 5000 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='RITOutput_']' (tried for 40 second(s) with 5000 milliseconds interval)
	at org.openqa.selenium.support.ui.FluentWait.timeoutException(FluentWait.java:303)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:271)
	at com.focus.Pages.SanityFAReportsPage.checkTrialBalanaceFormatasHorizontalDisplayColasQuarterandOutputasExcelCSV(SanityFAReportsPage.java:59031)
	at com.focus.testcases.SanityFAReportsTest.checkTrialBalanaceFormatasHorizontalDisplayColasQuarterandOutputasExcelCSV(SanityFAReportsTest.java:3254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id='RITOutput_']"}
  (Session info: chrome=108.0.5359.125)
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z'
System info: host: 'FOCUS-QA-10', ip: '192.168.4.206', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\Rakesh\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:59756}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 56bfff794ecbcecb25f8ad2526ab4f26
*** Element info: {Using=xpath, value=//*[@id='RITOutput_']}
	at sun.reflect.GeneratedConstructorAccessor52.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
	at com.sun.proxy.$Proxy12.isDisplayed(Unknown Source)
	at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:315)
	at org.openqa.selenium.support.ui.ExpectedConditions.access$100(ExpectedConditions.java:44)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:301)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:298)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:686)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:682)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:248)
	... 26 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanaceFormatasHorizontalDisplayColasQuarterandOutputasExcelCSV]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrialBalanaceFormatasHorizontalDisplayColasQuarterandOutputasExcelCSV -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-04T00:17:57Z" finished-at="2023-01-04T00:17:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrialBalanaceFormatasHorizontalDisplayColasQuarterandOutputasExcelCSV() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="136" started-at="2023-01-04T00:19:17Z" finished-at="2023-01-04T00:19:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrialBalanaceFormatasHorizontalDisplayColasQuarterandOutputasExcelCSV status=FAILURE method=SanityFAReportsTest.checkTrialBalanaceFormatasHorizontalDisplayColasQuarterandOutputasExcelCSV()[pri:514, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrialBalanaceFormatasHorizontalDisplayColasQuarterandOutputasExcelCSV]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-04T00:19:17Z" finished-at="2023-01-04T00:19:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasQuarterandOutputasEmail() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="FAIL" signature="checkTrialBalanceFormatasHorizontalDisplayColasQuarterandOutputasEmail()[pri:515, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrialBalanceFormatasHorizontalDisplayColasQuarterandOutputasEmail" duration-ms="80113" started-at="2023-01-04T00:19:17Z" finished-at="2023-01-04T00:20:37Z">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='RITOutput_']' (tried for 40 second(s) with 5000 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='RITOutput_']' (tried for 40 second(s) with 5000 milliseconds interval)
	at org.openqa.selenium.support.ui.FluentWait.timeoutException(FluentWait.java:303)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:271)
	at com.focus.Pages.SanityFAReportsPage.checkTrialBalanceFormatasHorizontalDisplayColasQuarterandOutputasEmail(SanityFAReportsPage.java:59209)
	at com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasQuarterandOutputasEmail(SanityFAReportsTest.java:3261)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id='RITOutput_']"}
  (Session info: chrome=108.0.5359.125)
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z'
System info: host: 'FOCUS-QA-10', ip: '192.168.4.206', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\Rakesh\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:59756}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 56bfff794ecbcecb25f8ad2526ab4f26
*** Element info: {Using=xpath, value=//*[@id='RITOutput_']}
	at sun.reflect.GeneratedConstructorAccessor52.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
	at com.sun.proxy.$Proxy12.isDisplayed(Unknown Source)
	at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:315)
	at org.openqa.selenium.support.ui.ExpectedConditions.access$100(ExpectedConditions.java:44)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:301)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:298)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:686)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:682)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:248)
	... 26 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasQuarterandOutputasEmail]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrialBalanceFormatasHorizontalDisplayColasQuarterandOutputasEmail -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="134" started-at="2023-01-04T00:20:37Z" finished-at="2023-01-04T00:20:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrialBalanceFormatasHorizontalDisplayColasQuarterandOutputasEmail status=FAILURE method=SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasQuarterandOutputasEmail()[pri:515, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasQuarterandOutputasEmail]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="FAIL" signature="checkTrialBalanceFormatasHorizontalDisplayColasQuarterandOutputasGraph()[pri:516, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrialBalanceFormatasHorizontalDisplayColasQuarterandOutputasGraph" duration-ms="80118" started-at="2023-01-04T00:20:37Z" finished-at="2023-01-04T00:21:58Z">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='60']//div[contains(text(),'Financials')]' (tried for 40 second(s) with 5000 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='60']//div[contains(text(),'Financials')]' (tried for 40 second(s) with 5000 milliseconds interval)
	at org.openqa.selenium.support.ui.FluentWait.timeoutException(FluentWait.java:303)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:271)
	at com.focus.Pages.SanityFAReportsPage.checkTrialBalanceFormatasHorizontalDisplayColasQuarterandOutputasGraph(SanityFAReportsPage.java:59579)
	at com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasQuarterandOutputasGraph(SanityFAReportsTest.java:3268)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id='60']//div[contains(text(),'Financials')]"}
  (Session info: chrome=108.0.5359.125)
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z'
System info: host: 'FOCUS-QA-10', ip: '192.168.4.206', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\Rakesh\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:59756}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 56bfff794ecbcecb25f8ad2526ab4f26
*** Element info: {Using=xpath, value=//*[@id='60']//div[contains(text(),'Financials')]}
	at sun.reflect.GeneratedConstructorAccessor52.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
	at com.sun.proxy.$Proxy12.isDisplayed(Unknown Source)
	at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:315)
	at org.openqa.selenium.support.ui.ExpectedConditions.access$100(ExpectedConditions.java:44)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:301)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:298)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:686)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:682)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:248)
	... 26 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasQuarterandOutputasGraph]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrialBalanceFormatasHorizontalDisplayColasQuarterandOutputasGraph -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-04T00:20:37Z" finished-at="2023-01-04T00:20:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasQuarterandOutputasGraph() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="125" started-at="2023-01-04T00:21:58Z" finished-at="2023-01-04T00:21:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrialBalanceFormatasHorizontalDisplayColasQuarterandOutputasGraph status=FAILURE method=SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasQuarterandOutputasGraph()[pri:516, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasQuarterandOutputasGraph]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="FAIL" signature="checkTrialBalanceFormatasHorizontalandDisplayColasYearandOutputasScreen()[pri:517, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrialBalanceFormatasHorizontalandDisplayColasYearandOutputasScreen" duration-ms="80044" started-at="2023-01-04T00:21:58Z" finished-at="2023-01-04T00:23:18Z">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='60']//div[contains(text(),'Financials')]' (tried for 40 second(s) with 5000 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='60']//div[contains(text(),'Financials')]' (tried for 40 second(s) with 5000 milliseconds interval)
	at org.openqa.selenium.support.ui.FluentWait.timeoutException(FluentWait.java:303)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:271)
	at com.focus.Pages.SanityFAReportsPage.checkTrialBalanceFormatasHorizontalandDisplayColasYearandOutputasScreen(SanityFAReportsPage.java:59761)
	at com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasHorizontalandDisplayColasYearandOutputasScreen(SanityFAReportsTest.java:3277)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id='60']//div[contains(text(),'Financials')]"}
  (Session info: chrome=108.0.5359.125)
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z'
System info: host: 'FOCUS-QA-10', ip: '192.168.4.206', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\Rakesh\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:59756}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 56bfff794ecbcecb25f8ad2526ab4f26
*** Element info: {Using=xpath, value=//*[@id='60']//div[contains(text(),'Financials')]}
	at sun.reflect.GeneratedConstructorAccessor52.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
	at com.sun.proxy.$Proxy12.isDisplayed(Unknown Source)
	at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:315)
	at org.openqa.selenium.support.ui.ExpectedConditions.access$100(ExpectedConditions.java:44)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:301)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:298)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:686)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:682)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:248)
	... 26 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasHorizontalandDisplayColasYearandOutputasScreen]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrialBalanceFormatasHorizontalandDisplayColasYearandOutputasScreen -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-04T00:21:58Z" finished-at="2023-01-04T00:21:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasHorizontalandDisplayColasYearandOutputasScreen() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="120" started-at="2023-01-04T00:23:18Z" finished-at="2023-01-04T00:23:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrialBalanceFormatasHorizontalandDisplayColasYearandOutputasScreen status=FAILURE method=SanityFAReportsTest.checkTrialBalanceFormatasHorizontalandDisplayColasYearandOutputasScreen()[pri:517, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasHorizontalandDisplayColasYearandOutputasScreen]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-04T00:23:18Z" finished-at="2023-01-04T00:23:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasYearandOutputasPrinter() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="FAIL" signature="checkTrialBalanceFormatasHorizontalDisplayColasYearandOutputasPrinter()[pri:518, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrialBalanceFormatasHorizontalDisplayColasYearandOutputasPrinter" duration-ms="80100" started-at="2023-01-04T00:23:18Z" finished-at="2023-01-04T00:24:38Z">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='RITOutput_']' (tried for 40 second(s) with 5000 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='RITOutput_']' (tried for 40 second(s) with 5000 milliseconds interval)
	at org.openqa.selenium.support.ui.FluentWait.timeoutException(FluentWait.java:303)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:271)
	at com.focus.Pages.SanityFAReportsPage.checkTrialBalanceFormatasHorizontalDisplayColasYearandOutputasPrinter(SanityFAReportsPage.java:59936)
	at com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasYearandOutputasPrinter(SanityFAReportsTest.java:3286)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id='RITOutput_']"}
  (Session info: chrome=108.0.5359.125)
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z'
System info: host: 'FOCUS-QA-10', ip: '192.168.4.206', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\Rakesh\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:59756}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 56bfff794ecbcecb25f8ad2526ab4f26
*** Element info: {Using=xpath, value=//*[@id='RITOutput_']}
	at sun.reflect.GeneratedConstructorAccessor52.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
	at com.sun.proxy.$Proxy12.isDisplayed(Unknown Source)
	at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:315)
	at org.openqa.selenium.support.ui.ExpectedConditions.access$100(ExpectedConditions.java:44)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:301)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:298)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:686)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:682)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:248)
	... 26 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasYearandOutputasPrinter]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrialBalanceFormatasHorizontalDisplayColasYearandOutputasPrinter -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="126" started-at="2023-01-04T00:24:38Z" finished-at="2023-01-04T00:24:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrialBalanceFormatasHorizontalDisplayColasYearandOutputasPrinter status=FAILURE method=SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasYearandOutputasPrinter()[pri:518, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasYearandOutputasPrinter]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-04T00:24:38Z" finished-at="2023-01-04T00:24:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrialBalanaceFormatasHorizontalDisplayColasYearandOutputasExcel() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="FAIL" signature="checkTrialBalanaceFormatasHorizontalDisplayColasYearandOutputasExcel()[pri:519, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrialBalanaceFormatasHorizontalDisplayColasYearandOutputasExcel" duration-ms="80071" started-at="2023-01-04T00:24:38Z" finished-at="2023-01-04T00:25:58Z">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='RITOutput_']' (tried for 40 second(s) with 5000 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='RITOutput_']' (tried for 40 second(s) with 5000 milliseconds interval)
	at org.openqa.selenium.support.ui.FluentWait.timeoutException(FluentWait.java:303)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:271)
	at com.focus.Pages.SanityFAReportsPage.checkTrialBalanaceFormatasHorizontalDisplayColasYearandOutputasExcel(SanityFAReportsPage.java:60215)
	at com.focus.testcases.SanityFAReportsTest.checkTrialBalanaceFormatasHorizontalDisplayColasYearandOutputasExcel(SanityFAReportsTest.java:3295)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id='RITOutput_']"}
  (Session info: chrome=108.0.5359.125)
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z'
System info: host: 'FOCUS-QA-10', ip: '192.168.4.206', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\Rakesh\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:59756}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 56bfff794ecbcecb25f8ad2526ab4f26
*** Element info: {Using=xpath, value=//*[@id='RITOutput_']}
	at sun.reflect.GeneratedConstructorAccessor52.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
	at com.sun.proxy.$Proxy12.isDisplayed(Unknown Source)
	at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:315)
	at org.openqa.selenium.support.ui.ExpectedConditions.access$100(ExpectedConditions.java:44)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:301)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:298)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:686)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:682)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:248)
	... 26 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanaceFormatasHorizontalDisplayColasYearandOutputasExcel]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrialBalanaceFormatasHorizontalDisplayColasYearandOutputasExcel -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="124" started-at="2023-01-04T00:25:58Z" finished-at="2023-01-04T00:25:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrialBalanaceFormatasHorizontalDisplayColasYearandOutputasExcel status=FAILURE method=SanityFAReportsTest.checkTrialBalanaceFormatasHorizontalDisplayColasYearandOutputasExcel()[pri:519, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrialBalanaceFormatasHorizontalDisplayColasYearandOutputasExcel]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-04T00:25:58Z" finished-at="2023-01-04T00:25:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasYearandOutputasPrintDraft() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="FAIL" signature="checkTrialBalanceFormatasHorizontalDisplayColasYearandOutputasPrintDraft()[pri:520, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrialBalanceFormatasHorizontalDisplayColasYearandOutputasPrintDraft" duration-ms="80096" started-at="2023-01-04T00:25:58Z" finished-at="2023-01-04T00:27:18Z">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='RITOutput_']' (tried for 40 second(s) with 5000 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='RITOutput_']' (tried for 40 second(s) with 5000 milliseconds interval)
	at org.openqa.selenium.support.ui.FluentWait.timeoutException(FluentWait.java:303)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:271)
	at com.focus.Pages.SanityFAReportsPage.checkTrialBalanceFormatasHorizontalDisplayColasYearandOutputasPrintDraft(SanityFAReportsPage.java:60074)
	at com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasYearandOutputasPrintDraft(SanityFAReportsTest.java:3303)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id='RITOutput_']"}
  (Session info: chrome=108.0.5359.125)
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z'
System info: host: 'FOCUS-QA-10', ip: '192.168.4.206', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\Rakesh\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:59756}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 56bfff794ecbcecb25f8ad2526ab4f26
*** Element info: {Using=xpath, value=//*[@id='RITOutput_']}
	at sun.reflect.GeneratedConstructorAccessor52.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
	at com.sun.proxy.$Proxy12.isDisplayed(Unknown Source)
	at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:315)
	at org.openqa.selenium.support.ui.ExpectedConditions.access$100(ExpectedConditions.java:44)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:301)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:298)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:686)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:682)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:248)
	... 26 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasYearandOutputasPrintDraft]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrialBalanceFormatasHorizontalDisplayColasYearandOutputasPrintDraft -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="118" started-at="2023-01-04T00:27:18Z" finished-at="2023-01-04T00:27:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrialBalanceFormatasHorizontalDisplayColasYearandOutputasPrintDraft status=FAILURE method=SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasYearandOutputasPrintDraft()[pri:520, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasYearandOutputasPrintDraft]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="FAIL" signature="checkTrialBalanceFormatasHorizontalDisplayColasYearandOutputasFilePath()[pri:521, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrialBalanceFormatasHorizontalDisplayColasYearandOutputasFilePath" duration-ms="80062" started-at="2023-01-04T00:27:19Z" finished-at="2023-01-04T00:28:39Z">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='RITOutput_']' (tried for 40 second(s) with 5000 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='RITOutput_']' (tried for 40 second(s) with 5000 milliseconds interval)
	at org.openqa.selenium.support.ui.FluentWait.timeoutException(FluentWait.java:303)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:271)
	at com.focus.Pages.SanityFAReportsPage.checkTrialBalanceFormatasHorizontalDisplayColasYearandOutputasFilePath(SanityFAReportsPage.java:60375)
	at com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasYearandOutputasFilePath(SanityFAReportsTest.java:3311)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id='RITOutput_']"}
  (Session info: chrome=108.0.5359.125)
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z'
System info: host: 'FOCUS-QA-10', ip: '192.168.4.206', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\Rakesh\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:59756}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 56bfff794ecbcecb25f8ad2526ab4f26
*** Element info: {Using=xpath, value=//*[@id='RITOutput_']}
	at sun.reflect.GeneratedConstructorAccessor52.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
	at com.sun.proxy.$Proxy12.isDisplayed(Unknown Source)
	at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:315)
	at org.openqa.selenium.support.ui.ExpectedConditions.access$100(ExpectedConditions.java:44)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:301)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:298)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:686)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:682)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:248)
	... 26 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasYearandOutputasFilePath]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrialBalanceFormatasHorizontalDisplayColasYearandOutputasFilePath -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-04T00:27:19Z" finished-at="2023-01-04T00:27:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasYearandOutputasFilePath() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="132" started-at="2023-01-04T00:28:39Z" finished-at="2023-01-04T00:28:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrialBalanceFormatasHorizontalDisplayColasYearandOutputasFilePath status=FAILURE method=SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasYearandOutputasFilePath()[pri:521, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasYearandOutputasFilePath]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="FAIL" signature="checkTrialBalanceFormatasHorizontalDisplayColasYearandOutputasExcelCSV()[pri:522, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrialBalanceFormatasHorizontalDisplayColasYearandOutputasExcelCSV" duration-ms="80051" started-at="2023-01-04T00:28:39Z" finished-at="2023-01-04T00:29:59Z">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='RITOutput_']' (tried for 40 second(s) with 5000 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='RITOutput_']' (tried for 40 second(s) with 5000 milliseconds interval)
	at org.openqa.selenium.support.ui.FluentWait.timeoutException(FluentWait.java:303)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:271)
	at com.focus.Pages.SanityFAReportsPage.checkTrialBalanaceFormatasHorizontalDisplayColasYearandOutputasExcelCSV(SanityFAReportsPage.java:60526)
	at com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasYearandOutputasExcelCSV(SanityFAReportsTest.java:3319)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id='RITOutput_']"}
  (Session info: chrome=108.0.5359.125)
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z'
System info: host: 'FOCUS-QA-10', ip: '192.168.4.206', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\Rakesh\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:59756}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 56bfff794ecbcecb25f8ad2526ab4f26
*** Element info: {Using=xpath, value=//*[@id='RITOutput_']}
	at sun.reflect.GeneratedConstructorAccessor52.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
	at com.sun.proxy.$Proxy12.isDisplayed(Unknown Source)
	at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:315)
	at org.openqa.selenium.support.ui.ExpectedConditions.access$100(ExpectedConditions.java:44)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:301)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:298)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:686)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:682)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:248)
	... 26 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasYearandOutputasExcelCSV]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrialBalanceFormatasHorizontalDisplayColasYearandOutputasExcelCSV -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-04T00:28:39Z" finished-at="2023-01-04T00:28:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasYearandOutputasExcelCSV() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="153" started-at="2023-01-04T00:29:59Z" finished-at="2023-01-04T00:29:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrialBalanceFormatasHorizontalDisplayColasYearandOutputasExcelCSV status=FAILURE method=SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasYearandOutputasExcelCSV()[pri:522, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasYearandOutputasExcelCSV]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="FAIL" signature="checkTrialBalanceFormatasHorizontalDisplayColasYearandOutputasEmail()[pri:523, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrialBalanceFormatasHorizontalDisplayColasYearandOutputasEmail" duration-ms="80071" started-at="2023-01-04T00:29:59Z" finished-at="2023-01-04T00:31:19Z">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='RITOutput_']' (tried for 40 second(s) with 5000 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='RITOutput_']' (tried for 40 second(s) with 5000 milliseconds interval)
	at org.openqa.selenium.support.ui.FluentWait.timeoutException(FluentWait.java:303)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:271)
	at com.focus.Pages.SanityFAReportsPage.checkTrialBalanceFormatasHorizontalDisplayColasYearandOutputasEmail(SanityFAReportsPage.java:60703)
	at com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasYearandOutputasEmail(SanityFAReportsTest.java:3326)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id='RITOutput_']"}
  (Session info: chrome=108.0.5359.125)
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z'
System info: host: 'FOCUS-QA-10', ip: '192.168.4.206', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\Rakesh\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:59756}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 56bfff794ecbcecb25f8ad2526ab4f26
*** Element info: {Using=xpath, value=//*[@id='RITOutput_']}
	at sun.reflect.GeneratedConstructorAccessor52.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
	at com.sun.proxy.$Proxy12.isDisplayed(Unknown Source)
	at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:315)
	at org.openqa.selenium.support.ui.ExpectedConditions.access$100(ExpectedConditions.java:44)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:301)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:298)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:686)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:682)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:248)
	... 26 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasYearandOutputasEmail]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrialBalanceFormatasHorizontalDisplayColasYearandOutputasEmail -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-04T00:29:59Z" finished-at="2023-01-04T00:29:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasYearandOutputasEmail() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="131" started-at="2023-01-04T00:31:19Z" finished-at="2023-01-04T00:31:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrialBalanceFormatasHorizontalDisplayColasYearandOutputasEmail status=FAILURE method=SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasYearandOutputasEmail()[pri:523, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasYearandOutputasEmail]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-04T00:31:19Z" finished-at="2023-01-04T00:31:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasYearandOutputasGraph() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="FAIL" signature="checkTrialBalanceFormatasHorizontalDisplayColasYearandOutputasGraph()[pri:524, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="checkTrialBalanceFormatasHorizontalDisplayColasYearandOutputasGraph" duration-ms="80023" started-at="2023-01-04T00:31:19Z" finished-at="2023-01-04T00:32:39Z">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='60']//div[contains(text(),'Financials')]' (tried for 40 second(s) with 5000 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='60']//div[contains(text(),'Financials')]' (tried for 40 second(s) with 5000 milliseconds interval)
	at org.openqa.selenium.support.ui.FluentWait.timeoutException(FluentWait.java:303)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:271)
	at com.focus.Pages.SanityFAReportsPage.checkTrialBalanceFormatasHorizontalDisplayColasYearandOutputasGraph(SanityFAReportsPage.java:61073)
	at com.focus.testcases.SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasYearandOutputasGraph(SanityFAReportsTest.java:3333)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id='60']//div[contains(text(),'Financials')]"}
  (Session info: chrome=108.0.5359.125)
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z'
System info: host: 'FOCUS-QA-10', ip: '192.168.4.206', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\Rakesh\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:59756}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 56bfff794ecbcecb25f8ad2526ab4f26
*** Element info: {Using=xpath, value=//*[@id='60']//div[contains(text(),'Financials')]}
	at sun.reflect.GeneratedConstructorAccessor52.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
	at com.sun.proxy.$Proxy12.isDisplayed(Unknown Source)
	at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:315)
	at org.openqa.selenium.support.ui.ExpectedConditions.access$100(ExpectedConditions.java:44)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:301)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:298)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:686)
	at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:682)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:248)
	... 26 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasYearandOutputasGraph]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.SanityFAReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTrialBalanceFormatasHorizontalDisplayColasYearandOutputasGraph -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.SanityFAReportsTest@47ef968d]" name="afterMethodExecution" is-config="true" duration-ms="123" started-at="2023-01-04T00:32:39Z" finished-at="2023-01-04T00:32:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTrialBalanceFormatasHorizontalDisplayColasYearandOutputasGraph status=FAILURE method=SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasYearandOutputasGraph()[pri:524, instance:com.focus.testcases.SanityFAReportsTest@47ef968d] output=Completed executing following method : SanityFAReportsTest.checkTrialBalanceFormatasHorizontalDisplayColasYearandOutputasGraph]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
      </class> <!-- com.focus.testcases.SanityFAReportsTest -->
      <class name="com.focus.testcases.LoginPageTest">
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.LoginPageTest@6e0e048a]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:39:36Z" finished-at="2023-01-03T20:39:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.LoginPageTest.checkLoginPageAvailablityOfFields() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkLoginPageAvailablityOfFields()[pri:3, instance:com.focus.testcases.LoginPageTest@6e0e048a]" name="checkLoginPageAvailablityOfFields" duration-ms="685" started-at="2023-01-03T20:39:36Z" finished-at="2023-01-03T20:39:36Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : LoginPageTest.checkLoginPageAvailablityOfFields]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.LoginPageTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkLoginPageAvailablityOfFields -->
        <test-method status="PASS" signature="checkCompanyTextDisplayInCompanyListDropdown()[pri:4, instance:com.focus.testcases.LoginPageTest@6e0e048a]" name="checkCompanyTextDisplayInCompanyListDropdown" duration-ms="53" started-at="2023-01-03T20:39:36Z" finished-at="2023-01-03T20:39:36Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : LoginPageTest.checkCompanyTextDisplayInCompanyListDropdown]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.LoginPageTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkCompanyTextDisplayInCompanyListDropdown -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.LoginPageTest@6e0e048a]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:39:36Z" finished-at="2023-01-03T20:39:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.LoginPageTest.checkCompanyTextDisplayInCompanyListDropdown() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.LoginPageTest@6e0e048a]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:39:36Z" finished-at="2023-01-03T20:39:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkLoginPageAvailablityOfFields status=SUCCESS method=LoginPageTest.checkLoginPageAvailablityOfFields()[pri:3, instance:com.focus.testcases.LoginPageTest@6e0e048a] output=Completed executing following method : LoginPageTest.checkLoginPageAvailablityOfFields]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.LoginPageTest@6e0e048a]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:39:36Z" finished-at="2023-01-03T20:39:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkCompanyTextDisplayInCompanyListDropdown status=SUCCESS method=LoginPageTest.checkCompanyTextDisplayInCompanyListDropdown()[pri:4, instance:com.focus.testcases.LoginPageTest@6e0e048a] output=Completed executing following method : LoginPageTest.checkCompanyTextDisplayInCompanyListDropdown]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkSignInBtnWithValidUserNameAndValidPassword()[pri:5, instance:com.focus.testcases.LoginPageTest@6e0e048a]" name="checkSignInBtnWithValidUserNameAndValidPassword" duration-ms="8719" started-at="2023-01-03T20:39:36Z" finished-at="2023-01-03T20:39:45Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : LoginPageTest.checkSignInBtnWithValidUserNameAndValidPassword]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.LoginPageTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkSignInBtnWithValidUserNameAndValidPassword -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.LoginPageTest@6e0e048a]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:39:36Z" finished-at="2023-01-03T20:39:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.LoginPageTest.checkSignInBtnWithValidUserNameAndValidPassword() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkUserNameInfoInHomePage()[pri:6, instance:com.focus.testcases.LoginPageTest@6e0e048a]" name="checkUserNameInfoInHomePage" duration-ms="340" started-at="2023-01-03T20:39:45Z" finished-at="2023-01-03T20:39:45Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : LoginPageTest.checkUserNameInfoInHomePage]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.LoginPageTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkUserNameInfoInHomePage -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.LoginPageTest@6e0e048a]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:39:45Z" finished-at="2023-01-03T20:39:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.LoginPageTest.checkUserNameInfoInHomePage() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.LoginPageTest@6e0e048a]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:39:45Z" finished-at="2023-01-03T20:39:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkSignInBtnWithValidUserNameAndValidPassword status=SUCCESS method=LoginPageTest.checkSignInBtnWithValidUserNameAndValidPassword()[pri:5, instance:com.focus.testcases.LoginPageTest@6e0e048a] output=Completed executing following method : LoginPageTest.checkSignInBtnWithValidUserNameAndValidPassword]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.LoginPageTest@6e0e048a]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:39:45Z" finished-at="2023-01-03T20:39:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkUserNameInfoInHomePage status=SUCCESS method=LoginPageTest.checkUserNameInfoInHomePage()[pri:6, instance:com.focus.testcases.LoginPageTest@6e0e048a] output=Completed executing following method : LoginPageTest.checkUserNameInfoInHomePage]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
      </class> <!-- com.focus.testcases.LoginPageTest -->
      <class name="com.focus.testcases.URLBrowserTest">
        <test-method status="PASS" signature="openBrowser(java.lang.String)[pri:0, instance:com.focus.testcases.URLBrowserTest@5b87ed94]" name="openBrowser" is-config="true" duration-ms="5722" started-at="2023-01-03T20:39:17Z" finished-at="2023-01-03T20:39:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.openBrowser]]>
            </line>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method status="PASS" signature="intialiseReports()[pri:0, instance:com.focus.testcases.URLBrowserTest@5b87ed94]" name="intialiseReports" is-config="true" duration-ms="181" started-at="2023-01-03T20:39:23Z" finished-at="2023-01-03T20:39:23Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.intialiseReports]]>
            </line>
          </reporter-output>
        </test-method> <!-- intialiseReports -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.URLBrowserTest@5b87ed94]" name="beforeMethodExecution" is-config="true" duration-ms="3" started-at="2023-01-03T20:39:23Z" finished-at="2023-01-03T20:39:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.URLBrowserTest.verifyBrowserOpen() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="verifyBrowserOpen()[pri:1, instance:com.focus.testcases.URLBrowserTest@5b87ed94]" name="verifyBrowserOpen" duration-ms="7971" started-at="2023-01-03T20:39:23Z" finished-at="2023-01-03T20:39:31Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : URLBrowserTest.verifyBrowserOpen]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.URLBrowserTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyBrowserOpen -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.URLBrowserTest@5b87ed94]" name="afterMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T20:39:31Z" finished-at="2023-01-03T20:39:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyBrowserOpen status=SUCCESS method=URLBrowserTest.verifyBrowserOpen()[pri:1, instance:com.focus.testcases.URLBrowserTest@5b87ed94] output=Completed executing following method : URLBrowserTest.verifyBrowserOpen]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkLoginPageTitleByURLInputInBrowser()[pri:2, instance:com.focus.testcases.URLBrowserTest@5b87ed94]" name="checkLoginPageTitleByURLInputInBrowser" duration-ms="4808" started-at="2023-01-03T20:39:31Z" finished-at="2023-01-03T20:39:36Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : URLBrowserTest.checkLoginPageTitleByURLInputInBrowser]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.URLBrowserTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkLoginPageTitleByURLInputInBrowser -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.URLBrowserTest@5b87ed94]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:39:31Z" finished-at="2023-01-03T20:39:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.URLBrowserTest.checkLoginPageTitleByURLInputInBrowser() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.URLBrowserTest@5b87ed94]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:39:36Z" finished-at="2023-01-03T20:39:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkLoginPageTitleByURLInputInBrowser status=SUCCESS method=URLBrowserTest.checkLoginPageTitleByURLInputInBrowser()[pri:2, instance:com.focus.testcases.URLBrowserTest@5b87ed94] output=Completed executing following method : URLBrowserTest.checkLoginPageTitleByURLInputInBrowser]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="generateReports()[pri:0, instance:com.focus.testcases.URLBrowserTest@5b87ed94]" name="generateReports" is-config="true" duration-ms="267" started-at="2023-01-04T00:32:39Z" finished-at="2023-01-04T00:32:40Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.generateReports]]>
            </line>
          </reporter-output>
        </test-method> <!-- generateReports -->
        <test-method status="PASS" signature="closeBrowser()[pri:0, instance:com.focus.testcases.URLBrowserTest@5b87ed94]" name="closeBrowser" is-config="true" duration-ms="121" started-at="2023-01-04T00:32:40Z" finished-at="2023-01-04T00:32:40Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.closeBrowser]]>
            </line>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- com.focus.testcases.URLBrowserTest -->
      <class name="com.focus.testcases.InventoryReportsTest">
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T20:39:45Z" finished-at="2023-01-03T20:39:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkAccountGroupsListinStockMovement() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkAccountGroupsListinStockMovement()[pri:300, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkAccountGroupsListinStockMovement" duration-ms="16866" started-at="2023-01-03T20:39:45Z" finished-at="2023-01-03T20:40:02Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkAccountGroupsListinStockMovement]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkAccountGroupsListinStockMovement -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T20:40:02Z" finished-at="2023-01-03T20:40:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkAccountGroupsListinStockMovement status=SUCCESS method=InventoryReportsTest.checkAccountGroupsListinStockMovement()[pri:300, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkAccountGroupsListinStockMovement]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:40:02Z" finished-at="2023-01-03T20:40:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkItemGroupAccountinStockMovementReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkItemGroupAccountinStockMovementReport()[pri:301, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkItemGroupAccountinStockMovementReport" duration-ms="4967" started-at="2023-01-03T20:40:02Z" finished-at="2023-01-03T20:40:07Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkItemGroupAccountinStockMovementReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkItemGroupAccountinStockMovementReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T20:40:07Z" finished-at="2023-01-03T20:40:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkGroupItemsinStockMovement() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:40:07Z" finished-at="2023-01-03T20:40:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkItemGroupAccountinStockMovementReport status=SUCCESS method=InventoryReportsTest.checkItemGroupAccountinStockMovementReport()[pri:301, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkItemGroupAccountinStockMovementReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkGroupItemsinStockMovement()[pri:340, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkGroupItemsinStockMovement" duration-ms="10257" started-at="2023-01-03T20:40:07Z" finished-at="2023-01-03T20:40:18Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkGroupItemsinStockMovement]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkGroupItemsinStockMovement -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T20:40:18Z" finished-at="2023-01-03T20:40:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkGroupItemsinStockMovement status=SUCCESS method=InventoryReportsTest.checkGroupItemsinStockMovement()[pri:340, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkGroupItemsinStockMovement]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkItemQueryReport()[pri:341, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkItemQueryReport" duration-ms="31843" started-at="2023-01-03T20:40:18Z" finished-at="2023-01-03T20:40:49Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkItemQueryReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkItemQueryReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:40:18Z" finished-at="2023-01-03T20:40:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkItemQueryReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:40:49Z" finished-at="2023-01-03T20:40:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkItemQueryReport status=SUCCESS method=InventoryReportsTest.checkItemQueryReport()[pri:341, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkItemQueryReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkStockLedgerReport()[pri:342, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkStockLedgerReport" duration-ms="14743" started-at="2023-01-03T20:40:49Z" finished-at="2023-01-03T20:41:04Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkStockLedgerReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkStockLedgerReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:40:49Z" finished-at="2023-01-03T20:40:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkStockLedgerReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:41:04Z" finished-at="2023-01-03T20:41:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkStockLedgerReport status=SUCCESS method=InventoryReportsTest.checkStockLedgerReport()[pri:342, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkStockLedgerReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkStockLedgerCustomizationReport()[pri:343, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkStockLedgerCustomizationReport" duration-ms="24891" started-at="2023-01-03T20:41:04Z" finished-at="2023-01-03T20:41:29Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkStockLedgerCustomizationReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkStockLedgerCustomizationReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:41:04Z" finished-at="2023-01-03T20:41:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkStockLedgerCustomizationReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T20:41:29Z" finished-at="2023-01-03T20:41:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkStockLedgerReportWithMovedItemsOnlyAndIncludeServiceTypeItemsCheckBoxs() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:41:29Z" finished-at="2023-01-03T20:41:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkStockLedgerCustomizationReport status=SUCCESS method=InventoryReportsTest.checkStockLedgerCustomizationReport()[pri:343, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkStockLedgerCustomizationReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkStockLedgerReportWithMovedItemsOnlyAndIncludeServiceTypeItemsCheckBoxs()[pri:344, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkStockLedgerReportWithMovedItemsOnlyAndIncludeServiceTypeItemsCheckBoxs" duration-ms="6719" started-at="2023-01-03T20:41:29Z" finished-at="2023-01-03T20:41:36Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkStockLedgerReportWithMovedItemsOnlyAndIncludeServiceTypeItemsCheckBoxs]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkStockLedgerReportWithMovedItemsOnlyAndIncludeServiceTypeItemsCheckBoxs -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:41:36Z" finished-at="2023-01-03T20:41:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkStockLedgerReportWithMovedItemsOnlyAndIncludeServiceTypeItemsCheckBoxs status=SUCCESS method=InventoryReportsTest.checkStockLedgerReportWithMovedItemsOnlyAndIncludeServiceTypeItemsCheckBoxs()[pri:344, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkStockLedgerReportWithMovedItemsOnlyAndIncludeServiceTypeItemsCheckBoxs]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T20:41:36Z" finished-at="2023-01-03T20:41:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkStockLedgerReportBackTrackOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkStockLedgerReportBackTrackOption()[pri:345, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkStockLedgerReportBackTrackOption" duration-ms="23086" started-at="2023-01-03T20:41:36Z" finished-at="2023-01-03T20:41:59Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkStockLedgerReportBackTrackOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkStockLedgerReportBackTrackOption -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:41:59Z" finished-at="2023-01-03T20:41:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkOpeningStockRegisterReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkOpeningStockRegisterReport()[pri:346, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkOpeningStockRegisterReport" duration-ms="12584" started-at="2023-01-03T20:41:59Z" finished-at="2023-01-03T20:42:11Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkOpeningStockRegisterReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkOpeningStockRegisterReport -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:41:59Z" finished-at="2023-01-03T20:41:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkStockLedgerReportBackTrackOption status=SUCCESS method=InventoryReportsTest.checkStockLedgerReportBackTrackOption()[pri:345, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkStockLedgerReportBackTrackOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:42:11Z" finished-at="2023-01-03T20:42:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkOpeningStockRegisterReport status=SUCCESS method=InventoryReportsTest.checkOpeningStockRegisterReport()[pri:346, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkOpeningStockRegisterReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkOpeningStockRegisterReportFilterOption()[pri:347, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkOpeningStockRegisterReportFilterOption" duration-ms="37642" started-at="2023-01-03T20:42:11Z" finished-at="2023-01-03T20:42:49Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkOpeningStockRegisterReportFilterOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkOpeningStockRegisterReportFilterOption -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:42:11Z" finished-at="2023-01-03T20:42:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkOpeningStockRegisterReportFilterOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T20:42:49Z" finished-at="2023-01-03T20:42:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkOpeningStockRegisterReportFilterOption status=SUCCESS method=InventoryReportsTest.checkOpeningStockRegisterReportFilterOption()[pri:347, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkOpeningStockRegisterReportFilterOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:42:49Z" finished-at="2023-01-03T20:42:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkOpeningStockRegisterReportBackTrackOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkOpeningStockRegisterReportBackTrackOption()[pri:348, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkOpeningStockRegisterReportBackTrackOption" duration-ms="14785" started-at="2023-01-03T20:42:49Z" finished-at="2023-01-03T20:43:04Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkOpeningStockRegisterReportBackTrackOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkOpeningStockRegisterReportBackTrackOption -->
        <test-method status="PASS" signature="checkStockStatementReport()[pri:349, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkStockStatementReport" duration-ms="15579" started-at="2023-01-03T20:43:04Z" finished-at="2023-01-03T20:43:19Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkStockStatementReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkStockStatementReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:43:04Z" finished-at="2023-01-03T20:43:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkStockStatementReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:43:04Z" finished-at="2023-01-03T20:43:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkOpeningStockRegisterReportBackTrackOption status=SUCCESS method=InventoryReportsTest.checkOpeningStockRegisterReportBackTrackOption()[pri:348, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkOpeningStockRegisterReportBackTrackOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T20:43:19Z" finished-at="2023-01-03T20:43:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkStockStatementReport status=SUCCESS method=InventoryReportsTest.checkStockStatementReport()[pri:349, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkStockStatementReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:43:19Z" finished-at="2023-01-03T20:43:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkStockStatementReportPrintOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkStockStatementReportPrintOption()[pri:350, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkStockStatementReportPrintOption" duration-ms="5341" started-at="2023-01-03T20:43:19Z" finished-at="2023-01-03T20:43:25Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkStockStatementReportPrintOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkStockStatementReportPrintOption -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:43:25Z" finished-at="2023-01-03T20:43:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkStockStatementReportPrintOption status=SUCCESS method=InventoryReportsTest.checkStockStatementReportPrintOption()[pri:350, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkStockStatementReportPrintOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkStockStatementReportWithIncludeServiceTypeItem()[pri:351, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkStockStatementReportWithIncludeServiceTypeItem" duration-ms="5998" started-at="2023-01-03T20:43:25Z" finished-at="2023-01-03T20:43:31Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkStockStatementReportWithIncludeServiceTypeItem]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkStockStatementReportWithIncludeServiceTypeItem -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:43:25Z" finished-at="2023-01-03T20:43:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkStockStatementReportWithIncludeServiceTypeItem() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T20:43:31Z" finished-at="2023-01-03T20:43:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkStockMovementReports() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:43:31Z" finished-at="2023-01-03T20:43:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkStockStatementReportWithIncludeServiceTypeItem status=SUCCESS method=InventoryReportsTest.checkStockStatementReportWithIncludeServiceTypeItem()[pri:351, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkStockStatementReportWithIncludeServiceTypeItem]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkStockMovementReports()[pri:352, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkStockMovementReports" duration-ms="21557" started-at="2023-01-03T20:43:31Z" finished-at="2023-01-03T20:43:52Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkStockMovementReports]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkStockMovementReports -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T20:43:52Z" finished-at="2023-01-03T20:43:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkStockMovementReportsWithStockMovementByWarehouseAndIncludeServiceTypeItemOptions() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:43:52Z" finished-at="2023-01-03T20:43:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkStockMovementReports status=SUCCESS method=InventoryReportsTest.checkStockMovementReports()[pri:352, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkStockMovementReports]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkStockMovementReportsWithStockMovementByWarehouseAndIncludeServiceTypeItemOptions()[pri:353, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkStockMovementReportsWithStockMovementByWarehouseAndIncludeServiceTypeItemOptions" duration-ms="6853" started-at="2023-01-03T20:43:52Z" finished-at="2023-01-03T20:43:59Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkStockMovementReportsWithStockMovementByWarehouseAndIncludeServiceTypeItemOptions]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkStockMovementReportsWithStockMovementByWarehouseAndIncludeServiceTypeItemOptions -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:43:59Z" finished-at="2023-01-03T20:43:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkStockMovementReportsWithStockMovementByWarehouseAndIncludeServiceTypeItemOptions status=SUCCESS method=InventoryReportsTest.checkStockMovementReportsWithStockMovementByWarehouseAndIncludeServiceTypeItemOptions()[pri:353, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkStockMovementReportsWithStockMovementByWarehouseAndIncludeServiceTypeItemOptions]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:43:59Z" finished-at="2023-01-03T20:43:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkStockMovementReportWithFilterOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkStockMovementReportWithFilterOption()[pri:354, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkStockMovementReportWithFilterOption" duration-ms="31330" started-at="2023-01-03T20:43:59Z" finished-at="2023-01-03T20:44:31Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkStockMovementReportWithFilterOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkStockMovementReportWithFilterOption -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:44:31Z" finished-at="2023-01-03T20:44:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkStockMovementReportWithFilterOption status=SUCCESS method=InventoryReportsTest.checkStockMovementReportWithFilterOption()[pri:354, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkStockMovementReportWithFilterOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:44:31Z" finished-at="2023-01-03T20:44:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkStockMovementReportBackTrackOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="FAIL" signature="checkStockMovementReportBackTrackOption()[pri:355, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkStockMovementReportBackTrackOption" duration-ms="7286" started-at="2023-01-03T20:44:31Z" finished-at="2023-01-03T20:44:38Z">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 13, Size: 13]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 13, Size: 13
	at java.util.ArrayList.rangeCheck(Unknown Source)
	at java.util.ArrayList.get(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementListHandler.invoke(LocatingElementListHandler.java:39)
	at com.sun.proxy.$Proxy16.get(Unknown Source)
	at com.focus.Pages.InventoryReportsPage.checkStockMovementReportBackTrackOption(InventoryReportsPage.java:21184)
	at com.focus.testcases.InventoryReportsTest.checkStockMovementReportBackTrackOption(InventoryReportsTest.java:166)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkStockMovementReportBackTrackOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkStockMovementReportBackTrackOption -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="133" started-at="2023-01-03T20:44:38Z" finished-at="2023-01-03T20:44:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkStockMovementReportBackTrackOption status=FAILURE method=InventoryReportsTest.checkStockMovementReportBackTrackOption()[pri:355, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkStockMovementReportBackTrackOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkMultiLevelStockMovementReports()[pri:356, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkMultiLevelStockMovementReports" duration-ms="14547" started-at="2023-01-03T20:44:38Z" finished-at="2023-01-03T20:44:53Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkMultiLevelStockMovementReports]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkMultiLevelStockMovementReports -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:44:38Z" finished-at="2023-01-03T20:44:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkMultiLevelStockMovementReports() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T20:44:53Z" finished-at="2023-01-03T20:44:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkMultiLevelStockMovementReportFilterOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:44:53Z" finished-at="2023-01-03T20:44:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkMultiLevelStockMovementReports status=SUCCESS method=InventoryReportsTest.checkMultiLevelStockMovementReports()[pri:356, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkMultiLevelStockMovementReports]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkMultiLevelStockMovementReportFilterOption()[pri:357, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkMultiLevelStockMovementReportFilterOption" duration-ms="33282" started-at="2023-01-03T20:44:53Z" finished-at="2023-01-03T20:45:26Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkMultiLevelStockMovementReportFilterOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkMultiLevelStockMovementReportFilterOption -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T20:45:26Z" finished-at="2023-01-03T20:45:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkMultiLevelStockMovementReportFilterOption status=SUCCESS method=InventoryReportsTest.checkMultiLevelStockMovementReportFilterOption()[pri:357, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkMultiLevelStockMovementReportFilterOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkMultiLevelStockMovementReportWithIncludeServiceTypeItemOption()[pri:358, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkMultiLevelStockMovementReportWithIncludeServiceTypeItemOption" duration-ms="4466" started-at="2023-01-03T20:45:26Z" finished-at="2023-01-03T20:45:30Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkMultiLevelStockMovementReportWithIncludeServiceTypeItemOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkMultiLevelStockMovementReportWithIncludeServiceTypeItemOption -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:45:26Z" finished-at="2023-01-03T20:45:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkMultiLevelStockMovementReportWithIncludeServiceTypeItemOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T20:45:30Z" finished-at="2023-01-03T20:45:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkMultiLevelStockMovementReportBackTrackOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:45:30Z" finished-at="2023-01-03T20:45:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkMultiLevelStockMovementReportWithIncludeServiceTypeItemOption status=SUCCESS method=InventoryReportsTest.checkMultiLevelStockMovementReportWithIncludeServiceTypeItemOption()[pri:358, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkMultiLevelStockMovementReportWithIncludeServiceTypeItemOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkMultiLevelStockMovementReportBackTrackOption()[pri:359, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkMultiLevelStockMovementReportBackTrackOption" duration-ms="18264" started-at="2023-01-03T20:45:30Z" finished-at="2023-01-03T20:45:49Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkMultiLevelStockMovementReportBackTrackOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkMultiLevelStockMovementReportBackTrackOption -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:45:49Z" finished-at="2023-01-03T20:45:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkMultiLevelStockMovementReportBackTrackOption status=SUCCESS method=InventoryReportsTest.checkMultiLevelStockMovementReportBackTrackOption()[pri:359, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkMultiLevelStockMovementReportBackTrackOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkVirtualStockAnalysisReports()[pri:360, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkVirtualStockAnalysisReports" duration-ms="15821" started-at="2023-01-03T20:45:49Z" finished-at="2023-01-03T20:46:04Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkVirtualStockAnalysisReports]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkVirtualStockAnalysisReports -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:45:49Z" finished-at="2023-01-03T20:45:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkVirtualStockAnalysisReports() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:46:04Z" finished-at="2023-01-03T20:46:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkVirtualStockAnalysisReports status=SUCCESS method=InventoryReportsTest.checkVirtualStockAnalysisReports()[pri:360, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkVirtualStockAnalysisReports]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkVirtualStockAnalysisReportWithIncludeServiceTypeItemOption()[pri:361, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkVirtualStockAnalysisReportWithIncludeServiceTypeItemOption" duration-ms="3697" started-at="2023-01-03T20:46:04Z" finished-at="2023-01-03T20:46:08Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkVirtualStockAnalysisReportWithIncludeServiceTypeItemOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkVirtualStockAnalysisReportWithIncludeServiceTypeItemOption -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:46:04Z" finished-at="2023-01-03T20:46:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkVirtualStockAnalysisReportWithIncludeServiceTypeItemOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:46:08Z" finished-at="2023-01-03T20:46:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkVirtualStockAnalysisReportWithIncludeServiceTypeItemOption status=SUCCESS method=InventoryReportsTest.checkVirtualStockAnalysisReportWithIncludeServiceTypeItemOption()[pri:361, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkVirtualStockAnalysisReportWithIncludeServiceTypeItemOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:46:08Z" finished-at="2023-01-03T20:46:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkVirtualStockAnalysisReportBackTrackOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkVirtualStockAnalysisReportBackTrackOption()[pri:362, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkVirtualStockAnalysisReportBackTrackOption" duration-ms="29595" started-at="2023-01-03T20:46:08Z" finished-at="2023-01-03T20:46:38Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkVirtualStockAnalysisReportBackTrackOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkVirtualStockAnalysisReportBackTrackOption -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T20:46:38Z" finished-at="2023-01-03T20:46:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkVirtualStockAnalysisReportBackTrackOption status=SUCCESS method=InventoryReportsTest.checkVirtualStockAnalysisReportBackTrackOption()[pri:362, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkVirtualStockAnalysisReportBackTrackOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:46:38Z" finished-at="2023-01-03T20:46:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkStockValuationReports() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkStockValuationReports()[pri:363, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkStockValuationReports" duration-ms="13051" started-at="2023-01-03T20:46:38Z" finished-at="2023-01-03T20:46:51Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkStockValuationReports]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkStockValuationReports -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T20:46:51Z" finished-at="2023-01-03T20:46:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkStockValuationReports status=SUCCESS method=InventoryReportsTest.checkStockValuationReports()[pri:363, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkStockValuationReports]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkStockValuationCustomizationReport()[pri:364, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkStockValuationCustomizationReport" duration-ms="23385" started-at="2023-01-03T20:46:51Z" finished-at="2023-01-03T20:47:14Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkStockValuationCustomizationReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkStockValuationCustomizationReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:46:51Z" finished-at="2023-01-03T20:46:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkStockValuationCustomizationReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:47:14Z" finished-at="2023-01-03T20:47:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkStockValuationCustomizationReport status=SUCCESS method=InventoryReportsTest.checkStockValuationCustomizationReport()[pri:364, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkStockValuationCustomizationReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T20:47:14Z" finished-at="2023-01-03T20:47:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkStockValuationReportWithStockValuationDisplayLinearReportIncludeServiceTypeItemOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkStockValuationReportWithStockValuationDisplayLinearReportIncludeServiceTypeItemOption()[pri:365, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkStockValuationReportWithStockValuationDisplayLinearReportIncludeServiceTypeItemOption" duration-ms="3995" started-at="2023-01-03T20:47:14Z" finished-at="2023-01-03T20:47:18Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkStockValuationReportWithStockValuationDisplayLinearReportIncludeServiceTypeItemOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkStockValuationReportWithStockValuationDisplayLinearReportIncludeServiceTypeItemOption -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:47:18Z" finished-at="2023-01-03T20:47:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkStockValuationReportBackTrackOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:47:18Z" finished-at="2023-01-03T20:47:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkStockValuationReportWithStockValuationDisplayLinearReportIncludeServiceTypeItemOption status=SUCCESS method=InventoryReportsTest.checkStockValuationReportWithStockValuationDisplayLinearReportIncludeServiceTypeItemOption()[pri:365, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkStockValuationReportWithStockValuationDisplayLinearReportIncludeServiceTypeItemOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkStockValuationReportBackTrackOption()[pri:366, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkStockValuationReportBackTrackOption" duration-ms="23654" started-at="2023-01-03T20:47:18Z" finished-at="2023-01-03T20:47:42Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkStockValuationReportBackTrackOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkStockValuationReportBackTrackOption -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T20:47:42Z" finished-at="2023-01-03T20:47:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkStockValuationReportBackTrackOption status=SUCCESS method=InventoryReportsTest.checkStockValuationReportBackTrackOption()[pri:366, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkStockValuationReportBackTrackOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkStockReportbyTagReports()[pri:367, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkStockReportbyTagReports" duration-ms="14238" started-at="2023-01-03T20:47:42Z" finished-at="2023-01-03T20:47:56Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkStockReportbyTagReports]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkStockReportbyTagReports -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:47:42Z" finished-at="2023-01-03T20:47:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkStockReportbyTagReports() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkStockReportbyTagReportPrintOption()[pri:368, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkStockReportbyTagReportPrintOption" duration-ms="5352" started-at="2023-01-03T20:47:56Z" finished-at="2023-01-03T20:48:01Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkStockReportbyTagReportPrintOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkStockReportbyTagReportPrintOption -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:47:56Z" finished-at="2023-01-03T20:47:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkStockReportbyTagReports status=SUCCESS method=InventoryReportsTest.checkStockReportbyTagReports()[pri:367, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkStockReportbyTagReports]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:47:56Z" finished-at="2023-01-03T20:47:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkStockReportbyTagReportPrintOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T20:48:01Z" finished-at="2023-01-03T20:48:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkStockReportbyTagReportPrintOption status=SUCCESS method=InventoryReportsTest.checkStockReportbyTagReportPrintOption()[pri:368, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkStockReportbyTagReportPrintOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkStockReportbyTagReportBackTrackOption()[pri:369, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkStockReportbyTagReportBackTrackOption" duration-ms="38286" started-at="2023-01-03T20:48:01Z" finished-at="2023-01-03T20:48:40Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkStockReportbyTagReportBackTrackOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkStockReportbyTagReportBackTrackOption -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:48:01Z" finished-at="2023-01-03T20:48:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkStockReportbyTagReportBackTrackOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T20:48:40Z" finished-at="2023-01-03T20:48:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkStockReportbyTagReportBackTrackOption status=SUCCESS method=InventoryReportsTest.checkStockReportbyTagReportBackTrackOption()[pri:369, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkStockReportbyTagReportBackTrackOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:48:40Z" finished-at="2023-01-03T20:48:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkABCAnalysisReports() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkABCAnalysisReports()[pri:370, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkABCAnalysisReports" duration-ms="12046" started-at="2023-01-03T20:48:40Z" finished-at="2023-01-03T20:48:52Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkABCAnalysisReports]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkABCAnalysisReports -->
        <test-method status="PASS" signature="checkABCAnalysisReportWithClassificationAndCriteriaOptions()[pri:371, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkABCAnalysisReportWithClassificationAndCriteriaOptions" duration-ms="3954" started-at="2023-01-03T20:48:52Z" finished-at="2023-01-03T20:48:56Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkABCAnalysisReportWithClassificationAndCriteriaOptions]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkABCAnalysisReportWithClassificationAndCriteriaOptions -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:48:52Z" finished-at="2023-01-03T20:48:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkABCAnalysisReportWithClassificationAndCriteriaOptions() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:48:52Z" finished-at="2023-01-03T20:48:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkABCAnalysisReports status=SUCCESS method=InventoryReportsTest.checkABCAnalysisReports()[pri:370, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkABCAnalysisReports]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T20:48:56Z" finished-at="2023-01-03T20:48:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkABCAnalysisReportWithClassificationAndCriteriaOptions status=SUCCESS method=InventoryReportsTest.checkABCAnalysisReportWithClassificationAndCriteriaOptions()[pri:371, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkABCAnalysisReportWithClassificationAndCriteriaOptions]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkStockAnalysisByBatchReport()[pri:372, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkStockAnalysisByBatchReport" duration-ms="16548" started-at="2023-01-03T20:48:56Z" finished-at="2023-01-03T20:49:12Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkStockAnalysisByBatchReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkStockAnalysisByBatchReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:48:56Z" finished-at="2023-01-03T20:48:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkStockAnalysisByBatchReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T20:49:12Z" finished-at="2023-01-03T20:49:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkStockAnalysisByBatchReport status=SUCCESS method=InventoryReportsTest.checkStockAnalysisByBatchReport()[pri:372, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkStockAnalysisByBatchReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="FAIL" signature="checkStockAnalysisByBatchReportFilterOption()[pri:373, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkStockAnalysisByBatchReportFilterOption" duration-ms="35417" started-at="2023-01-03T20:49:12Z" finished-at="2023-01-03T20:49:48Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at com.focus.testcases.InventoryReportsTest.checkStockAnalysisByBatchReportFilterOption(InventoryReportsTest.java:322)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkStockAnalysisByBatchReportFilterOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkStockAnalysisByBatchReportFilterOption -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:49:12Z" finished-at="2023-01-03T20:49:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkStockAnalysisByBatchReportFilterOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="217" started-at="2023-01-03T20:49:48Z" finished-at="2023-01-03T20:49:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkStockAnalysisByBatchReportFilterOption status=FAILURE method=InventoryReportsTest.checkStockAnalysisByBatchReportFilterOption()[pri:373, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkStockAnalysisByBatchReportFilterOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T20:49:48Z" finished-at="2023-01-03T20:49:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkStockAnalysisByBatchReportWithStockTypeGoodBatches() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkStockAnalysisByBatchReportWithStockTypeGoodBatches()[pri:374, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkStockAnalysisByBatchReportWithStockTypeGoodBatches" duration-ms="4422" started-at="2023-01-03T20:49:48Z" finished-at="2023-01-03T20:49:52Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkStockAnalysisByBatchReportWithStockTypeGoodBatches]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkStockAnalysisByBatchReportWithStockTypeGoodBatches -->
        <test-method status="PASS" signature="checkStockAnalysisByBatchReportBackTrackOption()[pri:375, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkStockAnalysisByBatchReportBackTrackOption" duration-ms="34071" started-at="2023-01-03T20:49:52Z" finished-at="2023-01-03T20:50:26Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkStockAnalysisByBatchReportBackTrackOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkStockAnalysisByBatchReportBackTrackOption -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:49:52Z" finished-at="2023-01-03T20:49:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkStockAnalysisByBatchReportBackTrackOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:49:52Z" finished-at="2023-01-03T20:49:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkStockAnalysisByBatchReportWithStockTypeGoodBatches status=SUCCESS method=InventoryReportsTest.checkStockAnalysisByBatchReportWithStockTypeGoodBatches()[pri:374, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkStockAnalysisByBatchReportWithStockTypeGoodBatches]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T20:50:26Z" finished-at="2023-01-03T20:50:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkStockAnalysisByBatchReportBackTrackOption status=SUCCESS method=InventoryReportsTest.checkStockAnalysisByBatchReportBackTrackOption()[pri:375, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkStockAnalysisByBatchReportBackTrackOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:50:26Z" finished-at="2023-01-03T20:50:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkStockAnalysisByRmaReports() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkStockAnalysisByRmaReports()[pri:376, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkStockAnalysisByRmaReports" duration-ms="24912" started-at="2023-01-03T20:50:26Z" finished-at="2023-01-03T20:50:51Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkStockAnalysisByRmaReports]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkStockAnalysisByRmaReports -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T20:50:51Z" finished-at="2023-01-03T20:50:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkStockAnalysisByRmaReports status=SUCCESS method=InventoryReportsTest.checkStockAnalysisByRmaReports()[pri:376, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkStockAnalysisByRmaReports]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkStockAnalysisByRmaReportsPrintOption()[pri:377, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkStockAnalysisByRmaReportsPrintOption" duration-ms="5225" started-at="2023-01-03T20:50:51Z" finished-at="2023-01-03T20:50:56Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkStockAnalysisByRmaReportsPrintOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkStockAnalysisByRmaReportsPrintOption -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:50:51Z" finished-at="2023-01-03T20:50:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkStockAnalysisByRmaReportsPrintOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:50:56Z" finished-at="2023-01-03T20:50:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkStockAnalysisByRmaReportsPrintOption status=SUCCESS method=InventoryReportsTest.checkStockAnalysisByRmaReportsPrintOption()[pri:377, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkStockAnalysisByRmaReportsPrintOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T20:50:56Z" finished-at="2023-01-03T20:50:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkStockDetailsByBinsReports() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkStockDetailsByBinsReports()[pri:378, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkStockDetailsByBinsReports" duration-ms="15987" started-at="2023-01-03T20:50:56Z" finished-at="2023-01-03T20:51:12Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkStockDetailsByBinsReports]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkStockDetailsByBinsReports -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:51:12Z" finished-at="2023-01-03T20:51:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkStockDetailsByBinsReports status=SUCCESS method=InventoryReportsTest.checkStockDetailsByBinsReports()[pri:378, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkStockDetailsByBinsReports]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkStockDetailsByBinsReportFilterOption()[pri:379, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkStockDetailsByBinsReportFilterOption" duration-ms="33195" started-at="2023-01-03T20:51:12Z" finished-at="2023-01-03T20:51:46Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkStockDetailsByBinsReportFilterOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkStockDetailsByBinsReportFilterOption -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:51:12Z" finished-at="2023-01-03T20:51:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkStockDetailsByBinsReportFilterOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T20:51:46Z" finished-at="2023-01-03T20:51:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkStockDetailsByBinsReportFilterOption status=SUCCESS method=InventoryReportsTest.checkStockDetailsByBinsReportFilterOption()[pri:379, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkStockDetailsByBinsReportFilterOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkStockDetailsByBinsReportBackTrackOption()[pri:380, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkStockDetailsByBinsReportBackTrackOption" duration-ms="32610" started-at="2023-01-03T20:51:46Z" finished-at="2023-01-03T20:52:18Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkStockDetailsByBinsReportBackTrackOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkStockDetailsByBinsReportBackTrackOption -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:51:46Z" finished-at="2023-01-03T20:51:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkStockDetailsByBinsReportBackTrackOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:52:18Z" finished-at="2023-01-03T20:52:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkStockDetailsByBinsReportBackTrackOption status=SUCCESS method=InventoryReportsTest.checkStockDetailsByBinsReportBackTrackOption()[pri:380, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkStockDetailsByBinsReportBackTrackOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T20:52:18Z" finished-at="2023-01-03T20:52:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkStockBalanaceByBinsReports() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkStockBalanaceByBinsReports()[pri:381, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkStockBalanaceByBinsReports" duration-ms="18771" started-at="2023-01-03T20:52:18Z" finished-at="2023-01-03T20:52:37Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkStockBalanaceByBinsReports]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkStockBalanaceByBinsReports -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:52:37Z" finished-at="2023-01-03T20:52:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkStockBalanaceByBinsReports status=SUCCESS method=InventoryReportsTest.checkStockBalanaceByBinsReports()[pri:381, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkStockBalanaceByBinsReports]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkStockBalanaceByBinsReportFilterOption()[pri:382, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkStockBalanaceByBinsReportFilterOption" duration-ms="31206" started-at="2023-01-03T20:52:37Z" finished-at="2023-01-03T20:53:08Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkStockBalanaceByBinsReportFilterOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkStockBalanaceByBinsReportFilterOption -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:52:37Z" finished-at="2023-01-03T20:52:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkStockBalanaceByBinsReportFilterOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T20:53:08Z" finished-at="2023-01-03T20:53:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkStockBalanaceByBinsReportBackTrackOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:53:08Z" finished-at="2023-01-03T20:53:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkStockBalanaceByBinsReportFilterOption status=SUCCESS method=InventoryReportsTest.checkStockBalanaceByBinsReportFilterOption()[pri:382, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkStockBalanaceByBinsReportFilterOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkStockBalanaceByBinsReportBackTrackOption()[pri:383, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkStockBalanaceByBinsReportBackTrackOption" duration-ms="29838" started-at="2023-01-03T20:53:08Z" finished-at="2023-01-03T20:53:38Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkStockBalanaceByBinsReportBackTrackOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkStockBalanaceByBinsReportBackTrackOption -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:53:38Z" finished-at="2023-01-03T20:53:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkStockBalancesByItemByBinsReports() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkStockBalancesByItemByBinsReports()[pri:384, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkStockBalancesByItemByBinsReports" duration-ms="16887" started-at="2023-01-03T20:53:38Z" finished-at="2023-01-03T20:53:55Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkStockBalancesByItemByBinsReports]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkStockBalancesByItemByBinsReports -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:53:38Z" finished-at="2023-01-03T20:53:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkStockBalanaceByBinsReportBackTrackOption status=SUCCESS method=InventoryReportsTest.checkStockBalanaceByBinsReportBackTrackOption()[pri:383, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkStockBalanaceByBinsReportBackTrackOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:53:55Z" finished-at="2023-01-03T20:53:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkStockBalancesByItemByBinsReports status=SUCCESS method=InventoryReportsTest.checkStockBalancesByItemByBinsReports()[pri:384, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkStockBalancesByItemByBinsReports]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkStockBalancesByItemByBinsReportPrintOption()[pri:385, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkStockBalancesByItemByBinsReportPrintOption" duration-ms="5544" started-at="2023-01-03T20:53:55Z" finished-at="2023-01-03T20:54:00Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkStockBalancesByItemByBinsReportPrintOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkStockBalancesByItemByBinsReportPrintOption -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:53:55Z" finished-at="2023-01-03T20:53:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkStockBalancesByItemByBinsReportPrintOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T20:54:00Z" finished-at="2023-01-03T20:54:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkStockBalancesByItemByBinsReportPrintOption status=SUCCESS method=InventoryReportsTest.checkStockBalancesByItemByBinsReportPrintOption()[pri:385, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkStockBalancesByItemByBinsReportPrintOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:54:01Z" finished-at="2023-01-03T20:54:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkExpiredStockByBinsReports() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkExpiredStockByBinsReports()[pri:386, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkExpiredStockByBinsReports" duration-ms="16228" started-at="2023-01-03T20:54:01Z" finished-at="2023-01-03T20:54:17Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkExpiredStockByBinsReports]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkExpiredStockByBinsReports -->
        <test-method status="PASS" signature="checkExpiredStockByBinsReportCustomizationOption()[pri:387, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkExpiredStockByBinsReportCustomizationOption" duration-ms="16122" started-at="2023-01-03T20:54:17Z" finished-at="2023-01-03T20:54:33Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkExpiredStockByBinsReportCustomizationOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkExpiredStockByBinsReportCustomizationOption -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:54:17Z" finished-at="2023-01-03T20:54:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkExpiredStockByBinsReportCustomizationOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:54:17Z" finished-at="2023-01-03T20:54:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkExpiredStockByBinsReports status=SUCCESS method=InventoryReportsTest.checkExpiredStockByBinsReports()[pri:386, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkExpiredStockByBinsReports]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T20:54:33Z" finished-at="2023-01-03T20:54:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkExpiredStockByBinsReportCustomizationOption status=SUCCESS method=InventoryReportsTest.checkExpiredStockByBinsReportCustomizationOption()[pri:387, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkExpiredStockByBinsReportCustomizationOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:54:33Z" finished-at="2023-01-03T20:54:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkStockBalanceByWarehouseReports() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkStockBalanceByWarehouseReports()[pri:388, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkStockBalanceByWarehouseReports" duration-ms="14626" started-at="2023-01-03T20:54:33Z" finished-at="2023-01-03T20:54:47Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkStockBalanceByWarehouseReports]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkStockBalanceByWarehouseReports -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:54:47Z" finished-at="2023-01-03T20:54:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkStockBalanceByWarehouseReports status=SUCCESS method=InventoryReportsTest.checkStockBalanceByWarehouseReports()[pri:388, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkStockBalanceByWarehouseReports]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:54:47Z" finished-at="2023-01-03T20:54:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkStockBalanceByWarehouseReportIncludeServiceTypeItemOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkStockBalanceByWarehouseReportIncludeServiceTypeItemOption()[pri:389, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkStockBalanceByWarehouseReportIncludeServiceTypeItemOption" duration-ms="3702" started-at="2023-01-03T20:54:47Z" finished-at="2023-01-03T20:54:51Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkStockBalanceByWarehouseReportIncludeServiceTypeItemOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkStockBalanceByWarehouseReportIncludeServiceTypeItemOption -->
        <test-method status="FAIL" signature="checkStockBalanceByWarehouseReportBackTrackOption()[pri:390, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkStockBalanceByWarehouseReportBackTrackOption" duration-ms="153593" started-at="2023-01-03T20:54:51Z" finished-at="2023-01-03T20:57:25Z">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.xpath: //div[@id='dvReportRenderBacktracking']/div[2]/div[1]/div[2]/table' (tried for 40 second(s) with 5000 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.xpath: //div[@id='dvReportRenderBacktracking']/div[2]/div[1]/div[2]/table' (tried for 40 second(s) with 5000 milliseconds interval)
	at org.openqa.selenium.support.ui.FluentWait.timeoutException(FluentWait.java:303)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:271)
	at com.focus.Pages.InventoryReportsPage.checkStockBalanceByWarehouseReportBackTrackOption(InventoryReportsPage.java:27236)
	at com.focus.testcases.InventoryReportsTest.checkStockBalanceByWarehouseReportBackTrackOption(InventoryReportsTest.java:473)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//div[@id='dvReportRenderBacktracking']/div[2]/div[1]/div[2]/table"}
  (Session info: chrome=108.0.5359.125)
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z'
System info: host: 'FOCUS-QA-10', ip: '192.168.4.206', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\Rakesh\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:59756}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 56bfff794ecbcecb25f8ad2526ab4f26
*** Element info: {Using=xpath, value=//div[@id='dvReportRenderBacktracking']/div[2]/div[1]/div[2]/table}
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
	at com.sun.proxy.$Proxy12.isDisplayed(Unknown Source)
	at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:315)
	at org.openqa.selenium.support.ui.ExpectedConditions.access$100(ExpectedConditions.java:44)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:301)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:298)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:248)
	... 26 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkStockBalanceByWarehouseReportBackTrackOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkStockBalanceByWarehouseReportBackTrackOption -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:54:51Z" finished-at="2023-01-03T20:54:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkStockBalanceByWarehouseReportBackTrackOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:54:51Z" finished-at="2023-01-03T20:54:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkStockBalanceByWarehouseReportIncludeServiceTypeItemOption status=SUCCESS method=InventoryReportsTest.checkStockBalanceByWarehouseReportIncludeServiceTypeItemOption()[pri:389, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkStockBalanceByWarehouseReportIncludeServiceTypeItemOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="107" started-at="2023-01-03T20:57:25Z" finished-at="2023-01-03T20:57:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkStockBalanceByWarehouseReportBackTrackOption status=FAILURE method=InventoryReportsTest.checkStockBalanceByWarehouseReportBackTrackOption()[pri:390, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkStockBalanceByWarehouseReportBackTrackOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkStockAgeingAnalysisReports()[pri:391, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkStockAgeingAnalysisReports" duration-ms="22732" started-at="2023-01-03T20:57:25Z" finished-at="2023-01-03T20:57:48Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkStockAgeingAnalysisReports]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkStockAgeingAnalysisReports -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:57:25Z" finished-at="2023-01-03T20:57:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkStockAgeingAnalysisReports() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:57:48Z" finished-at="2023-01-03T20:57:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkStockAgeingAnalysisReports status=SUCCESS method=InventoryReportsTest.checkStockAgeingAnalysisReports()[pri:391, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkStockAgeingAnalysisReports]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:57:48Z" finished-at="2023-01-03T20:57:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkStockAgeingAnalysisReportFilterOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkStockAgeingAnalysisReportFilterOption()[pri:392, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkStockAgeingAnalysisReportFilterOption" duration-ms="35940" started-at="2023-01-03T20:57:48Z" finished-at="2023-01-03T20:58:24Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkStockAgeingAnalysisReportFilterOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkStockAgeingAnalysisReportFilterOption -->
        <test-method status="PASS" signature="checkStockAgeingAnalysisReportWithOptions()[pri:393, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkStockAgeingAnalysisReportWithOptions" duration-ms="7692" started-at="2023-01-03T20:58:24Z" finished-at="2023-01-03T20:58:31Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkStockAgeingAnalysisReportWithOptions]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkStockAgeingAnalysisReportWithOptions -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:58:24Z" finished-at="2023-01-03T20:58:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkStockAgeingAnalysisReportWithOptions() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:58:24Z" finished-at="2023-01-03T20:58:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkStockAgeingAnalysisReportFilterOption status=SUCCESS method=InventoryReportsTest.checkStockAgeingAnalysisReportFilterOption()[pri:392, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkStockAgeingAnalysisReportFilterOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:58:31Z" finished-at="2023-01-03T20:58:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkStockAgeingAnalysisReportWithBackTrackOptions() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T20:58:31Z" finished-at="2023-01-03T20:58:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkStockAgeingAnalysisReportWithOptions status=SUCCESS method=InventoryReportsTest.checkStockAgeingAnalysisReportWithOptions()[pri:393, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkStockAgeingAnalysisReportWithOptions]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="FAIL" signature="checkStockAgeingAnalysisReportWithBackTrackOptions()[pri:394, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkStockAgeingAnalysisReportWithBackTrackOptions" duration-ms="93500" started-at="2023-01-03T20:58:31Z" finished-at="2023-01-03T21:00:05Z">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.xpath: //div[@id='dvReportRenderBacktracking']/div[1]/div[1]/div[2]/table' (tried for 40 second(s) with 5000 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.xpath: //div[@id='dvReportRenderBacktracking']/div[1]/div[1]/div[2]/table' (tried for 40 second(s) with 5000 milliseconds interval)
	at org.openqa.selenium.support.ui.FluentWait.timeoutException(FluentWait.java:303)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:271)
	at com.focus.Pages.InventoryReportsPage.checkStockAgeingAnalysisReportWithBackTrackOptions(InventoryReportsPage.java:28026)
	at com.focus.testcases.InventoryReportsTest.checkStockAgeingAnalysisReportWithBackTrackOptions(InventoryReportsTest.java:506)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//div[@id='dvReportRenderBacktracking']/div[1]/div[1]/div[2]/table"}
  (Session info: chrome=108.0.5359.125)
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z'
System info: host: 'FOCUS-QA-10', ip: '192.168.4.206', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\Rakesh\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:59756}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 56bfff794ecbcecb25f8ad2526ab4f26
*** Element info: {Using=xpath, value=//div[@id='dvReportRenderBacktracking']/div[1]/div[1]/div[2]/table}
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
	at com.sun.proxy.$Proxy12.isDisplayed(Unknown Source)
	at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:315)
	at org.openqa.selenium.support.ui.ExpectedConditions.access$100(ExpectedConditions.java:44)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:301)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:298)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:248)
	... 26 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkStockAgeingAnalysisReportWithBackTrackOptions]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkStockAgeingAnalysisReportWithBackTrackOptions -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="132" started-at="2023-01-03T21:00:05Z" finished-at="2023-01-03T21:00:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkStockAgeingAnalysisReportWithBackTrackOptions status=FAILURE method=InventoryReportsTest.checkStockAgeingAnalysisReportWithBackTrackOptions()[pri:394, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkStockAgeingAnalysisReportWithBackTrackOptions]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:00:05Z" finished-at="2023-01-03T21:00:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkAgeingAnalysisByBatchReports() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkAgeingAnalysisByBatchReports()[pri:395, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkAgeingAnalysisByBatchReports" duration-ms="18335" started-at="2023-01-03T21:00:05Z" finished-at="2023-01-03T21:00:23Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkAgeingAnalysisByBatchReports]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkAgeingAnalysisByBatchReports -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:00:23Z" finished-at="2023-01-03T21:00:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkAgeingAnalysisByBatchReports status=SUCCESS method=InventoryReportsTest.checkAgeingAnalysisByBatchReports()[pri:395, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkAgeingAnalysisByBatchReports]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:00:23Z" finished-at="2023-01-03T21:00:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkStockAnalysisByBatchReportPrintOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkStockAnalysisByBatchReportPrintOption()[pri:396, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkStockAnalysisByBatchReportPrintOption" duration-ms="5363" started-at="2023-01-03T21:00:23Z" finished-at="2023-01-03T21:00:29Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkStockAnalysisByBatchReportPrintOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkStockAnalysisByBatchReportPrintOption -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T21:00:29Z" finished-at="2023-01-03T21:00:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkStockAnalysisByBatchReportPrintOption status=SUCCESS method=InventoryReportsTest.checkStockAnalysisByBatchReportPrintOption()[pri:396, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkStockAnalysisByBatchReportPrintOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkAgeingAnalysisByBatchReportWithWarehouseAndIgnoreInternalTransferForAgeingOptions()[pri:397, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkAgeingAnalysisByBatchReportWithWarehouseAndIgnoreInternalTransferForAgeingOptions" duration-ms="8531" started-at="2023-01-03T21:00:29Z" finished-at="2023-01-03T21:00:37Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkAgeingAnalysisByBatchReportWithWarehouseAndIgnoreInternalTransferForAgeingOptions]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkAgeingAnalysisByBatchReportWithWarehouseAndIgnoreInternalTransferForAgeingOptions -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:00:29Z" finished-at="2023-01-03T21:00:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkAgeingAnalysisByBatchReportWithWarehouseAndIgnoreInternalTransferForAgeingOptions() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:00:37Z" finished-at="2023-01-03T21:00:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkAgeingAnalysisByBatchReportWithWarehouseAndIgnoreInternalTransferForAgeingOptions status=SUCCESS method=InventoryReportsTest.checkAgeingAnalysisByBatchReportWithWarehouseAndIgnoreInternalTransferForAgeingOptions()[pri:397, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkAgeingAnalysisByBatchReportWithWarehouseAndIgnoreInternalTransferForAgeingOptions]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:00:37Z" finished-at="2023-01-03T21:00:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkAgeingAnalysisByBatchReportBackTrackOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkAgeingAnalysisByBatchReportBackTrackOption()[pri:398, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkAgeingAnalysisByBatchReportBackTrackOption" duration-ms="48427" started-at="2023-01-03T21:00:37Z" finished-at="2023-01-03T21:01:26Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkAgeingAnalysisByBatchReportBackTrackOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkAgeingAnalysisByBatchReportBackTrackOption -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T21:01:26Z" finished-at="2023-01-03T21:01:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkAgeingAnalysisByBatchReportBackTrackOption status=SUCCESS method=InventoryReportsTest.checkAgeingAnalysisByBatchReportBackTrackOption()[pri:398, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkAgeingAnalysisByBatchReportBackTrackOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:01:26Z" finished-at="2023-01-03T21:01:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkAgeingAnalysisByRMAReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkAgeingAnalysisByRMAReport()[pri:399, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkAgeingAnalysisByRMAReport" duration-ms="160832" started-at="2023-01-03T21:01:26Z" finished-at="2023-01-03T21:04:06Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkAgeingAnalysisByRMAReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkAgeingAnalysisByRMAReport -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:04:06Z" finished-at="2023-01-03T21:04:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkAgeingAnalysisByRMAReport status=SUCCESS method=InventoryReportsTest.checkAgeingAnalysisByRMAReport()[pri:399, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkAgeingAnalysisByRMAReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkAgeingAnalysisByRMAReportWithFilterOption()[pri:400, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkAgeingAnalysisByRMAReportWithFilterOption" duration-ms="36105" started-at="2023-01-03T21:04:06Z" finished-at="2023-01-03T21:04:42Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkAgeingAnalysisByRMAReportWithFilterOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkAgeingAnalysisByRMAReportWithFilterOption -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:04:06Z" finished-at="2023-01-03T21:04:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkAgeingAnalysisByRMAReportWithFilterOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T21:04:42Z" finished-at="2023-01-03T21:04:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkAgeingAnalysisByRMAReportWithWarehouseAndIgnoreInternalTransferForAgeingOptions() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:04:42Z" finished-at="2023-01-03T21:04:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkAgeingAnalysisByRMAReportWithFilterOption status=SUCCESS method=InventoryReportsTest.checkAgeingAnalysisByRMAReportWithFilterOption()[pri:400, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkAgeingAnalysisByRMAReportWithFilterOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkAgeingAnalysisByRMAReportWithWarehouseAndIgnoreInternalTransferForAgeingOptions()[pri:401, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkAgeingAnalysisByRMAReportWithWarehouseAndIgnoreInternalTransferForAgeingOptions" duration-ms="4552" started-at="2023-01-03T21:04:42Z" finished-at="2023-01-03T21:04:47Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkAgeingAnalysisByRMAReportWithWarehouseAndIgnoreInternalTransferForAgeingOptions]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkAgeingAnalysisByRMAReportWithWarehouseAndIgnoreInternalTransferForAgeingOptions -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:04:47Z" finished-at="2023-01-03T21:04:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkAgeingAnalysisByRMAReportWithWarehouseAndIgnoreInternalTransferForAgeingOptions status=SUCCESS method=InventoryReportsTest.checkAgeingAnalysisByRMAReportWithWarehouseAndIgnoreInternalTransferForAgeingOptions()[pri:401, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkAgeingAnalysisByRMAReportWithWarehouseAndIgnoreInternalTransferForAgeingOptions]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:04:47Z" finished-at="2023-01-03T21:04:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkAgeingAnalysisByRMAReportBackTrackOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkAgeingAnalysisByRMAReportBackTrackOption()[pri:402, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkAgeingAnalysisByRMAReportBackTrackOption" duration-ms="76763" started-at="2023-01-03T21:04:47Z" finished-at="2023-01-03T21:06:04Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkAgeingAnalysisByRMAReportBackTrackOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkAgeingAnalysisByRMAReportBackTrackOption -->
        <test-method status="PASS" signature="checkAgeingStockByBinsReports()[pri:403, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkAgeingStockByBinsReports" duration-ms="19334" started-at="2023-01-03T21:06:04Z" finished-at="2023-01-03T21:06:23Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkAgeingStockByBinsReports]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkAgeingStockByBinsReports -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:06:04Z" finished-at="2023-01-03T21:06:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkAgeingStockByBinsReports() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:06:04Z" finished-at="2023-01-03T21:06:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkAgeingAnalysisByRMAReportBackTrackOption status=SUCCESS method=InventoryReportsTest.checkAgeingAnalysisByRMAReportBackTrackOption()[pri:402, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkAgeingAnalysisByRMAReportBackTrackOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:06:23Z" finished-at="2023-01-03T21:06:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkStockAnalysisByBinReportWithFilterOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:06:23Z" finished-at="2023-01-03T21:06:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkAgeingStockByBinsReports status=SUCCESS method=InventoryReportsTest.checkAgeingStockByBinsReports()[pri:403, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkAgeingStockByBinsReports]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkStockAnalysisByBinReportWithFilterOption()[pri:404, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkStockAnalysisByBinReportWithFilterOption" duration-ms="34063" started-at="2023-01-03T21:06:23Z" finished-at="2023-01-03T21:06:57Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkStockAnalysisByBinReportWithFilterOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkStockAnalysisByBinReportWithFilterOption -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:06:57Z" finished-at="2023-01-03T21:06:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkStockAnalysisByBinReportWithFilterOption status=SUCCESS method=InventoryReportsTest.checkStockAnalysisByBinReportWithFilterOption()[pri:404, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkStockAnalysisByBinReportWithFilterOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkAgeingAnalysisByBinReportWithWarehouseAndIgnoreInternalTransferForAgeingOptions()[pri:405, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkAgeingAnalysisByBinReportWithWarehouseAndIgnoreInternalTransferForAgeingOptions" duration-ms="6870" started-at="2023-01-03T21:06:57Z" finished-at="2023-01-03T21:07:04Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkAgeingAnalysisByBinReportWithWarehouseAndIgnoreInternalTransferForAgeingOptions]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkAgeingAnalysisByBinReportWithWarehouseAndIgnoreInternalTransferForAgeingOptions -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:06:57Z" finished-at="2023-01-03T21:06:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkAgeingAnalysisByBinReportWithWarehouseAndIgnoreInternalTransferForAgeingOptions() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T21:07:04Z" finished-at="2023-01-03T21:07:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkAgeingAnalysisByBinReportWithWarehouseAndIgnoreInternalTransferForAgeingOptions status=SUCCESS method=InventoryReportsTest.checkAgeingAnalysisByBinReportWithWarehouseAndIgnoreInternalTransferForAgeingOptions()[pri:405, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkAgeingAnalysisByBinReportWithWarehouseAndIgnoreInternalTransferForAgeingOptions]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:07:04Z" finished-at="2023-01-03T21:07:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkAgeingAnalysisByBinReportBackTrackOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="FAIL" signature="checkAgeingAnalysisByBinReportBackTrackOption()[pri:406, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkAgeingAnalysisByBinReportBackTrackOption" duration-ms="154136" started-at="2023-01-03T21:07:04Z" finished-at="2023-01-03T21:09:38Z">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.xpath: //div[@id='dvReportRenderBacktracking']/div[2]/div[1]/div[2]/table' (tried for 40 second(s) with 5000 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.xpath: //div[@id='dvReportRenderBacktracking']/div[2]/div[1]/div[2]/table' (tried for 40 second(s) with 5000 milliseconds interval)
	at org.openqa.selenium.support.ui.FluentWait.timeoutException(FluentWait.java:303)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:271)
	at com.focus.Pages.InventoryReportsPage.checkAgeingAnalysisByBinReportBackTrackOption(InventoryReportsPage.java:30258)
	at com.focus.testcases.InventoryReportsTest.checkAgeingAnalysisByBinReportBackTrackOption(InventoryReportsTest.java:609)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//div[@id='dvReportRenderBacktracking']/div[2]/div[1]/div[2]/table"}
  (Session info: chrome=108.0.5359.125)
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z'
System info: host: 'FOCUS-QA-10', ip: '192.168.4.206', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\Rakesh\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:59756}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 56bfff794ecbcecb25f8ad2526ab4f26
*** Element info: {Using=xpath, value=//div[@id='dvReportRenderBacktracking']/div[2]/div[1]/div[2]/table}
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
	at com.sun.proxy.$Proxy12.isDisplayed(Unknown Source)
	at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:315)
	at org.openqa.selenium.support.ui.ExpectedConditions.access$100(ExpectedConditions.java:44)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:301)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:298)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:248)
	... 26 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkAgeingAnalysisByBinReportBackTrackOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkAgeingAnalysisByBinReportBackTrackOption -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="120" started-at="2023-01-03T21:09:38Z" finished-at="2023-01-03T21:09:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkAgeingAnalysisByBinReportBackTrackOption status=FAILURE method=InventoryReportsTest.checkAgeingAnalysisByBinReportBackTrackOption()[pri:406, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkAgeingAnalysisByBinReportBackTrackOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkAgeingByItemByBinsReports()[pri:407, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkAgeingByItemByBinsReports" duration-ms="18439" started-at="2023-01-03T21:09:38Z" finished-at="2023-01-03T21:09:57Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkAgeingByItemByBinsReports]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkAgeingByItemByBinsReports -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:09:38Z" finished-at="2023-01-03T21:09:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkAgeingByItemByBinsReports() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:09:57Z" finished-at="2023-01-03T21:09:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkStockByItemByBinReportWithFilterOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:09:57Z" finished-at="2023-01-03T21:09:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkAgeingByItemByBinsReports status=SUCCESS method=InventoryReportsTest.checkAgeingByItemByBinsReports()[pri:407, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkAgeingByItemByBinsReports]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkStockByItemByBinReportWithFilterOption()[pri:408, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkStockByItemByBinReportWithFilterOption" duration-ms="34102" started-at="2023-01-03T21:09:57Z" finished-at="2023-01-03T21:10:31Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkStockByItemByBinReportWithFilterOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkStockByItemByBinReportWithFilterOption -->
        <test-method status="PASS" signature="checkAgeingByItemByBinReportWithWarehouseAndIgnoreInternalTransferForAgeingOptions()[pri:409, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkAgeingByItemByBinReportWithWarehouseAndIgnoreInternalTransferForAgeingOptions" duration-ms="5901" started-at="2023-01-03T21:10:31Z" finished-at="2023-01-03T21:10:37Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkAgeingByItemByBinReportWithWarehouseAndIgnoreInternalTransferForAgeingOptions]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkAgeingByItemByBinReportWithWarehouseAndIgnoreInternalTransferForAgeingOptions -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:10:31Z" finished-at="2023-01-03T21:10:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkAgeingByItemByBinReportWithWarehouseAndIgnoreInternalTransferForAgeingOptions() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:10:31Z" finished-at="2023-01-03T21:10:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkStockByItemByBinReportWithFilterOption status=SUCCESS method=InventoryReportsTest.checkStockByItemByBinReportWithFilterOption()[pri:408, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkStockByItemByBinReportWithFilterOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:10:37Z" finished-at="2023-01-03T21:10:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkAgeingByItemByBinReportBackTrackOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkAgeingByItemByBinReportBackTrackOption()[pri:410, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkAgeingByItemByBinReportBackTrackOption" duration-ms="48730" started-at="2023-01-03T21:10:37Z" finished-at="2023-01-03T21:11:26Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkAgeingByItemByBinReportBackTrackOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkAgeingByItemByBinReportBackTrackOption -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:10:37Z" finished-at="2023-01-03T21:10:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkAgeingByItemByBinReportWithWarehouseAndIgnoreInternalTransferForAgeingOptions status=SUCCESS method=InventoryReportsTest.checkAgeingByItemByBinReportWithWarehouseAndIgnoreInternalTransferForAgeingOptions()[pri:409, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkAgeingByItemByBinReportWithWarehouseAndIgnoreInternalTransferForAgeingOptions]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T21:11:26Z" finished-at="2023-01-03T21:11:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkAgeingByItemByBinReportBackTrackOption status=SUCCESS method=InventoryReportsTest.checkAgeingByItemByBinReportBackTrackOption()[pri:410, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkAgeingByItemByBinReportBackTrackOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:11:26Z" finished-at="2023-01-03T21:11:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkFastMovingItemsReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkFastMovingItemsReport()[pri:413, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkFastMovingItemsReport" duration-ms="14253" started-at="2023-01-03T21:11:26Z" finished-at="2023-01-03T21:11:40Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkFastMovingItemsReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkFastMovingItemsReport -->
        <test-method status="PASS" signature="checkFastMovingItemsReportWithFilterOption()[pri:414, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkFastMovingItemsReportWithFilterOption" duration-ms="37253" started-at="2023-01-03T21:11:40Z" finished-at="2023-01-03T21:12:17Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkFastMovingItemsReportWithFilterOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkFastMovingItemsReportWithFilterOption -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:11:40Z" finished-at="2023-01-03T21:11:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkFastMovingItemsReport status=SUCCESS method=InventoryReportsTest.checkFastMovingItemsReport()[pri:413, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkFastMovingItemsReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:11:40Z" finished-at="2023-01-03T21:11:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkFastMovingItemsReportWithFilterOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T21:12:17Z" finished-at="2023-01-03T21:12:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkFastMovingItemsReportWithFilterOption status=SUCCESS method=InventoryReportsTest.checkFastMovingItemsReportWithFilterOption()[pri:414, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkFastMovingItemsReportWithFilterOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkFastMovingItemsReportBackTrackOption()[pri:415, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkFastMovingItemsReportBackTrackOption" duration-ms="63750" started-at="2023-01-03T21:12:17Z" finished-at="2023-01-03T21:13:21Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkFastMovingItemsReportBackTrackOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkFastMovingItemsReportBackTrackOption -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:12:17Z" finished-at="2023-01-03T21:12:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkFastMovingItemsReportBackTrackOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:13:21Z" finished-at="2023-01-03T21:13:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkFastMovingItemsReportBackTrackOption status=SUCCESS method=InventoryReportsTest.checkFastMovingItemsReportBackTrackOption()[pri:415, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkFastMovingItemsReportBackTrackOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T21:13:21Z" finished-at="2023-01-03T21:13:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkSlowMovingItemsReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkSlowMovingItemsReport()[pri:416, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkSlowMovingItemsReport" duration-ms="12199" started-at="2023-01-03T21:13:21Z" finished-at="2023-01-03T21:13:33Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkSlowMovingItemsReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkSlowMovingItemsReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:13:33Z" finished-at="2023-01-03T21:13:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkSlowMovingItemsReportWithFilterOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:13:33Z" finished-at="2023-01-03T21:13:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkSlowMovingItemsReport status=SUCCESS method=InventoryReportsTest.checkSlowMovingItemsReport()[pri:416, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkSlowMovingItemsReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkSlowMovingItemsReportWithFilterOption()[pri:417, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkSlowMovingItemsReportWithFilterOption" duration-ms="34363" started-at="2023-01-03T21:13:33Z" finished-at="2023-01-03T21:14:07Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkSlowMovingItemsReportWithFilterOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkSlowMovingItemsReportWithFilterOption -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:14:07Z" finished-at="2023-01-03T21:14:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkSlowMovingItemsReportBackTrackOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkSlowMovingItemsReportBackTrackOption()[pri:418, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkSlowMovingItemsReportBackTrackOption" duration-ms="31422" started-at="2023-01-03T21:14:07Z" finished-at="2023-01-03T21:14:39Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkSlowMovingItemsReportBackTrackOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkSlowMovingItemsReportBackTrackOption -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:14:07Z" finished-at="2023-01-03T21:14:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkSlowMovingItemsReportWithFilterOption status=SUCCESS method=InventoryReportsTest.checkSlowMovingItemsReportWithFilterOption()[pri:417, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkSlowMovingItemsReportWithFilterOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:14:39Z" finished-at="2023-01-03T21:14:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkPeakAndLowBalancesReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkPeakAndLowBalancesReport()[pri:419, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkPeakAndLowBalancesReport" duration-ms="10947" started-at="2023-01-03T21:14:39Z" finished-at="2023-01-03T21:14:50Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkPeakAndLowBalancesReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkPeakAndLowBalancesReport -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:14:39Z" finished-at="2023-01-03T21:14:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkSlowMovingItemsReportBackTrackOption status=SUCCESS method=InventoryReportsTest.checkSlowMovingItemsReportBackTrackOption()[pri:418, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkSlowMovingItemsReportBackTrackOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:14:50Z" finished-at="2023-01-03T21:14:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkPeakAndLowBalancesReport status=SUCCESS method=InventoryReportsTest.checkPeakAndLowBalancesReport()[pri:419, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkPeakAndLowBalancesReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="FAIL" signature="checkPeakAndLowBalancesReportWithFilterOption()[pri:420, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkPeakAndLowBalancesReportWithFilterOption" duration-ms="32135" started-at="2023-01-03T21:14:50Z" finished-at="2023-01-03T21:15:22Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at com.focus.testcases.InventoryReportsTest.checkPeakAndLowBalancesReportWithFilterOption(InventoryReportsTest.java:732)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkPeakAndLowBalancesReportWithFilterOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkPeakAndLowBalancesReportWithFilterOption -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:14:50Z" finished-at="2023-01-03T21:14:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkPeakAndLowBalancesReportWithFilterOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="105" started-at="2023-01-03T21:15:22Z" finished-at="2023-01-03T21:15:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkPeakAndLowBalancesReportWithFilterOption status=FAILURE method=InventoryReportsTest.checkPeakAndLowBalancesReportWithFilterOption()[pri:420, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkPeakAndLowBalancesReportWithFilterOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:15:22Z" finished-at="2023-01-03T21:15:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkPeakAndLowBalancesReportBackTrackOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkPeakAndLowBalancesReportBackTrackOption()[pri:421, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkPeakAndLowBalancesReportBackTrackOption" duration-ms="31068" started-at="2023-01-03T21:15:22Z" finished-at="2023-01-03T21:15:53Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkPeakAndLowBalancesReportBackTrackOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkPeakAndLowBalancesReportBackTrackOption -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:15:53Z" finished-at="2023-01-03T21:15:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkPeakAndLowBalancesReportBackTrackOption status=SUCCESS method=InventoryReportsTest.checkPeakAndLowBalancesReportBackTrackOption()[pri:421, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkPeakAndLowBalancesReportBackTrackOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkBestSellingItemReport()[pri:422, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkBestSellingItemReport" duration-ms="10122" started-at="2023-01-03T21:15:53Z" finished-at="2023-01-03T21:16:03Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkBestSellingItemReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkBestSellingItemReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:15:53Z" finished-at="2023-01-03T21:15:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkBestSellingItemReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:16:03Z" finished-at="2023-01-03T21:16:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkBestSellingItemReport status=SUCCESS method=InventoryReportsTest.checkBestSellingItemReport()[pri:422, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkBestSellingItemReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T21:16:03Z" finished-at="2023-01-03T21:16:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkBestSellingItemReportWithSortingOnAndIncludeAllVouchersChkBox() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkBestSellingItemReportWithSortingOnAndIncludeAllVouchersChkBox()[pri:423, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkBestSellingItemReportWithSortingOnAndIncludeAllVouchersChkBox" duration-ms="3648" started-at="2023-01-03T21:16:03Z" finished-at="2023-01-03T21:16:07Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkBestSellingItemReportWithSortingOnAndIncludeAllVouchersChkBox]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkBestSellingItemReportWithSortingOnAndIncludeAllVouchersChkBox -->
        <test-method status="PASS" signature="checkBestSellingItemReportBackTrackOption()[pri:424, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkBestSellingItemReportBackTrackOption" duration-ms="31952" started-at="2023-01-03T21:16:07Z" finished-at="2023-01-03T21:16:39Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkBestSellingItemReportBackTrackOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkBestSellingItemReportBackTrackOption -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:16:07Z" finished-at="2023-01-03T21:16:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkBestSellingItemReportBackTrackOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:16:07Z" finished-at="2023-01-03T21:16:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkBestSellingItemReportWithSortingOnAndIncludeAllVouchersChkBox status=SUCCESS method=InventoryReportsTest.checkBestSellingItemReportWithSortingOnAndIncludeAllVouchersChkBox()[pri:423, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkBestSellingItemReportWithSortingOnAndIncludeAllVouchersChkBox]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:16:39Z" finished-at="2023-01-03T21:16:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkStockTransferRegisterReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:16:39Z" finished-at="2023-01-03T21:16:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkBestSellingItemReportBackTrackOption status=SUCCESS method=InventoryReportsTest.checkBestSellingItemReportBackTrackOption()[pri:424, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkBestSellingItemReportBackTrackOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkStockTransferRegisterReport()[pri:425, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkStockTransferRegisterReport" duration-ms="13598" started-at="2023-01-03T21:16:39Z" finished-at="2023-01-03T21:16:52Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkStockTransferRegisterReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkStockTransferRegisterReport -->
        <test-method status="PASS" signature="checkStockTransferRegisterReportPrintOption()[pri:426, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkStockTransferRegisterReportPrintOption" duration-ms="5400" started-at="2023-01-03T21:16:52Z" finished-at="2023-01-03T21:16:58Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkStockTransferRegisterReportPrintOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkStockTransferRegisterReportPrintOption -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:16:52Z" finished-at="2023-01-03T21:16:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkStockTransferRegisterReport status=SUCCESS method=InventoryReportsTest.checkStockTransferRegisterReport()[pri:425, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkStockTransferRegisterReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:16:52Z" finished-at="2023-01-03T21:16:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkStockTransferRegisterReportPrintOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:16:58Z" finished-at="2023-01-03T21:16:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkStockTransferRegisterReportPrintOption status=SUCCESS method=InventoryReportsTest.checkStockTransferRegisterReportPrintOption()[pri:426, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkStockTransferRegisterReportPrintOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkStockTransferRegisterReportWithFromAndToWarehouseAndDetailsOptions()[pri:427, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkStockTransferRegisterReportWithFromAndToWarehouseAndDetailsOptions" duration-ms="9857" started-at="2023-01-03T21:16:58Z" finished-at="2023-01-03T21:17:08Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkStockTransferRegisterReportWithFromAndToWarehouseAndDetailsOptions]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkStockTransferRegisterReportWithFromAndToWarehouseAndDetailsOptions -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:16:58Z" finished-at="2023-01-03T21:16:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkStockTransferRegisterReportWithFromAndToWarehouseAndDetailsOptions() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T21:17:08Z" finished-at="2023-01-03T21:17:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkStockTransferRegisterReportWithFromAndToWarehouseAndDetailsOptions status=SUCCESS method=InventoryReportsTest.checkStockTransferRegisterReportWithFromAndToWarehouseAndDetailsOptions()[pri:427, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkStockTransferRegisterReportWithFromAndToWarehouseAndDetailsOptions]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:17:08Z" finished-at="2023-01-03T21:17:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkStockTransferRegisterReportBackTrackOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkStockTransferRegisterReportBackTrackOption()[pri:428, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkStockTransferRegisterReportBackTrackOption" duration-ms="27646" started-at="2023-01-03T21:17:08Z" finished-at="2023-01-03T21:17:35Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkStockTransferRegisterReportBackTrackOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkStockTransferRegisterReportBackTrackOption -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T21:17:35Z" finished-at="2023-01-03T21:17:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkStockTransferRegisterReportBackTrackOption status=SUCCESS method=InventoryReportsTest.checkStockTransferRegisterReportBackTrackOption()[pri:428, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkStockTransferRegisterReportBackTrackOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:17:35Z" finished-at="2023-01-03T21:17:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkStockReservationRegisterReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="FAIL" signature="checkStockReservationRegisterReport()[pri:429, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkStockReservationRegisterReport" duration-ms="11501" started-at="2023-01-03T21:17:35Z" finished-at="2023-01-03T21:17:47Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at com.focus.testcases.InventoryReportsTest.checkStockReservationRegisterReport(InventoryReportsTest.java:809)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkStockReservationRegisterReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkStockReservationRegisterReport -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="108" started-at="2023-01-03T21:17:47Z" finished-at="2023-01-03T21:17:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkStockReservationRegisterReport status=FAILURE method=InventoryReportsTest.checkStockReservationRegisterReport()[pri:429, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkStockReservationRegisterReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkStockReservationRegisterReportWithFilterOption()[pri:430, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkStockReservationRegisterReportWithFilterOption" duration-ms="36268" started-at="2023-01-03T21:17:47Z" finished-at="2023-01-03T21:18:23Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkStockReservationRegisterReportWithFilterOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkStockReservationRegisterReportWithFilterOption -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:17:47Z" finished-at="2023-01-03T21:17:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkStockReservationRegisterReportWithFilterOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkStockReservationRegisterReportBackTrackOption()[pri:431, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkStockReservationRegisterReportBackTrackOption" duration-ms="18207" started-at="2023-01-03T21:18:23Z" finished-at="2023-01-03T21:18:41Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkStockReservationRegisterReportBackTrackOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkStockReservationRegisterReportBackTrackOption -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:18:23Z" finished-at="2023-01-03T21:18:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkStockReservationRegisterReportWithFilterOption status=SUCCESS method=InventoryReportsTest.checkStockReservationRegisterReportWithFilterOption()[pri:430, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkStockReservationRegisterReportWithFilterOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:18:23Z" finished-at="2023-01-03T21:18:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkStockReservationRegisterReportBackTrackOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T21:18:41Z" finished-at="2023-01-03T21:18:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkStockReservationRegisterReportBackTrackOption status=SUCCESS method=InventoryReportsTest.checkStockReservationRegisterReportBackTrackOption()[pri:431, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkStockReservationRegisterReportBackTrackOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:18:41Z" finished-at="2023-01-03T21:18:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkTransactionTypeWiseStockReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkTransactionTypeWiseStockReport()[pri:432, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkTransactionTypeWiseStockReport" duration-ms="17540" started-at="2023-01-03T21:18:41Z" finished-at="2023-01-03T21:18:59Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkTransactionTypeWiseStockReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTransactionTypeWiseStockReport -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T21:18:59Z" finished-at="2023-01-03T21:18:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTransactionTypeWiseStockReport status=SUCCESS method=InventoryReportsTest.checkTransactionTypeWiseStockReport()[pri:432, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkTransactionTypeWiseStockReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:18:59Z" finished-at="2023-01-03T21:18:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkTransactionTypeWiseStockReportWithFilterOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkTransactionTypeWiseStockReportWithFilterOption()[pri:433, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkTransactionTypeWiseStockReportWithFilterOption" duration-ms="39256" started-at="2023-01-03T21:18:59Z" finished-at="2023-01-03T21:19:38Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkTransactionTypeWiseStockReportWithFilterOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTransactionTypeWiseStockReportWithFilterOption -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T21:19:38Z" finished-at="2023-01-03T21:19:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTransactionTypeWiseStockReportWithFilterOption status=SUCCESS method=InventoryReportsTest.checkTransactionTypeWiseStockReportWithFilterOption()[pri:433, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkTransactionTypeWiseStockReportWithFilterOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:19:38Z" finished-at="2023-01-03T21:19:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkTransactionTypeWiseStockReportBackTrackOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkTransactionTypeWiseStockReportBackTrackOption()[pri:434, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkTransactionTypeWiseStockReportBackTrackOption" duration-ms="34148" started-at="2023-01-03T21:19:38Z" finished-at="2023-01-03T21:20:12Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkTransactionTypeWiseStockReportBackTrackOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkTransactionTypeWiseStockReportBackTrackOption -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T21:20:12Z" finished-at="2023-01-03T21:20:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTransactionTypeWiseStockReportBackTrackOption status=SUCCESS method=InventoryReportsTest.checkTransactionTypeWiseStockReportBackTrackOption()[pri:434, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkTransactionTypeWiseStockReportBackTrackOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="FAIL" signature="checkActualConsumptionReport()[pri:435, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkActualConsumptionReport" duration-ms="13918" started-at="2023-01-03T21:20:12Z" finished-at="2023-01-03T21:20:26Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at com.focus.testcases.InventoryReportsTest.checkActualConsumptionReport(InventoryReportsTest.java:859)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkActualConsumptionReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkActualConsumptionReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:20:12Z" finished-at="2023-01-03T21:20:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkActualConsumptionReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="103" started-at="2023-01-03T21:20:26Z" finished-at="2023-01-03T21:20:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkActualConsumptionReport status=FAILURE method=InventoryReportsTest.checkActualConsumptionReport()[pri:435, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkActualConsumptionReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkActualConsumptionReportWithFilterOption()[pri:436, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkActualConsumptionReportWithFilterOption" duration-ms="33597" started-at="2023-01-03T21:20:26Z" finished-at="2023-01-03T21:21:00Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkActualConsumptionReportWithFilterOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkActualConsumptionReportWithFilterOption -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:20:26Z" finished-at="2023-01-03T21:20:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkActualConsumptionReportWithFilterOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:21:00Z" finished-at="2023-01-03T21:21:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkActualConsumptionReportWithFilterOption status=SUCCESS method=InventoryReportsTest.checkActualConsumptionReportWithFilterOption()[pri:436, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkActualConsumptionReportWithFilterOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:21:00Z" finished-at="2023-01-03T21:21:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkActualConsumptionReportBackTrackOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkActualConsumptionReportBackTrackOption()[pri:437, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkActualConsumptionReportBackTrackOption" duration-ms="34217" started-at="2023-01-03T21:21:00Z" finished-at="2023-01-03T21:21:34Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkActualConsumptionReportBackTrackOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkActualConsumptionReportBackTrackOption -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:21:34Z" finished-at="2023-01-03T21:21:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkActualConsumptionReportBackTrackOption status=SUCCESS method=InventoryReportsTest.checkActualConsumptionReportBackTrackOption()[pri:437, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkActualConsumptionReportBackTrackOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkLoginWithUserForItemRestriction()[pri:438, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkLoginWithUserForItemRestriction" duration-ms="11193" started-at="2023-01-03T21:21:34Z" finished-at="2023-01-03T21:21:45Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkLoginWithUserForItemRestriction]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkLoginWithUserForItemRestriction -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:21:34Z" finished-at="2023-01-03T21:21:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkLoginWithUserForItemRestriction() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T21:21:45Z" finished-at="2023-01-03T21:21:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkStockReportbyTagReportsWithUserForItemRestriction() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:21:45Z" finished-at="2023-01-03T21:21:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkLoginWithUserForItemRestriction status=SUCCESS method=InventoryReportsTest.checkLoginWithUserForItemRestriction()[pri:438, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkLoginWithUserForItemRestriction]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkStockReportbyTagReportsWithUserForItemRestriction()[pri:439, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkStockReportbyTagReportsWithUserForItemRestriction" duration-ms="14043" started-at="2023-01-03T21:21:45Z" finished-at="2023-01-03T21:21:59Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkStockReportbyTagReportsWithUserForItemRestriction]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkStockReportbyTagReportsWithUserForItemRestriction -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:21:59Z" finished-at="2023-01-03T21:21:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkStockReportbyTagReportsWithUserForItemRestriction status=SUCCESS method=InventoryReportsTest.checkStockReportbyTagReportsWithUserForItemRestriction()[pri:439, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkStockReportbyTagReportsWithUserForItemRestriction]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkLoginWithSU()[pri:440, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkLoginWithSU" duration-ms="11227" started-at="2023-01-03T21:21:59Z" finished-at="2023-01-03T21:22:11Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkLoginWithSU]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkLoginWithSU -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:21:59Z" finished-at="2023-01-03T21:21:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkLoginWithSU() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T21:22:11Z" finished-at="2023-01-03T21:22:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkRaiseIndentItemwithLowStockReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:22:11Z" finished-at="2023-01-03T21:22:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkLoginWithSU status=SUCCESS method=InventoryReportsTest.checkLoginWithSU()[pri:440, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkLoginWithSU]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkRaiseIndentItemwithLowStockReport()[pri:441, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkRaiseIndentItemwithLowStockReport" duration-ms="20152" started-at="2023-01-03T21:22:11Z" finished-at="2023-01-03T21:22:31Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkRaiseIndentItemwithLowStockReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkRaiseIndentItemwithLowStockReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T21:22:31Z" finished-at="2023-01-03T21:22:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkRaiseRequestForQuoteReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:22:31Z" finished-at="2023-01-03T21:22:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkRaiseIndentItemwithLowStockReport status=SUCCESS method=InventoryReportsTest.checkRaiseIndentItemwithLowStockReport()[pri:441, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkRaiseIndentItemwithLowStockReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkRaiseRequestForQuoteReport()[pri:442, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkRaiseRequestForQuoteReport" duration-ms="9696" started-at="2023-01-03T21:22:31Z" finished-at="2023-01-03T21:22:40Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkRaiseRequestForQuoteReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkRaiseRequestForQuoteReport -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T21:22:40Z" finished-at="2023-01-03T21:22:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkGeneralLedgerandInventoryMismatchReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:22:40Z" finished-at="2023-01-03T21:22:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkRaiseRequestForQuoteReport status=SUCCESS method=InventoryReportsTest.checkRaiseRequestForQuoteReport()[pri:442, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkRaiseRequestForQuoteReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="FAIL" signature="checkGeneralLedgerandInventoryMismatchReport()[pri:443, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkGeneralLedgerandInventoryMismatchReport" duration-ms="17273" started-at="2023-01-03T21:22:40Z" finished-at="2023-01-03T21:22:58Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at com.focus.testcases.InventoryReportsTest.checkGeneralLedgerandInventoryMismatchReport(InventoryReportsTest.java:922)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkGeneralLedgerandInventoryMismatchReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkGeneralLedgerandInventoryMismatchReport -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="144" started-at="2023-01-03T21:22:58Z" finished-at="2023-01-03T21:22:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkGeneralLedgerandInventoryMismatchReport status=FAILURE method=InventoryReportsTest.checkGeneralLedgerandInventoryMismatchReport()[pri:443, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkGeneralLedgerandInventoryMismatchReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:22:58Z" finished-at="2023-01-03T21:22:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkNegativeBatchListReport() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="FAIL" signature="checkNegativeBatchListReport()[pri:444, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkNegativeBatchListReport" duration-ms="6601" started-at="2023-01-03T21:22:58Z" finished-at="2023-01-03T21:23:04Z">
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element <input type="checkbox" class="Fchkbox" name="selectAllMasters" id="selectAllMasters_" onclick="REPORTVIEW.checkAllMasters(this,'/Focus8W/Landing/Landing/SelectAllMasters')" data-text="Unselect All Item" data-selectalltext="Select All Item" data-unselectalltext="Unselect All Item" data-focusreport="" data-landingdashletid=""> is not clickable at point (1099, 205). Other element would receive the click: <body class="custom_scrollbar" onscroll="mainScroll(this, event);" onkeydown="return onBodyKeyDown(this, event);" data-version="0" style="">...</body>
  (Session info: chrome=108.0.5359.125)
Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z'
System info: host: 'FOCUS-QA-10', ip: '192.168.4.206', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\Rakesh\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:59756}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 56bfff794ecbcecb25f8ad2526ab4f26]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element <input type="checkbox" class="Fchkbox" name="selectAllMasters" id="selectAllMasters_" onclick="REPORTVIEW.checkAllMasters(this,'/Focus8W/Landing/Landing/SelectAllMasters')" data-text="Unselect All Item" data-selectalltext="Select All Item" data-unselectalltext="Unselect All Item" data-focusreport="" data-landingdashletid=""> is not clickable at point (1099, 205). Other element would receive the click: <body class="custom_scrollbar" onscroll="mainScroll(this, event);" onkeydown="return onBodyKeyDown(this, event);" data-version="0" style="">...</body>
  (Session info: chrome=108.0.5359.125)
Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z'
System info: host: 'FOCUS-QA-10', ip: '192.168.4.206', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\Rakesh\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:59756}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 56bfff794ecbcecb25f8ad2526ab4f26
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
	at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:276)
	at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:83)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
	at com.sun.proxy.$Proxy12.click(Unknown Source)
	at com.focus.Pages.InventoryReportsPage.checkNegativeBatchListReport(InventoryReportsPage.java:42853)
	at com.focus.testcases.InventoryReportsTest.checkNegativeBatchListReport(InventoryReportsTest.java:930)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkNegativeBatchListReport]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkNegativeBatchListReport -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="95" started-at="2023-01-03T21:23:04Z" finished-at="2023-01-03T21:23:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkNegativeBatchListReport status=FAILURE method=InventoryReportsTest.checkNegativeBatchListReport()[pri:444, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkNegativeBatchListReport]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkStockLedgerOutputDropdownwithPrinterasOption()[pri:445, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkStockLedgerOutputDropdownwithPrinterasOption" duration-ms="39625" started-at="2023-01-03T21:23:05Z" finished-at="2023-01-03T21:23:44Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkStockLedgerOutputDropdownwithPrinterasOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkStockLedgerOutputDropdownwithPrinterasOption -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:23:05Z" finished-at="2023-01-03T21:23:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkStockLedgerOutputDropdownwithPrinterasOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="checkStockLedgerOutputDropdownasPrintDraftModeOption()[pri:446, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkStockLedgerOutputDropdownasPrintDraftModeOption" duration-ms="21423" started-at="2023-01-03T21:23:44Z" finished-at="2023-01-03T21:24:06Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkStockLedgerOutputDropdownasPrintDraftModeOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkStockLedgerOutputDropdownasPrintDraftModeOption -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:23:44Z" finished-at="2023-01-03T21:23:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkStockLedgerOutputDropdownwithPrinterasOption status=SUCCESS method=InventoryReportsTest.checkStockLedgerOutputDropdownwithPrinterasOption()[pri:445, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkStockLedgerOutputDropdownwithPrinterasOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:23:44Z" finished-at="2023-01-03T21:23:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkStockLedgerOutputDropdownasPrintDraftModeOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:24:06Z" finished-at="2023-01-03T21:24:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkStockLedgerOutputDropdownasPrintDraftModeOption status=SUCCESS method=InventoryReportsTest.checkStockLedgerOutputDropdownasPrintDraftModeOption()[pri:446, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkStockLedgerOutputDropdownasPrintDraftModeOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="ckeckStockLedgerOutputDropdownwithExcelSheetOption()[pri:447, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="ckeckStockLedgerOutputDropdownwithExcelSheetOption" duration-ms="18589" started-at="2023-01-03T21:24:06Z" finished-at="2023-01-03T21:24:24Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.ckeckStockLedgerOutputDropdownwithExcelSheetOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- ckeckStockLedgerOutputDropdownwithExcelSheetOption -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:24:06Z" finished-at="2023-01-03T21:24:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.ckeckStockLedgerOutputDropdownwithExcelSheetOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="ckeckStockLedgerOutputDropdownwithExcelCSVOption()[pri:448, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="ckeckStockLedgerOutputDropdownwithExcelCSVOption" duration-ms="17915" started-at="2023-01-03T21:24:24Z" finished-at="2023-01-03T21:24:42Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.ckeckStockLedgerOutputDropdownwithExcelCSVOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- ckeckStockLedgerOutputDropdownwithExcelCSVOption -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:24:24Z" finished-at="2023-01-03T21:24:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ckeckStockLedgerOutputDropdownwithExcelSheetOption status=SUCCESS method=InventoryReportsTest.ckeckStockLedgerOutputDropdownwithExcelSheetOption()[pri:447, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.ckeckStockLedgerOutputDropdownwithExcelSheetOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:24:24Z" finished-at="2023-01-03T21:24:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.ckeckStockLedgerOutputDropdownwithExcelCSVOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:24:42Z" finished-at="2023-01-03T21:24:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkStockLedgerOutputDropdownasFilePathOption() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:24:42Z" finished-at="2023-01-03T21:24:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ckeckStockLedgerOutputDropdownwithExcelCSVOption status=SUCCESS method=InventoryReportsTest.ckeckStockLedgerOutputDropdownwithExcelCSVOption()[pri:448, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.ckeckStockLedgerOutputDropdownwithExcelCSVOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkStockLedgerOutputDropdownasFilePathOption()[pri:449, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkStockLedgerOutputDropdownasFilePathOption" duration-ms="21577" started-at="2023-01-03T21:24:42Z" finished-at="2023-01-03T21:25:04Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkStockLedgerOutputDropdownasFilePathOption]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkStockLedgerOutputDropdownasFilePathOption -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="1" started-at="2023-01-03T21:25:04Z" finished-at="2023-01-03T21:25:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkStockLedgerOutputDropdownasFilePathOption status=SUCCESS method=InventoryReportsTest.checkStockLedgerOutputDropdownasFilePathOption()[pri:449, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkStockLedgerOutputDropdownasFilePathOption]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
        <test-method status="PASS" signature="checkLogoutAndLoginWithSU()[pri:451, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="checkLogoutAndLoginWithSU" duration-ms="18106" started-at="2023-01-03T21:25:04Z" finished-at="2023-01-03T21:25:22Z">
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : InventoryReportsTest.checkLogoutAndLoginWithSU]]>
            </line>
            <line>
              <![CDATA[Test Method resides in com.focus.testcases.InventoryReportsTest]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
            <line>
              <![CDATA[About to begin executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkLogoutAndLoginWithSU -->
        <test-method status="PASS" signature="beforeMethodExecution(java.lang.reflect.Method)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="beforeMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:25:04Z" finished-at="2023-01-03T21:25:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.focus.testcases.InventoryReportsTest.checkLogoutAndLoginWithSU() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.io.IOException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.beforeMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodExecution -->
        <test-method status="PASS" signature="afterMethodExecution(org.testng.ITestResult)[pri:0, instance:com.focus.testcases.InventoryReportsTest@5bc79255]" name="afterMethodExecution" is-config="true" duration-ms="0" started-at="2023-01-03T21:25:22Z" finished-at="2023-01-03T21:25:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkLogoutAndLoginWithSU status=SUCCESS method=InventoryReportsTest.checkLogoutAndLoginWithSU()[pri:451, instance:com.focus.testcases.InventoryReportsTest@5bc79255] output=Completed executing following method : InventoryReportsTest.checkLogoutAndLoginWithSU]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Completed executing following method : BaseEngine.afterMethodExecution]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodExecution -->
      </class> <!-- com.focus.testcases.InventoryReportsTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
