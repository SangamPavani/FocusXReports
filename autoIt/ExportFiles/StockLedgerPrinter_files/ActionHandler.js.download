var handler = new function()
{
    var me=this;
    this.byLayoutType=0;
    this.fnInputCallback=null;



    this.getScheduleReport = function(thisObj,iLayoutId,iModuleId,iType,iDashboardId)
    {
        var sUrl = con.getStruts2Url("report","reportCriteria","getScheduleReportView",null,true);
        if(thisObj != undefined){
            var iRowIndex = thisObj.parentNode.parentNode.rowIndex-1;
            var iScheduleId = listView.getSelectedTransId("listReportTab_1",iRowIndex);
            if(iScheduleId!=null && iScheduleId>0)
                sUrl += "?scheduleId="+iScheduleId+"&layoutId="+iLayoutId+"&moduleId="+iModuleId+"&type="+iType;
            else
                sUrl +="?layoutId="+iLayoutId+"&moduleId="+iModuleId+"&type="+iType;

            if(iType==1){
                sUrl += "&dashboardId="+iDashboardId;
            }

            home.setCenterUI(sUrl);
        }
    };

    this.deleteScheduleReport=function(thisObj,iLayoutId,iModuleId)
    {
        if(thisObj != undefined) {
            var iRowIndex = thisObj.parentNode.parentNode.rowIndex - 1;
            var iScheduleId = listView.getSelectedTransId("listReportTab_1",iRowIndex);
            msg.showConfirm(MsgHandler.getMsg(MsgConstants.WANT_TO_DELETE), null, handler.handlerDeleteScheduleReport,[iScheduleId,iLayoutId,iModuleId]);
        }
    };

    this.handlerDeleteScheduleReport=function(iScheduleId,iLayoutId,iModuleId,iStatus)
    {
        var sUrl = con.getStruts2Url("report","reportCriteria","deleteScheduleReport",null,true);
        if(iStatus==Constants.YES)
        {
            con.sendPostRequest(sUrl,"schedulerId="+iScheduleId+"&layoutId="+iLayoutId+"&moduleId="+iModuleId,null,"handler.arhRefreshListView"); /**/
        }
    };
    this.arhRefreshListView = function(sResponse)
    {
        sResponse=eval(sResponse);
        if(parseInt(sResponse[0])== 1)
            listView.getRefresh("report/reportCriteria!getSchedulerListview.do?moduleId="+sResponse[2]+"&layoutId="+sResponse[1]);
    };


//    var listHandler = null,relModuleHandler = null,detailedHandler = null;

    this.handleAction = function(byLayoutType,byViewIn,iModuleId,byActionId,sUrl)
    {
//        me.initHandlers();
        var args=[];
        for(var i=3;i < arguments.length;i++) //skipping 0-layouttype,-ViewIn
            args[i-3]=arguments[i];

        me.byLayoutType=byLayoutType;
        me.byViewIn=byViewIn;

      //  alert(me.byViewIn)
        //alert("byLayoutType,iModuleId,byActionId,sUrl=="+byLayoutType+"--"+iModuleId+"--"+byActionId+"--"+sUrl+"--"+args)
        if(byLayoutType==Constants.LIST_LAYOUT)
        {
            listHandler.setModuleId(iModuleId);
            handler.handleListAction.apply(this,args);
        }
        else if(byLayoutType==Constants.RELATEDMODULE_LAYOUT)
        {
//            alert(iModuleId)
            relModuleHandler.setModuleId(iModuleId);
            handler.handleRelModuleAction.apply(this,args); //handleDetailedAction
        }
        else if(byLayoutType==Constants.DETAILED_LAYOUT)
        {
            detailedHandler.setModuleId(iModuleId);
            handler.handleDetailedAction.apply(this,args);
        }
        else if(byLayoutType==Constants.TREE_VIEW_LAYOUT)
        {
            clTreeView.getActions.iModuleId=iModuleId;
            clTreeView.getActions.apply(this,args);
        }
        else if(byLayoutType==Constants.EDIT_LAYOUT)
        {
//            handler.editActions.iModuleId=iModuleId;
            handler.editActions.apply(this,args);
        }
        else if(byLayoutType==Constants.HOMEPAGE_LAYOUT)
        {
            handler.handleHomepageAction.apply(this,args);
        }
    };
    this.onClkBlackListInfo = function(iActionId,sTitle,sUrl)
    {
        var iTransIds=listView.getTransIds(),iWidth=500,iHeight=300;
        var arrActions = [];
        arrActions[0] = MsgHandler.getMsg(MsgConstants.SAVE,0,0)+"|clBlackListedInfo.onClkSaveCustomers";
        arrActions[1] = MsgHandler.getMsg(MsgConstants.CANCEL,0,0)+"|clBlackListedInfo.onClkCloseDlg";
        if(iActionId == Constants.IBlackListCust.BLACKLIST_RELEASE)
        {
           if(iTransIds.length == 0)
           {
              msg.showMessage(0,MsgHandler.getMsg(MsgConstants.SELECT_RECORD,0,0));
              return false;
           }
           else if(iTransIds.length > 1)
           {
              msg.showMessage(0,MsgHandler.getMsg(MsgConstants.MULTI_SELECT_NOT_ALLOWED,0,0));
              return false;
           }
          sUrl+="?transId=" + iTransIds[0];
        }
        else if(iActionId == Constants.IBlackListCust.BLACKLIST_HISTORY)
        {
           iWidth=950,iHeight=350;
           var sAccountName = "";
           if(iTransIds.length > 0)
           {
             var clTable = new sTable("listReportTab_1");
             sAccountName = clTable.getValueAt(clTable.getCurrentRow(),1);
             sUrl+="?transId="+iTransIds[0]+"&accountName="+sAccountName;
           }
            arrActions[0] = MsgHandler.getMsg(MsgConstants.OK,0,0)+"|clBlackHistoryInfo.onClkCloseDlg";
            arrActions[1] = MsgHandler.getMsg(MsgConstants.CANCEL,0,0)+"|clBlackHistoryInfo.onClkCloseDlg";
        }

        var clDlg = new DialogBox("blackListDlg",sTitle,140,160,iWidth,iHeight,sUrl, true, null, false,true,arrActions);
        clDlg.setCenter();
        clDlg.show();
    };

    this.setInputFn=function(fnInputCallback)
    {
        this.fnInputCallback=fnInputCallback;
    };

    this.editActions = function(byActionId,sUrl)
    {
        //alert(arguments[0]+","+arguments[2]+" "+byActionId)
        if(byActionId > Constants.STANDARD_ACTIONS_LIMIT )
        {
            var iReportType=arguments[2];
            if( iReportType==Constants.SRC_EXT_REPORT || iReportType==Constants.SRC_INTERNAL_REPORT)
            {
                var iShowAs=arguments[3];
                var sTitle=arguments[4];
                var iTransId = document.getElementById("transId").value;

                if (iReportType == Constants.SRC_INTERNAL_REPORT)
                    me.openReport(sUrl, iReportType, iShowAs, iTransId, arguments[5], iTransId, sTitle, null, 0, 0);
                else
                    me.openReport(sUrl, iReportType, iShowAs, iTransId, 0, 0, sTitle, null, 0, 0);
            }
        }
        else
        {
            sUrl+="?moduleId="+arguments[3]+"&byAction="+byActionId;
            var sDlgTitle=arguments[2];
            var iTransId=0;
            if( me.byViewIn==Constants.MODULE_IN_DLG )
            {
                if( arguments[4]>0)
                    iTransId=arguments[4];
                else
                    iTransId = me.fnInputCallback();
            }
            else
                iTransId = me.fnInputCallback();

            if(iTransId>0)
                if(me.byViewIn==Constants.MODULE_IN_DLG )
                {
                    moduleView.editModuleInDlg(sUrl,iTransId,false,relModuleHandler.getBaseModuleId(),0,sDlgTitle);
                }
                else moduleView.editModule(sUrl,iTransId,false,0,0);
        }
    };

    this.handleListAction = function(byActionId,sUrl)
    {
        if(byActionId!=Constants.DELETE && byActionId!=Constants.NEW)
        {
            var iTransIds = listHandler.getSelectedTransIds();

            if (iTransIds != null && iTransIds.length > 0)
            {
                if (listView.isDraftRecordSelected())
                {
                    msg.showMessage(0, MsgHandler.getMsg(MsgConstants.DRAFT_RECORD_ACTION, 0, 0, clAppBuffer.getModuleCaption(listView.getModuleId(), true)));
                    return;
                }
            }
        }

        var iCalTableId;
        if(document.getElementById("iModuleId_"+Constants.TASKS)!=null && document.getElementById("iModuleId_"+Constants.TASKS).value==Constants.CALENDAR )
        {
            iCalTableId = Constants.TASKS;
        }
        if(listHandler.iModuleId!=Constants.MESSAGES
                && listHandler.iModuleId!=Constants.ANNOUNCEMENT && iCalTableId==undefined)
            var iTransIds=listHandler.getSelectedTransIds();

        if(byActionId==Constants.CONVERT)
            listHandler.getConvertLead(sUrl);
        else if(byActionId == Constants.CONVERT_TO_LEAD
                || byActionId == Constants.CONVERT_TO_OPPORTUNITIES
                || byActionId == Constants.CONVERT_TO_REQUEST
                || byActionId == Constants.ADD_TO_OPPORTUNITIES
                || byActionId==Constants.CONVERT_TO_MODULE
                || byActionId==Constants.CONVERT_TO_CONTACT)
        {

            if(listView.getTransIds()!="")
            {
                var iModuleId = Constants.LEADS;
                if(byActionId == Constants.CONVERT_TO_OPPORTUNITIES)
                    iModuleId = Constants.OPPORTUNITIES;
                else if(byActionId == Constants.CONVERT_TO_REQUEST)
                    iModuleId = Constants.REQUEST;
                else if(byActionId == Constants.CONVERT_TO_LEAD)
                    iModuleId = Constants.LEADS;

                var iBaseModuleId = listView.getModuleId();

                if(byActionId == Constants.ADD_TO_OPPORTUNITIES)
                {
                    var iTransIds=listHandler.getSelectedTransIds();
                    if(listHandler.validateRowSelection(iTransIds,false))
                    {
                        //listView.onClkGetOpportunitiesList();
                        sUrl =  "module/communication!getAttachModule.do";
                        sUrl += "?transId="+iTransIds;
                        arrActions = [];
                        arrActions[0] = MsgHandler.getMsg(MsgConstants.SAVE)+"|clAttachToModule.onClkSave()";
                        arrActions[1] = MsgHandler.getMsg(MsgConstants.CLOSE)+"|";
                        var clAttachToModDlg = new DialogBox("dlgAttachMod", "", 120, 130, 430, 285, sUrl, true, null, false, true, arrActions);
                        clAttachToModDlg.setTitle("Attach To Module");
                        clAttachToModDlg.setCenter();
                        clAttachToModDlg.show()
                    }
                }
                else if(byActionId==Constants.CONVERT_TO_MODULE)
                {
                    var iTransIds=listHandler.getSelectedTransIds();

                    if(listHandler.validateRowSelection(iTransIds,false))
                    {
                        var iArrExtraIds=listView.getSelectedExtraId();
                        if(iArrExtraIds[0]>0)/*MasterId*/
                        {
                            msg.showMessage(0,"Selected communication is already converted");
                            return false;
                        }
                        else
                        {
                            //listView.onClkGetOpportunitiesList();
                            sUrl = "module/communication!getCovertToModule.do";
                            sUrl += "?transId=" + iTransIds;
                            arrActions = [];
                            arrActions[0] = "Convert|clConvertToModule.onClkSave()";
                            arrActions[1] = MsgHandler.getMsg(MsgConstants.CLOSE) + "|clConvertToModule.hideAttachDlg()";
                            var clAttachToModDlg = new DialogBox("dlgConvertMod", "", 120, 130, 430, 285, sUrl, true, null, false, true, arrActions);
                            clAttachToModDlg.setTitle("Convert To Module");
                            clAttachToModDlg.setCenter();
                            clAttachToModDlg.show()
                        }
                    }
                }
                else if(iBaseModuleId == Constants.TELE_CALLS && (byActionId == Constants.CONVERT_TO_LEAD || Constants.CONVERT_TO_CONTACT))
                {
                    var iTransIds=listHandler.getSelectedTransIds();

                    if(listHandler.validateRowSelection(iTransIds,false))
                    {
                        var iSelTransId = listView.getSelectedTransId();
                        var iArrExtraIds = listView.getSelectedExtraId();

                        var iRelatedToType = parseInt(iArrExtraIds[0]);
                        var sPhone = iArrExtraIds[2];
                        var iUnknownNumber = parseInt(iArrExtraIds[3]);

                        //alert(iArrExtraIds[3] + "-->" + sPhone);
                        if (!iRelatedToType || iUnknownNumber)
                            handler.convertTeleCallModuleDlg(byActionId, iSelTransId, sPhone);
                        else
                            msg.showMessage(0,"Tele call already converted.");
                    }

                }
                else //if(byActionId == Constants.CONVERT_TO_LEAD)
                {
                var iSelTransId = listView.getSelectedTransId();
                var sParams="moduleId="+iModuleId+"&baseTransId="+iSelTransId;
                sUrl = "/module/moduleView!getModuleView.do?"+sParams+"&byAction="+Constants.EDIT_LAYOUT+"&calledFrom="+Constants.COMMUNICATION;
                home.setCenterUI(sUrl,null,true,false,null,null,null,null,null,true);
                }
            }
            else
            msg.showMessage(0,MsgHandler.getMsg(MsgConstants.SELECT_ATLEAST,0,0,MsgHandler.getMsg(MsgConstants.TRANSID)));
        }
        else if(byActionId==Constants.ASSIGN || byActionId==Constants.SPLIT_AND_ASSIGN)
        {
            iModuleId=listView.getModuleId();
            if(byActionId==Constants.ASSIGN && iModuleId == Constants.CMS_BOOKING)// need to define constants
            {
                if(listHandler.validateRowSelection(iTransIds,true))
                {
                    var bCheck=listHandler.validateCMSBookingRowStatus(byActionId,ICMSConstants.ISTATUS.VALID);
                    if(bCheck)
                        listHandler.onClkOpenActionInDLG(MsgHandler.getMsg(MsgConstants.CMS_ASSIGN_EXCUTIVE),sUrl+"?rowTransId="+iTransIds,400,240,"clAssignExec.onClkSaveAssignExec()","clAssignBooking");///cms/booking!getAssignExecutive.do
                    else
                    {
                        msg.showMessage(0,MsgHandler.getMsg(MsgConstants.CMS_ASSIGN_VALID_BOOKING));
                    }
                }
            }
            else if(byActionId==Constants.ASSIGN && iModuleId == Constants.CMS_DELIVERIES)// need to define constants
            {
                /*if(listHandler.validateRowSelection(iTransIds,true))
                {
                    var bCheck=listHandler.validateCMSDeliveriesRowStatus(byActionId,ICMSConstants.ISTATUS.ARRIVED_AT_DESTINATION,
                            ICMSConstants.ISTATUS.DELIVERY_ASSIGNED,ICMSConstants.ISTATUS.DAMAGED,
                            ICMSConstants.ISTATUS.RETURNED_TO_DESTINATION_WAREHOUSE,ICMSConstants.ISTATUS.READY_TO_RECEIVE,
                            ICMSConstants.ISTATUS.CONSIGNEE_REQUESTED_TO_DELIVER);
                    if(bCheck)
                        listHandler.onClkOpenActionInDLG(MsgHandler.getMsg(MsgConstants.CMS_ASSIGN_EXCUTIVE),sUrl+"?rowTransId="+iTransIds,525,480,"clAssignExecDelivery.onClkSaveAssignExec()","clAssignDelivery");///cms/deliveries!getAssignExecutive.do
                    else
                    {
                        msg.showMessage(0,MsgHandler.getMsg(MsgConstants.CMS_ASSIGN_VALID_BOOKING));
                    }
                }*/
                listHandler.onClkOpenActionInDLG(MsgHandler.getMsg(MsgConstants.CMS_ASSIGN_EXCUTIVE),sUrl+"?rowTransId="+iTransIds+"&iDelivey=1",525,480,"clAssignExecDelivery.onClkSaveAssignExec()","clAssignDelivery");///cms/deliveries!getAssignExecutive.do
            }
            else
            {
                /*if(iModuleId==Constants.LEADS )
                {
                    var iExtraIds = listView.getExtraIds();
                    var iExtraId = 0;
                    for (var i = 0; i < iExtraIds.length; i++)
                    {
                        iExtraId = iExtraIds[i];
                        if (iExtraId[2] == Constants.ILEADSTATE.UNQUALIFIED)
                        {
                            msg.showMessage(0, MsgHandler.getMsg(MsgConstants.LEAD_ASSIGN_UNQUALIFIED));
                            return false;
                        }
                    }
                }*/

                listHandler.assign(sUrl,arguments[2],arguments[3],byActionId);
            }
        }
        else if(byActionId == Constants.SCAN_BARCODE_LABELS)
        {
            iModuleId=listView.getModuleId();
            var iTransIds=listView.getTransIds();
            if(iModuleId == Constants.CMS_BOOKING && listHandler.validateRowSelection(iTransIds,true))
                listHandler.onClkOpenActionInDLG(MsgHandler.getMsg(MsgConstants.CMS_SCAN_BARCODE_LABELS),sUrl,525,480,"clCMSBarcodeLabelPickup.onClkSaveBarcodeLabelPickup()","clScanBarCodeLabels");
        }
        else if(byActionId==Constants.FIND_DUPLICATES)
            listHandler.getSearchDuplicate(sUrl);
        else if(byActionId==Constants.SHARE)
            listHandler.share(sUrl,arguments[2],arguments[3]);
        else if(byActionId==Constants.PRINT_LABEL)
            listHandler.printLabels(arguments[1],arguments[2],arguments[3]);
        else if(byActionId==Constants.PRINT) {

            var iTransIds=listView.getTransIds();
            if(iCalTableId==undefined)
                iCalTableId=1;
            var arrActions = [];
            var iApprovalStatus = listView.getAuthId("listReportTab_"+iCalTableId);
            var sMethod = "clPrintLayoutSelection.onClkPrint";

            arrActions[0] = MsgHandler.getMsg(MsgConstants.PRINT) + "|" + sMethod;
            arrActions[1] = MsgHandler.getMsg(MsgConstants.CLOSE) + "|";
            var clSelectLayoutDlg = new DialogBox("layoutdlg", "", 140, 160, 400, 185, sUrl+"&approvalStatus="+iApprovalStatus+"&iTransIds="+iTransIds, false, null, false, true, arrActions);/*330*/
            clSelectLayoutDlg.setTitle(MsgHandler.getMsg(MsgConstants.SELECT_LAYOUT));
            clSelectLayoutDlg.setCenter();


        }
        else if(byActionId==Constants.TERMINATE || byActionId==Constants.LEGAL_CASE || byActionId==Constants.CONTRACT_CLOSE)
        {

            //not valid if contract status is closed and terminate action performed
            //not valid if auth status is pending
            iModuleId=listView.getModuleId();
            if(listHandler.validateRowSelection(iTransIds,false)) {

                var iContractStatus = listView.getExtraIds("listReportTab_1", true)[0];
                var iAppovedId = listView.getAuthId();
                if (iContractStatus == Constants.ICONTRACT_STATUS.CLOSED) {
                     msg.showMessage(0, MsgHandler.getMsg(MsgConstants.MOD_STATUS_ACTION_DENIED, 0, 0, clAppBuffer.getModuleCaption(iModuleId, true), MsgHandler.getMsg(MsgConstants.CONTRACT_CLOSE), MsgHandler.getMsg(byActionId == Constants.TERMINATE ? MsgConstants.TERMINATE : MsgConstants.LEGAL_CASE)));
                    return false;
                } else if (iAppovedId == Constants.IAPPROVAL_STATUS.PENDING) {
                    msg.showMessage(0, MsgHandler.getMsg(MsgConstants.MOD_PENDING_ACTION_DENIED, 0, 0, clAppBuffer.getModuleCaption(iModuleId, true), MsgHandler.getMsg(byActionId == Constants.TERMINATE ? MsgConstants.TERMINATE : MsgConstants.LEGAL_CASE)));
                    return false;
                } else if (iContractStatus == Constants.ICONTRACT_STATUS.RENEWED) {
                    msg.showMessage(0, MsgHandler.getMsg(MsgConstants.MOD_STATUS_ACTION_DENIED, 0, 0, clAppBuffer.getModuleCaption(iModuleId, true), MsgHandler.getMsg(MsgConstants.RENEWED), MsgHandler.getMsg(byActionId == Constants.TERMINATE ? MsgConstants.TERMINATE : MsgConstants.LEGAL_CASE)));
                    return false;
                }
                else if ((byActionId==Constants.LEGAL_CASE && iContractStatus == Constants.ICONTRACT_STATUS.LEGAL_CASE)) {
                    msg.showMessage(0, MsgHandler.getMsg(MsgConstants.MOD_STATUS_ACTION_DENIED, 0, 0, clAppBuffer.getModuleCaption(iModuleId, true), MsgHandler.getMsg(MsgConstants.LEGAL_CASE), MsgHandler.getMsg(byActionId == Constants.TERMINATE ? MsgConstants.TERMINATE : MsgConstants.LEGAL_CASE)));
                    return false;
                }

                var sTitle = "";
                sTitle = (byActionId == Constants.TERMINATE) ? "Contract Termination" : ((byActionId == Constants.CONTRACT_CLOSE)?"Contract Close":"Contract LegalCase");
                var iTransIds = listView.getTransIds();

                if (iModuleId == Constants.CONTRACTS && byActionId == Constants.TERMINATE)
                {
                    //alert('sUrl   if   ======='+sUrl);
                    listHandler.terminateContract(iTransIds[0],sUrl);
                    //var sParams = "?transId=" + iTransIds[0] ;//+ "&moduleId=" + iModuleId ;
                    //sUrl = "/support/contract!doContractTermination.do" + sParams ;
                    //home.setCenterUI(sUrl);
                }
                else
                {
                    var iContractId = iTransIds[0];
                    if(byActionId==Constants.CONTRACT_CLOSE)
                        sUrl = con.getStruts2Url("support","termination","getPMSContractCloseDetails",null,true);
                    else
                        sUrl = con.getStruts2Url("support", "termination", "getPMSTermination", null, true);
                    sUrl += "?contractId=" + iContractId + "&baseTransId=" + iContractId + "&moduleId11=" + iModuleId + "&includeHeader=0" + "&viewIn=" + Constants.MODULE_IN_DLG;
                    sUrl += "&actionId=" + byActionId;
                    //sUrl += "&transId=" + iContractId;
                   // alert('sUrl else   ====='+sUrl);
                    var clLeaseDlg;
                    if(byActionId==Constants.CONTRACT_CLOSE)
                        clLeaseDlg= new DialogBox("module"+Constants.PMS_CONTRACT_CLOSE, "", 140, 160, 580, 450, sUrl, true, null, false, true, null);
                    else
                        clLeaseDlg= new DialogBox("sHeaderDlg", "", 140, 160, 580, 450, sUrl, true, null, false, true, null);
                    clLeaseDlg.setTitle(sTitle);
                    clLeaseDlg.setCenter();
                    clLeaseDlg.show();
                }
            }
        }
        else if(byActionId==Constants.RENEWAL)
        {
            //not valid if auth status is pending
            iModuleId=listView.getModuleId();
            if(listHandler.validateRowSelection(iTransIds,false)){


                var iAppovedId = listView.getAuthId();
                var  iContractStatus = listView.getExtraIds("listReportTab_1",true)[0];
                if (iAppovedId == Constants.IAPPROVAL_STATUS.PENDING) {
                    msg.showMessage(0,MsgHandler.getMsg(MsgConstants.MOD_PENDING_ACTION_DENIED,0,0,clAppBuffer.getModuleCaption(iModuleId,true),MsgHandler.getMsg(MsgConstants.RENEWAL)));
                    return false;
                }/*else if(iContractStatus == Constants.ICONTRACT_STATUS.LEGAL_CASE)
                {
                    msg.showMessage(0,MsgHandler.getMsg(MsgConstants.MOD_STATUS_ACTION_DENIED,0,0,clAppBuffer.getModuleCaption(iModuleId,true),MsgHandler.getMsg(MsgConstants.LEGAL_CASE),MsgHandler.getMsg(MsgConstants.RENEWAL)));
                    return false;
                }*/


                var iTransIds=listView.getTransIds();

                var iContractId = iTransIds[0];
                var sParams = "?transId=" + iContractId + "&moduleId=" + iModuleId + "&renewal=1";
                sUrl = "/module/moduleView!getModuleView.do" + sParams + "&byAction=" + Constants.EDIT_LAYOUT;
                if (iModuleId == Constants.PMS_CONTRACTS)
                    sUrl += "&clone=1";
                home.setCenterUI(sUrl);
            }
        }
        /*else if(byActionId==Constants.CONTRACT_CLOSE)
        {
            //not valid if auth status is pending
            //not valid if contract status is closed
            iModuleId=listView.getModuleId();
            if(listHandler.validateRowSelection(iTransIds,false)) {


                var iAppovedId = listView.getAuthId();
                var  iContractStatus = listView.getExtraIds("listReportTab_1",true)[0];
                if(iContractStatus == Constants.ICONTRACT_STATUS.CLOSED){
                    msg.showMessage(0,MsgHandler.getMsg(MsgConstants.MOD_STATUS_ACTION_DENIED,0,0,clAppBuffer.getModuleCaption(iModuleId,true),MsgHandler.getMsg(MsgConstants.CONTRACT_CLOSE),MsgHandler.getMsg(MsgConstants.CONTRACT_CLOSE)));
                    return false;
                }else if (iAppovedId == Constants.IAPPROVAL_STATUS.PENDING) {
                    msg.showMessage(0,MsgHandler.getMsg(MsgConstants.MOD_PENDING_ACTION_DENIED,0,0,clAppBuffer.getModuleCaption(iModuleId,true),MsgHandler.getMsg(MsgConstants.CONTRACT_CLOSE)));
                    return false;
                }else if (iContractStatus == Constants.ICONTRACT_STATUS.RENEWED) {
                    msg.showMessage(0, MsgHandler.getMsg(MsgConstants.MOD_STATUS_ACTION_DENIED, 0, 0, clAppBuffer.getModuleCaption(iModuleId, true), MsgHandler.getMsg(MsgConstants.RENEWED), MsgHandler.getMsg(MsgConstants.CONTRACT_CLOSE)));
                    return false;
                }


                var iTransIds=listView.getTransIds();

                var sTitle="";
                sTitle = "Contract Close";
                //var iContractId = document.getElementById("transId").value;
                var iContractId = iTransIds[0];
                sUrl = con.getStruts2Url("support","termination","getPMSContractCloseDetails",null,true);
                sUrl+="?contractId="+iContractId+"&baseTransId="+iContractId+"&moduleId11="+iModuleId+"&includeHeader=0"+"&viewIn="+Constants.MODULE_IN_DLG;
                sUrl+="&actionId="+byActionId;
                //alert('sUrl====='+sUrl);
                var clLeaseDlg = new DialogBox("sHeaderDlg","",140,160,580,450,sUrl, true, null, false,true,null);
                clLeaseDlg.setTitle(sTitle);
                clLeaseDlg.setCenter();
                clLeaseDlg.show();


                /!*var iContractId = iTransIds[0];
                sUrl = "/support/termination!getContractClose.do";
                sUrl += "?contractId=" + iContractId + "&moduleId=" + iModuleId;
                if (iContractId > 0)
                    con.sendPostRequest(sUrl, null, null, null);*!/
            }
        }*/
        else if(byActionId==Constants.NEW)
        {   // need to check module ids
            if(listHandler.iModuleId==Constants.MESSAGES)
                listHandler.showMessageDialog(sUrl,arguments[2],arguments[3]);
            else if(listHandler.iModuleId==Constants.ANNOUNCEMENT)
                listHandler.showAnnouncementDialog(arguments[1],arguments[2],arguments[3],arguments[4],arguments[6]);
            else if(listHandler.iModuleId==Constants.CONTRACTS)
                listHandler.addContract(sUrl,arguments[2]);
            else if(listHandler.iModuleId==Constants.DOCUMENTS )
            {
//                relModuleHandler.addDocuments(sUrl,arguments[2],arguments[3],arguments[4],byActionId);
                me.addDocuments(sUrl,arguments[2],arguments[3],arguments[4],byActionId,listHandler.iModuleId);
            }
            /*else if(arguments[4]==Constants.ICreate_Action_Type.TYPE_FIELD_CREATION_ACTION_CHILD
                || arguments[4]==Constants.ICreate_Action_Type.TYPE_FIELD_CREATION_ACTION_BASE)
            {
                if(arguments[4]==Constants.ICreate_Action_Type.TYPE_FIELD_CREATION_ACTION_CHILD)
                {
                    if(listHandler.validateRowSelection(iTransIds,true))
                    {
                        if (sUrl && sUrl.indexOf("?") == -1)
                            sUrl = sUrl + "?" + "baseTransId=" + iTransIds;//cTransIds
                        else sUrl = sUrl + "&" + "baseTransId=" + iTransIds;//cTransIds
                        home.setCenterUI(sUrl);
                    }
                }
                else home.setCenterUI(sUrl);
            }
             else
                home.setCenterUI(sUrl);
            */
            else
            {
                if (sUrl && sUrl.indexOf("?") == -1)
                    sUrl = sUrl + "?" + "baseTransId=" + iTransIds;//cTransIds
                else
                    sUrl = sUrl + "&" + "baseTransId=" + iTransIds;//cTransIds
                home.setCenterUI(sUrl);

            }

        }

//        else if(byActionId==Constants.NEW_MESSAGE)
//            listHandler.showMessageDialog(sUrl,arguments[2],arguments[3]);
//        else if(byActionId==Constants.NEW_ANNOUNCEMENT)
//            listHandler.showAnnouncementDialog(arguments[1],arguments[2],arguments[3],arguments[4],arguments[6]);
//        else if(byActionId==Constants.NEW_CONTRACT)
//            listHandler.addContract(sUrl,arguments[2]);
        else if(byActionId == Constants.MASS_UPDATE)
            listHandler.massUpdate(sUrl,arguments[2],arguments[3]);
        else if(byActionId==Constants.MASS_TRANSFER)
            listHandler.massTransfer(sUrl,arguments[2],arguments[3]);
        else if(byActionId==Constants.CALL_LEAD)
            listHandler.getCallerScreen(sUrl);
        else if(byActionId==Constants.ASSIGN_TEAMS)
            listHandler.onClkShowAssignUsers(sUrl,arguments[2]);
        else if(byActionId==Constants.NEW_TASK || byActionId==Constants.NEW_EVENT
            || byActionId==Constants.NEW_APPOINTMENT || byActionId==Constants.LOG_AN_ACTIVITY)
        {
            if(listHandler.validateRowSelection(iTransIds,false))
            {
                var iModuleId=listView.getModuleId();
                if(byActionId!=Constants.NEW_EVENT && iModuleId==Constants.LEADS)
                {
                    var iExtraId=listView.getLeadStatus();
                    if(iExtraId==Constants.LEAD_STATUS_CONVERTED)
                    {
                        msg.showMessage(0,MsgHandler.getMsg(MsgConstants.LEAD_ALREADY_CONVERTED));//MsgHandler.getMsg(MsgConstants.SELECT_RECORD,0,0)
                        return false;

                    }
                }
//TODO: commented on 23/03/2022 memeberId changes in Lead/TeleLead
/*
                if(iModuleId==Constants.LEADS || iModuleId==Constants.TELELEADS)
                {
                    iTransIds=listView.getSelectedExtraId();
                    iTransIds=iTransIds[0];
                }
*/
                me.editModule(sUrl,0,false,iModuleId,iTransIds);
            }
        }
        else if(byActionId==Constants.NEW_CALL_WORKLOG)
        {

            if(listHandler.validateRowSelection(iTransIds,false) && handler.validateCallStatus(Constants.LIST_LAYOUT,byActionId) )
                listHandler.showModuleDialog(sUrl,listView.getModuleId(),null,iTransIds,false, " Work Log ",900,550);
        }
        else if(byActionId==Constants.CLOSE_REQUEST)
        {
            //if(listHandler.validateRowSelection(iTransIds,true))
            if(listHandler.validateRowSelection(iTransIds,false)&& handler.validateCallStatus(Constants.LIST_LAYOUT,byActionId,Constants.CALL_CLOSE) ) //,listHandler.getCallStatusId()
            {
                var iModuleId=listView.getModuleId();
                listHandler.closeRequest(sUrl+"&isSeparateForm=1",iModuleId,iTransIds);
            }
        }
         else if(byActionId==Constants.SURVEY)
        {
            //if(listHandler.validateRowSelection(iTransIds,true))
            /*if(listHandler.validateRowSelection(iTransIds,false)&& handler.validateCallStatus(Constants.LIST_LAYOUT,byActionId,Constants.REQUEST) ) //,listHandler.getCallStatusId()
            {
                var iModuleId=listView.getModuleId();
                listHandler.openSurvey(sUrl,iModuleId,iTransIds,arguments[2]);
            }*/
            if(listHandler.validateRowSelection(iTransIds,false))
            {

                    if(listHandler.iModuleId==Constants.REQUEST)
                    {
                        if(handler.validateActiveStatus())
                            listHandler.openSurveyForCalls(sUrl, iModuleId, iTransIds, arguments[2], listHandler.getCallStatusId());
                    }
                    else//for other modules need to check
                    {
                        var iModuleId=listView.getModuleId();
                        if(iModuleId!=Constants.SURVEY_MODULE)
                        {
                            sUrl+="&viewMode="+ ISurveyConstants.ISurvey_Assignment_Mode.APPLICATION+"&modtransId="+iTransIds+"&typeId="+Constants.CONTACTS+"&userType="+Constants.IUSERTYPES.SERVICE;
                            listHandler.openSurvey(sUrl,iModuleId,iTransIds,arguments[2]);
                        }
                        else
                        {
                            listHandler.openSurveyForSurveyMod(sUrl,iModuleId,iTransIds,arguments[2]);
                        }

                    }

            }
        }
        else if(byActionId==Constants.UNLOCK_USERS)
        {
            if(listHandler.validateRowSelection(iTransIds,true))
            {
                var cbView = document.getElementById("view");
                if(cbView.options[cbView.selectedIndex].value==Constants.ACTIVE_USERS ||
                    cbView.options[cbView.selectedIndex].value==Constants.ALL_USERS ||
                    cbView.options[cbView.selectedIndex].value==Constants.LOCKED_USERS )
                    listHandler.unlockActivateUsers(sUrl,0);
                else
                    msg.showMessage(0,MsgHandler.getMsg(MsgConstants.CANNOT_UNLCK_INACTIVE));
            }

        }
        else if(byActionId==Constants.RESET_PASSWORD)//reset password
        {
            if(listHandler.validateRowSelection(iTransIds,true))
            {
                var cbView = document.getElementById("view");
                //if(cbView.options[cbView.selectedIndex].value==Constants.LOCKED_USERS)
                    listHandler.resetPassword(sUrl);
                /*else
                    msg.showMessage(0,"message");//TODO :Message to be decided*/
            }

        }
        else if(byActionId==Constants.ACTIVATE_USERS)
        {
            if(listHandler.validateRowSelection(iTransIds,true))
            {
                if(listHandler.iModuleId==Constants.CONTRACTS)
                    listHandler.updateContractStatus(sUrl,1,iTransIds);
                else
                {
                    var cbView = document.getElementById("view");
                    if(cbView.options[cbView.selectedIndex].value==Constants.ACTIVE_USERS)
                        msg.showMessage(0,MsgHandler.getMsg(MsgConstants.USRALRDY_ACTIVE));//TODO :Message to be decided
                    else
                        listHandler.unlockActivateUsers(sUrl,0);
                }
            }
        }
        else if(byActionId==Constants.ASSIGN_BY_QUEUE)
        {
                listHandler.assignCall();
        }
        else if(byActionId==Constants.CHANGE_ISSUE)
        {
                listHandler.changeIssue();
        }
        else if(byActionId==Constants.CHANGE_STATUS)
        {
                listHandler.changeStatus();
        }
        else if(byActionId==Constants.PICK_REQUEST)
        {
                listHandler.pickRequest();
        }
        else if(byActionId==Constants.UNIT_TO_ENQUIRY)
        {
           listHandler.unitToEnquiry();
        }
        else if(byActionId==Constants.UNIT_TO_CONTRACT)
        {
            listHandler.unitToContract();
        }
        else if(byActionId==Constants.PMS_BOOKINGS)
        {
            listHandler.onClkBookings();
        }
        else if(byActionId==Constants.DELETE)
        {
            iModuleId=listView.getModuleId();
            listView.deleteHandler(null,sUrl,"listReportTab_1",iModuleId);
        }
        else if(byActionId==Constants.EDIT)
        {
            var iModuleId=arguments[2];

             if(iModuleId==Constants.OPEN_ACTIVITIES)
             {
                 var imgEdit=arguments[4];
                 relModuleHandler.editOpenActivity(sUrl,0,imgEdit,0,0,1);
             }

        }
        else if(byActionId > Constants.STANDARD_ACTIONS_LIMIT )
        {
            var iReportType=arguments[2];

             if( iReportType==Constants.SRC_EXT_REPORT || iReportType==Constants.SRC_INTERNAL_REPORT)
             {
                 var iShowAs=arguments[3];
                 var sTitle=arguments[4];
                 var iTransIds=listHandler.getSelectedTransIds();

                 if (iReportType == Constants.SRC_INTERNAL_REPORT)
                     me.openReport(sUrl, iReportType, iShowAs, iTransIds, listView.getModuleId(), 0, sTitle, null, 0, 0);
                 else
                     me.openReport(sUrl, iReportType, iShowAs, iTransIds, 0, 0, sTitle, null, 0, 0);
             }
        }
        else if(byActionId==Constants.MAP_VIEW)
        {
            //var iModuleId=document.getElementById("moduleId").value;
            //var iTransId = document.getElementById("transId").value;
            //if(listHandler.validateRowSelection(iTransIds,true))
                listHandler.viewMapMarker(sUrl,arguments[2]);
        }
        else if(byActionId == Constants.PAYMENT_MODULE || byActionId == Constants.IActions.PAYMENT_ON_DEVICE)
        {
            listHandler.getPaymentRequest(byActionId);
        }
        else if(byActionId==Constants.CONTRACT_TRANSFER)
        {
             listHandler.showTransferContract();
        }
        else if(byActionId==Constants.APPROVE||byActionId==Constants.REJECT)
        {
            if(listHandler.validateRowSelection(iTransIds,false))
                detailedHandler.approve(byActionId,iTransIds[0],sUrl,arguments[2]);
        }
        else if(byActionId==Constants.IN_ACTIVATE)
        {
//            alert(iTransIds+"=="+listHandler.iModuleId)
            if(listHandler.validateRowSelection(iTransIds,true))
            {
                if(listHandler.iModuleId==Constants.CONTRACTS)
                {
                    listHandler.updateContractStatus(sUrl,0,iTransIds);
                }
                else if(listHandler.iModuleId==Constants.USERS)
                {
                    var cbView = document.getElementById("view");
                    if(cbView.options[cbView.selectedIndex].value==Constants.INACTIVE_USERS)
                    {
                        msg.showMessage(0,MsgHandler.getMsg(MsgConstants.USRALRDY_INACTIVE));

                    }
                    else
                        listHandler.unlockActivateUsers(sUrl,1);
                }
            }
        }
        else if(byActionId==Constants.RAISE_SALESORDER || byActionId==Constants.RAISE_SERIVICE_QUOTE)
        {
            var iTransIds = listView.getTransIds("listReportTab_1");
//            iBaseTransId = document.getElementById("transId").value;
            if(listHandler.validateRowSelection(iTransIds,false))
            {
                if(iTransIds.indexOf(',')>-0)
                {
                    if(byActionId==Constants.RAISE_SALESORDER)
                    msg.showMessage(0,MsgHandler.getMsg(MsgConstants.SELECT_QUOTE_FOR_SO));
                    else
                    msg.showMessage(0,MsgHandler.getMsg(MsgConstants.SELECT_SERVICE_QUOTE_FOR_SO));


                }
                else
                {
                    var sURL = "module/quote!updateSalesOrder.do";
                     if(byActionId==Constants.RAISE_SERIVICE_QUOTE)
                    sURL = "support/serviceQuote!saveServiceSalesOrder.do";
                    con.sendPostRequest(sURL,"quoteId="+iTransIds,null,"handler.handleRaiseSalesOrder",null,null,null,false,true,ACTION_SAVE);
                }
            }
        }
        else if(byActionId==Constants.EMAIL_QUOTE || byActionId==Constants.EMAIL_SERVICE_QUOTE)
        {
            var iTransIds = listView.getTransIds("listReportTab_1");
           if(listHandler.validateRowSelection(iTransIds,false))
           {
               var objTbl = new sTable("listReportTab_1");
              /* var iSelRow = objTbl.getCurrentRow();
               iSelRow = (iSelRow<0)?0:iSelRow;
               var iApprovalStatus = 0;
               var iAuthColIndex = objTbl.getColCount()-1 ;
               iApprovalStatus = objTbl.getValueAt(iSelRow,iAuthColIndex-1);*/
               var iApprovalStatus = listView.getAuthId("listReportTab_1");

               var iRelModuleId= listHandler.getModuleId();/*Constants.QUOTE;*/
               if(byActionId==Constants.EMAIL_SERVICE_QUOTE)
                   iRelModuleId = Constants.SERVICE_QUOTE;
               if(iApprovalStatus!=Constants.IAPPROVAL_STATUS.APPROVED)
               {
                   msg.showMessage(0,MsgHandler.getMsg(MsgConstants.MOD_PENDING_ACCESS_PENDING,0,0,clAppBuffer.getModuleCaption(iRelModuleId,true),MsgHandler.getMsg(MsgConstants.EMAIL)));
                   return false;
               }
               else
               {
                   handler.showSendMail(sUrl,arguments[2],arguments[3],arguments[4],0,iRelModuleId,byActionId,iRelModuleId);
               }
           }
        }
        else if(byActionId==Constants.CLOSE)
        {
            iModuleId=listView.getModuleId();
            if(iModuleId == Constants.CMS_DISPATCH)
            {
                if(listHandler.validateRowSelection(iTransIds,false))
                {
                     var iRowIndex = listView.getSelectedRowIndexes();
                    if(document.getElementById("iExtraId"+iRowIndex+"0")==null)
                        iExtraIdStatus = cross.getInnerText(document.getElementById("iExtraId"+iRowIndex[0]+"0"));
                    else
                        iExtraIdStatus = cross.getInnerText(document.getElementById("iExtraId"+iRowIndex+"0"));
                    if(iExtraIdStatus.length==0)
                        iExtraIdStatus=0;
                    if(iExtraIdStatus==ICMSConstants.IDISPATCH_STATUS.VALIDATED || iExtraIdStatus==ICMSConstants.IDISPATCH_STATUS.PARTIALLY_VALIDATED)
                        listHandler.onClkOpenActionInDLG(MsgHandler.getMsg(MsgConstants.CMS_CLOSING_DISPATCH),sUrl+"?rowTransId="+iTransIds,900,500,"closingDispatch.onClkSave()","clCloseDispatch");///cms/dispatchinfo!getCloseDispatch.do
                    else
                    {
                       msg.showMessage(0,MsgHandler.getMsg(MsgConstants.CMS_DISPATCH_CLOSE));
                    }
                    //listHandler.onClkOpenCloseDispatch("Closing Dispatch","/cms/dispatchinfo!getCloseDispatch.do?rowTransId="+iTransIds,900,450);
                }
            }
        }
        else if(byActionId==Constants.CANCEL)
        {
            iModuleId=listView.getModuleId();
            if(iModuleId == Constants.CMS_DISPATCH)// need to define constants
            {
                if(listHandler.validateRowSelection(iTransIds,false))
                {
                    var iRowIndex = listView.getSelectedRowIndexes();
                    if(document.getElementById("iExtraId"+iRowIndex+"0")==null)
                        iExtraIdStatus = cross.getInnerText(document.getElementById("iExtraId"+iRowIndex[0]+"0"));
                    else
                        iExtraIdStatus = cross.getInnerText(document.getElementById("iExtraId"+iRowIndex+"0"));
                    if(iExtraIdStatus.length==0)
                        iExtraIdStatus=0;
                    var iDlgWidth=410;
                    var iDlgHeight=220;

                    if(iExtraIdStatus==ICMSConstants.IDISPATCH_STATUS.DISPATCH_PREPARED)
                    {
                        iDlgWidth=410;
                        iDlgHeight=220;
                        listHandler.onClkOpenActionInDLG(MsgHandler.getMsg(MsgConstants.CMS_CANCEL_DISPATCH),sUrl+"?rowTransId="+iTransIds+"&statusId="+iExtraIdStatus,iDlgWidth,iDlgHeight,"clCancelDispatch.onClkSaveCancelDipatch()","clCancelDispatch");///cms/dispatchinfo!getCancelDispatch.do
                    }
                    else if(iExtraIdStatus==ICMSConstants.IDISPATCH_STATUS.VALIDATED
                            || iExtraIdStatus==ICMSConstants.IDISPATCH_STATUS.CLOSED)
                    {
                        iDlgWidth=700;
                        iDlgHeight=480;
//                        alert('iExtraIdStatus ==='+iExtraIdStatus);
                        listHandler.onClkOpenActionInDLG(MsgHandler.getMsg(MsgConstants.CMS_CANCEL_DISPATCH),sUrl+"?rowTransId="+iTransIds+"&statusId="+iExtraIdStatus,iDlgWidth,iDlgHeight,"clCancelDispatch.onClkSaveCancelDipatch()","clCancelDispatch");///cms/dispatchinfo!getCancelDispatch.do
                    }
                    else
                    {
                      msg.showMessage(0,MsgHandler.getMsg(MsgConstants.CMS_DISPATCH_CANCEL));
                    }
                    //listHandler.onClkOpenCancelDispatch("Cancel Dispatch","/cms/dispatchinfo!getCancelDispatch.do?rowTransId="+iTransIds,480,300);
                }
            }
            else if(iModuleId == Constants.CMS_BOOKING)
            {
                if(listHandler.validateRowSelection(iTransIds,true))
                {
                    var bCheck1=listHandler.validateCMSBookingRowStatus(byActionId,ICMSConstants.ISTATUS.VALID,ICMSConstants.ISTATUS.SHIPMENT_MISSING,ICMSConstants.ISTATUS.COURIER_ASSIGNED);
                    if(bCheck1)
                        listHandler.onClkOpenActionInDLG(MsgHandler.getMsg(MsgConstants.CMS_CANCEL_BOOKING),sUrl+"?rowTransId="+iTransIds,410,220,"clCancelBooking.onClkSaveCancelBooking()","clCancelBooking");///cms/booking!getCancelBooking.do
                    else
                        msg.showMessage(0,MsgHandler.getMsg(MsgConstants.CMS_CANCEL_SELECTED_RECORD));/*MsgHandler.getMsg(MsgConstants.SELECT_RECORD)*/
                    //listHandler.onClkOpenCloseDispatch("Closing Dispatch","/cms/dispatchinfo!getCloseDispatch.do?rowTransId="+iTransIds,900,450);
                }
            }
            else if(iModuleId == Constants.CMS_MANIFEST)
            {
                if(listHandler.validateRowSelection(iTransIds,true))
                {
                    var bCheck1=listHandler.validateCMSBookingRowStatus(byActionId,ICMSConstants.IMANIFEST_SHIPMENT_STATUS.MANIFEST_PREPARED);

                    if(bCheck1)
                    {
                        ///cms/booking!getValidateBooking.do
                        sUrl+="?arrTransIds="+iTransIds+"&moduleId="+iModuleId+"&actionId="+byActionId;
                        con.sendPostRequest(sUrl,null,null,listHandler.arhCancelManifest);
                    }
                    else
                        msg.showMessage(0,MsgHandler.getMsg(MsgConstants.CMS_CANCEL_SELECTED_RECORD));/*MsgHandler.getMsg(MsgConstants.SELECT_RECORD)*/
                    //listHandler.onClkOpenCloseDispatch("Closing Dispatch","/cms/dispatchinfo!getCloseDispatch.do?rowTransId="+iTransIds,900,450);
                }
            }
        }
        else if(byActionId==Constants.CONFIRM_BY_CHECKER)
        {
            iModuleId=listView.getModuleId();
            if(iModuleId == Constants.CMS_BOOKING)
            {
                 if(listHandler.validateRowSelection(iTransIds,false))
                 {
                     if(listHandler.validateCMSBookingRowStatus(byActionId,ICMSConstants.ISTATUS.COURIER_PICKED_UP,ICMSConstants.ISTATUS.SHIPMENT_ON_HOLD,ICMSConstants.ISTATUS.RELEASED))
                     {
                         /*var sUrl = "/cms/booking!getValidateBooking.do";
                         sUrl+="?arrTransIds="+iTransIds+"&moduleId="+iModuleId+"&actionId="+byActionId;
                         con.sendPostRequest(sUrl,null,null,listHandler.arhValidateBooking);*/
                         listHandler.onClkOpenActionInDLG(MsgHandler.getMsg(MsgConstants.CMS_CONFIRMSHIPMENT),
                                 sUrl+"?transId="+iTransIds+"&moduleId="+iModuleId+"&actionId="+byActionId
                                 ,620,450,
                                 "clConfirmBooking.onClkSaveStickers(true)","clConfirmShipment");///cms/booking!getConfirmShipment.do
                     }
                     else
                        msg.showMessage(0,MsgHandler.getMsg(MsgConstants.CMS_CONFIRM_SHIPMENT_VAL));
                 }
            }
        }
        else if(byActionId==Constants.PAYMENT_PROCESSED)
        {
            iModuleId=listView.getModuleId();
            if(iModuleId == Constants.CMS_BOOKING)
            {
                 if(listHandler.validateRowSelection(iTransIds,false))
                 {
                     //if(listHandler.validateCMSBookingRowStatus(byActionId,ICMSConstants.ISTATUS.PAYMENT_CONFIRMATION_AWAITED,ICMSConstants.ISTATUS.SHIPMENT_ON_HOLD))
                     {
                         ///cms/booking!getPaymentProcessed.do
                         sUrl+="?arrTransIds="+iTransIds+"&moduleId="+iModuleId+"&actionId="+byActionId;

                         listHandler.onClkOpenActionInDLG(MsgHandler.getMsg(MsgConstants.CMS_PAYMENT_PROCESSED),sUrl,380,200,"clCMSPaymentProcessed.onClkSavePaymentProcessed()","dlgPaymentProcessed");
//                         con.sendPostRequest(sUrl,null,null,listHandler.arhValidateBooking);
                     }
                     //else
                     //   msg.showMessage(0,MsgHandler.getMsg(MsgConstants.CMS_PAYMENT_PROCESS_VAL));
                 }
            }
        }
        else if(byActionId==Constants.CMS_TRUCKDISPATCHED || byActionId==Constants.CMS_ACCIDENT)
        {
            iModuleId=listView.getModuleId();
            if(iModuleId == Constants.CMS_DISPATCH)
            {
                 if(listHandler.validateRowSelection(iTransIds,false))
                 {
                     var iRowIndex = listView.getSelectedRowIndexes();
                    if(document.getElementById("iExtraId"+iRowIndex+"0")==null)
                        iExtraIdStatus = cross.getInnerText(document.getElementById("iExtraId"+iRowIndex[0]+"0"));
                    else
                        iExtraIdStatus = cross.getInnerText(document.getElementById("iExtraId"+iRowIndex+"0"));
                    if(iExtraIdStatus.length==0)
                        iExtraIdStatus=0;
                     if(iExtraIdStatus==ICMSConstants.IDISPATCH_STATUS.CLOSED)
                     {
                         if(byActionId==Constants.CMS_TRUCKDISPATCHED)
                             listHandler.onClkOpenActionInDLG(MsgHandler.getMsg(MsgConstants.CMS_TRUCKDISPATCHED),sUrl+"?rowTransId="+iTransIds,550,280,"clTruckDispatch.onClkSaveTruckDispatch()","dlgTruckDispatch");///cms/dispatchinfo!getTruckDispatch.do
                         else//accident
                         {
                             //var sUrl = "";/cms/booking!getValidateBooking.do
                             sUrl+="?arrTransIds="+iTransIds+"&moduleId="+iModuleId+"&actionId="+byActionId;
                             con.sendPostRequest(sUrl,null,null,listHandler.arhValidateBooking);
                             //                             listHandler.onClkOpenActionInDLG(MsgHandler.getMsg(MsgConstants.CMS_TRUCKDISPATCHED),"/cms/dispatchinfo!getTruckDispatch.do?rowTransId="+iTransIds,500,280,"clTruckDispatch.onClkSaveTruckDispatch()","dlgTruckDispatch");
                         }
                     }
                     else
                     {
                         if(byActionId==Constants.CMS_TRUCKDISPATCHED)
                            msg.showMessage(0,MsgHandler.getMsg(MsgConstants.CMS_VALIDMSG_TRUCKDISPATCHED));
                         else
                            msg.showMessage(0,MsgHandler.getMsg(MsgConstants.CMS_DISPATCH_ACCIDENT));
                     }
                 }
            }
        }
        else if(byActionId==Constants.VALIDATE)
        {
            iModuleId=listView.getModuleId();
            if(iModuleId == Constants.CMS_DISPATCH)// need to define constants
            {
                if(listHandler.validateRowSelection(iTransIds,false))
                {
                    var iRowIndex = listView.getSelectedRowIndexes();
                    var iExtraIdStatus = 0;
                    if(document.getElementById("iExtraId"+iRowIndex+"0")==null)
                        iExtraIdStatus = cross.getInnerText(document.getElementById("iExtraId"+iRowIndex[0]+"0"));
                    else
                        iExtraIdStatus = cross.getInnerText(document.getElementById("iExtraId"+iRowIndex+"0"));
                    if(iExtraIdStatus.length==0)
                        iExtraIdStatus=0;
                    if( iExtraIdStatus==ICMSConstants.IDISPATCH_STATUS.DISPATCH_PREPARED
                            || iExtraIdStatus==ICMSConstants.IDISPATCH_STATUS.VALIDATED || iExtraIdStatus==ICMSConstants.IDISPATCH_STATUS.PARTIALLY_VALIDATED )
                        listHandler.onClkOpenActionInDLG(MsgHandler.getMsg(MsgConstants.CMS_VALIDATE_DISPATCH),sUrl+"?rowTransId="+iTransIds,620,450,"clValidateDispatch.onClkSaveValidateDipatch()","clValidateDispatch");///cms/dispatchinfo!getValidateDispatch.do
                    else
                    {
                       msg.showMessage(0,MsgHandler.getMsg(MsgConstants.CMS_DISPATCH_VALIDATE));
                    }
                    //listHandler.onClkOpenValidateDispatch("Validate Dispatch","/cms/dispatchinfo!getValidateDispatch.do?rowTransId="+iTransIds,520,350);
                }
            }
            else if(iModuleId == Constants.CMS_BOOKING)
            {
                 if(listHandler.validateRowSelection(iTransIds,true))
                 {
                     if(listHandler.validateCMSBookingRowStatus(byActionId,ICMSConstants.ISTATUS.PENDING))
                     {
                         ///cms/booking!getValidateBooking.do
                         sUrl+="?arrTransIds="+iTransIds+"&moduleId="+iModuleId+"&actionId="+byActionId;
                         con.sendPostRequest(sUrl,null,null,listHandler.arhValidateBooking);
                     }
                     else
                        msg.showMessage(0,MsgHandler.getMsg(MsgConstants.CMS_VALIDATE_PENDING_STAUTS));
                 }
            }
            else if(iModuleId == Constants.CMS_DELIVERIES)
            {
//                 if(listHandler.validateRowSelection(iTransIds,true))
//                 {
                     // noo need to check condition for validate deliveries
                     var bCheck=true;//listHandler.validateCMSDeliveriesRowStatus(byActionId,ICMSConstants.ISTATUS.DELIVERY_ASSIGNED);
                     if(bCheck)
                     {
                         listHandler.onClkOpenActionInDLG(MsgHandler.getMsg(MsgConstants.CMS_VALIDATE_DELIVERY),sUrl+"?rowTransId="+iTransIds+"&delivery=1",600,400,"clValidateDeliverey.onClkSaveValidateDelivery()","clValidateDelivrey");///cms/deliveries!getValidateDelivery.do
                     }
                     else
                        msg.showMessage(0,MsgHandler.getMsg(MsgConstants.CMS_VALIDATE_PENDING_STAUTS));
//                 }
            }
            else if(iModuleId == Constants.CMS_ARRIVALS)
            {
                if(listHandler.validateRowSelection(iTransIds,false))
                {
                    var iRowIndex = listView.getSelectedRowIndexes();
                    var iExtraIdStatus=0;
                    if(document.getElementById("iExtraId"+iRowIndex+"0")==null)
                        iExtraIdStatus = cross.getInnerText(document.getElementById("iExtraId"+iRowIndex[0]+"0"));
                    else
                        iExtraIdStatus = cross.getInnerText(document.getElementById("iExtraId"+iRowIndex+"0"));
                    if(iExtraIdStatus.length==0 || $.trim(iExtraIdStatus).length==0)
                        iExtraIdStatus=0;
//                    if(iExtraIdStatus==ICMSConstants.IARRIVAL_STATUS.ARRIVAL_PREPARED)
                        listHandler.onClkOpenActionInDLG(MsgHandler.getMsg(MsgConstants.CMS_VALIDATE_ARRIVAL),sUrl+"?dispRefNo="+iTransIds,620,450,"clValidateArrival.onClkSaveValidateArrival()","clValidateArrival");///cms/arrivals!getValidateArrival.do
                    /*else
                    {
                       msg.showMessage(0,MsgHandler.getMsg(MsgConstants.CMS_ARRIVAL_VALIDATE));
                    }*/

                }
             }
        }
        else if(byActionId==Constants.CONFIRM_BOOKING)
        {
            iModuleId=listView.getModuleId();
            if(iModuleId == Constants.CMS_BOOKING)
            {
                 if(listHandler.validateRowSelection(iTransIds,true))
                 {
                     if(listHandler.validateCMSBookingRowStatus(byActionId,ICMSConstants.ISTATUS.PENDING))
                     {
                         ///cms/booking!getValidateBooking.do
                         sUrl+="?arrTransIds="+iTransIds+"&moduleId="+iModuleId+"&actionId="+byActionId;
                         con.sendPostRequest(sUrl,null,null,listHandler.arhValidateBooking);
                     }
                     else
                        msg.showMessage(0,MsgHandler.getMsg(MsgConstants.CMS_VALIDATE_PENDING_STAUTS));
                 }
            }

        }
        else if(byActionId==Constants.MISSING)
        {
            iModuleId=listView.getModuleId();
            if(iModuleId == Constants.CMS_BOOKING)
            {
                if(listHandler.validateRowSelection(iTransIds,true))
                {
                    if(listHandler.validateCMSBookingRowStatus(byActionId,ICMSConstants.ISTATUS.COURIER_ASSIGNED))
                        listHandler.onClkOpenActionInDLG(MsgHandler.getMsg(MsgConstants.CMS_MISSING_PICKUPS),sUrl+"?rowTransId="+iTransIds,380,200,"clReasonMissing.onClkSave()","clMissingPickups");///cms/booking!getMissingPickups.do
                    else
                        msg.showMessage(0,MsgHandler.getMsg(MsgConstants.CMS_MISSING_ASSIGN_SHIPMENTS));
                    //listHandler.onClkOpenCloseDispatch("Closing Dispatch","/cms/dispatchinfo!getCloseDispatch.do?rowTransId="+iTransIds,900,450);
                }
            }
        }
        else if(byActionId==Constants.TRUCKCHANGE)
        {
            iModuleId=listView.getModuleId();
            if(iModuleId == Constants.CMS_DISPATCH)
            {
                 if(listHandler.validateRowSelection(iTransIds,false))
                {
                    var iRowIndex = listView.getSelectedRowIndexes();
                    if(document.getElementById("iExtraId"+iRowIndex+"0")==null)
                        iExtraIdStatus = cross.getInnerText(document.getElementById("iExtraId"+iRowIndex[0]+"0"));
                    else
                        iExtraIdStatus = cross.getInnerText(document.getElementById("iExtraId"+iRowIndex+"0"));
                    if(iExtraIdStatus.length==0)
                        iExtraIdStatus=0;
                    if(iExtraIdStatus==ICMSConstants.IDISPATCH_STATUS.CLOSED)
                        listHandler.onClkOpenActionInDLG(MsgHandler.getMsg(MsgConstants.CMS_TRUCK_CHANGE),sUrl+"?rowTransId="+iTransIds,500,350,"truckChg.onClkSave()","clTruckChange");///cms/dispatchinfo!getTruckChange.do
                    else
                    {
                       msg.showMessage(0,MsgHandler.getMsg(MsgConstants.CMS_DISPATCH_CHANGE));
                    }
                    //listHandler.onClkOpenCloseDispatch("Closing Dispatch","/cms/dispatchinfo!getCloseDispatch.do?rowTransId="+iTransIds,900,450);
                }
            }
        }
        else if(byActionId==Constants.DRIVERCHANGE)
        {
            iModuleId=listView.getModuleId();
            if(iModuleId == Constants.CMS_DISPATCH)
            {
                 if(listHandler.validateRowSelection(iTransIds,false))
                {
                    var iRowIndex = listView.getSelectedRowIndexes();
                    if(document.getElementById("iExtraId"+iRowIndex+"0")==null)
                        iExtraIdStatus = cross.getInnerText(document.getElementById("iExtraId"+iRowIndex[0]+"0"));
                    else
                        iExtraIdStatus = cross.getInnerText(document.getElementById("iExtraId"+iRowIndex+"0"));
                    if(iExtraIdStatus.length==0)
                        iExtraIdStatus=0;
                    if(iExtraIdStatus==ICMSConstants.IDISPATCH_STATUS.CLOSED)
                        listHandler.onClkOpenActionInDLG(MsgHandler.getMsg(MsgConstants.CMS_DRIVER_CHANGE),sUrl+"?rowTransId="+iTransIds,740,403,"driverChg.onClkSave()","clDriverChange");///cms/dispatchinfo!getDriverChange.do
                    else
                    {
                       msg.showMessage(0,MsgHandler.getMsg(MsgConstants.CMS_DISPATCH_CHANGE));
                    }
                    //listHandler.onClkOpenCloseDispatch("Closing Dispatch","/cms/dispatchinfo!getCloseDispatch.do?rowTransId="+iTransIds,900,450);
                }
            }
        }
        else if(byActionId==Constants.SHIPMENT_RETURN)
        {
            iModuleId=listView.getModuleId();
            //alert('sUrl YYYYYYYYY===== '+sUrl);
            if(iModuleId == Constants.CMS_DELIVERIES)
            {
                 if(listHandler.validateRowSelection(iTransIds,true))
                {
                    if(listHandler.validateCMSDeliveriesRowStatus(byActionId,ICMSConstants.ISTATUS.DELIVERY_ASSIGNED,ICMSConstants.ISTATUS.READY_TO_COLLECT,ICMSConstants.ISTATUS.SHIPMENT_AT_WAREHOUSE))
                        listHandler.onClkOpenActionInDLG(MsgHandler.getMsg(MsgConstants.CMS_SHIPMENT_RETURN),sUrl+"?rowTransId="+iTransIds,380,200,"clShipmentReturn.onClkSave()","clReturnShipment");///cms/deliveries!getShipmentReturn.do
                    else
                        msg.showMessage(0,MsgHandler.getMsg(MsgConstants.CMS_DELIVERIES_SHIPRETURN));
                }
            }
        }
        else if(byActionId==Constants.DAMAGE_SHIPMENT)
        {
            iModuleId=listView.getModuleId();
            if(iModuleId == Constants.CMS_DELIVERIES)
            {
                if(listHandler.validateRowSelection(iTransIds,false))
                {
                    if(listHandler.validateCMSDeliveriesRowStatus(byActionId,ICMSConstants.ISTATUS.DELIVERY_CLOSE,ICMSConstants.ISTATUS.DELIVERED))
                        listHandler.onClkOpenActionInDLG(MsgHandler.getMsg(MsgConstants.CMS_DAMAGE_SHIPMENT),sUrl+"?rowTransId="+iTransIds,400,220,"clDamageShipment.onClkSave()","clDamageShipment");///cms/deliveries!getDamageShipment.do
                    else
                        msg.showMessage(0,MsgHandler.getMsg(MsgConstants.CMS_DELIVERIES_DAMAGESHIPMENT));
                    //listHandler.onClkOpenCloseDispatch("Closing Dispatch","/cms/dispatchinfo!getCloseDispatch.do?rowTransId="+iTransIds,900,450);
                }
            }
        }
        else if(byActionId==Constants.PICKED_UP)
        {
            iModuleId=listView.getModuleId();
            if(iModuleId == Constants.CMS_BOOKING)
            {
                if(listHandler.validateRowSelection(iTransIds,true))
                {
                    if(listHandler.validateCMSBookingRowStatus(byActionId,ICMSConstants.ISTATUS.COURIER_ASSIGNED,ICMSConstants.ISTATUS.READY_TO_RECEIVE))
                    {
//                        var sUrl = "";/cms/booking!getPickUpBooking.do
                        sUrl+="?arrTransIds="+iTransIds+"&moduleId="+iModuleId+"&actionId="+byActionId;
                        con.sendPostRequest(sUrl,null,null,listHandler.arhPickedUpBooking);
                    }
                    else
                        msg.showMessage(0,MsgHandler.getMsg(MsgConstants.CMS_PICKEDUP_ASSIGN_SHIPMENTS));
                }
            }
        }
        else if(byActionId==Constants.CMS_HOLD)
        {
            iModuleId=listView.getModuleId();
            if(iModuleId == Constants.CMS_BOOKING || iModuleId == Constants.CMS_DELIVERIES)
            {
                if(listHandler.validateRowSelection(iTransIds,false))
                {
/*                  if(listHandler.validateCMSBookingRowStatus(byActionId,ICMSConstants.ISTATUS.PENDING,ICMSConstants.ISTATUS.DELIVERED,
                        ICMSConstants.ISTATUS.SHIPMENT_ON_HOLD,ICMSConstants.ISTATUS.COURIER_PICKED_UP))    */
//                    if(listHandler.validateCMSBookingRowStatus(byActionId,ICMSConstants.ISTATUS.PENDING,ICMSConstants.ISTATUS.COURIER_PICKED_UP))
                    if(listHandler.validateCMSBookingRowStatus(byActionId,ICMSConstants.ISTATUS.DELIVERED,ICMSConstants.ISTATUS.COMPLETED,ICMSConstants.ISTATUS.PENDING))
                    {
                        listHandler.onClkOpenActionInDLG(MsgHandler.getMsg(MsgConstants.CMS_HOLD_BOOKING),sUrl+"?rowTransId="+iTransIds,500,350,"clHold.onClkSaveHold()","dlgHold");///cms/booking!getHoldBooking.do
                    }
                    else
                        msg.showMessage(0,MsgHandler.getMsg(MsgConstants.CMS_HOLD_VALIDATION));
                }
            }
        }
        else if(byActionId==Constants.CMS_RELEASE)
        {
            iModuleId=listView.getModuleId();
            if(iModuleId == Constants.CMS_BOOKING || iModuleId == Constants.CMS_DELIVERIES)
            {
                if(listHandler.validateRowSelection(iTransIds,false))
                {
                    if(listHandler.validateCMSBookingRowStatus(byActionId,ICMSConstants.ISTATUS.PAYMENT_CONFIRMED,ICMSConstants.ISTATUS.SHIPMENT_ON_HOLD))
                    {
//                         var sUrl = "/cms/booking!getValidateBooking.do";
                         sUrl+="?arrTransIds="+iTransIds+"&moduleId="+iModuleId+"&actionId="+byActionId;
                         con.sendPostRequest(sUrl,null,null,listHandler.arhValidateBooking);
                    }
                    else
                        msg.showMessage(0,MsgHandler.getMsg(MsgConstants.CMS_RELEASE_VALIDATION));
                }
            }
        }
        else if(byActionId==Constants.TRUCKANDDRIVERCHANGE)
        {
            iModuleId=listView.getModuleId();
            if(iModuleId == Constants.CMS_DISPATCH)
            {
                var iRowIndex = listView.getSelectedRowIndexes();
                if(document.getElementById("iExtraId"+iRowIndex+"0")==null)
                    iExtraIdStatus = cross.getInnerText(document.getElementById("iExtraId"+iRowIndex[0]+"0"));
                else
                    iExtraIdStatus = cross.getInnerText(document.getElementById("iExtraId"+iRowIndex+"0"));
                if(iExtraIdStatus.length==0)
                    iExtraIdStatus=0;
                if(iExtraIdStatus==ICMSConstants.IDISPATCH_STATUS.CLOSED)
                    listHandler.onClkOpenActionInDLG(MsgHandler.getMsg(MsgConstants.CMS_TRUCK_DRIVER_CHANGE),sUrl+"?rowTransId="+iTransIds,620,500,"clTruckDriverChg.onClkSave()","clTruckdriverChange");///cms/dispatchinfo!getDriverTruckChange.do
                else
                {
                    msg.showMessage(0,MsgHandler.getMsg(MsgConstants.CMS_DISPATCH_CHANGE));
                }
            }
        }
        else if(byActionId==Constants.DELIVERY_CLOSE)//mark as delivery action for fulfillment
        {
            iModuleId=listView.getModuleId();
            //alert(iModuleId)
            if(iModuleId == Constants.CMS_DELIVERIES)
            {
                if(listHandler.validateRowSelection(iTransIds,false))
                {

                    if (listHandler.validateCMSDeliveriesRowStatus(byActionId, ICMSConstants.ISTATUS.DELIVERY_ASSIGNED, ICMSConstants.ISTATUS.READY_TO_COLLECT, ICMSConstants.ISTATUS.CONSIGNEE_WILL_COLLECT, ICMSConstants.ISTATUS.ON_THE_WAY_TO_DELIVERY))
                        listHandler.onClkOpenActionInDLG(MsgHandler.getMsg(MsgConstants.CMS_DELIVERY_CLOSE), sUrl + "?viewIn=1&sFnSaveCallback=clCMSDeliveries.hideDeliveryDlg&transId=" + iTransIds + "&moduleId=" + iModuleId, 900, 450, "clCMSDeliveries.onClkSaveDeliveries()", "clCloseDelivery");//module/moduleView!getEditView.do
                    else {
                        msg.showMessage(0, MsgHandler.getMsg(MsgConstants.CMS_DELIVERIES_DELCLOSE));
                    }
                    //listHandler.onClkOpenCloseDispatch("Closing Dispatch","/cms/dispatchinfo!getCloseDispatch.do?rowTransId="+iTransIds,900,450);
                }
            }
            else if(iModuleId==Constants.IModuleTypes.FIN_SALES_ORDERS || iModuleId==Constants.IModuleTypes.FIN_SALES_INVOICES || iModuleId==Constants.IModuleTypes.FULFILLMENTS)
            {
                if(listHandler.validateRowSelection(iTransIds, false))
                {
                    if(iModuleId==Constants.IModuleTypes.FULFILLMENTS)
                    {
                        var isValid, arrExtraIds, iFulfillmentStatusId;
                        arrExtraIds = listView.getExtraIds("", true);
                        iFulfillmentStatusId = parseInt(arrExtraIds[0]);
                        isValid = me.isValidMarkAsDelivery(iFulfillmentStatusId, iModuleId);
                        if(isValid)
                            me.doMarkAsDelivery(iModuleId, iTransIds[0]);
                    }
                    else
                    {
                        var iActionView=Constants.IActionPosition.LIST_VIEW;
                        var sSubmitData="transId=" + iTransIds[0] + "&moduleId=" + iModuleId+"&actionId="+byActionId+"&actionView="+iActionView;
                        con.sendPostRequest("/social/fulfillment!isValidateFulfillment.do",sSubmitData , null, me.resDoMarkAsDelivery, null, null, null, false, false, ACTION_SAVE);
                    }
                }
            }
        }
        else if(byActionId==Constants.ROUTE_CHANGE)
        {
            iModuleId=listView.getModuleId();
            //alert(iModuleId)
            if(iModuleId == Constants.CMS_DELIVERIES)
            {
                if(listHandler.validateRowSelection(iTransIds,false))
                {

                    if(listHandler.validateCMSDeliveriesRowStatus(byActionId,ICMSConstants.ISTATUS.ARRIVED_AT_DESTINATION,
                            ICMSConstants.ISTATUS.DELIVERY_ASSIGNED,ICMSConstants.ISTATUS.RETURNED_TO_DESTINATION_WAREHOUSE,
                            ICMSConstants.ISTATUS.READY_TO_COLLECT,ICMSConstants.ISTATUS.PENDING))
                    {
//                         var sUrl = "/cms/deliveries!getRouteChange.do";
                         sUrl+="?wayBillNo="+iTransIds;//+"&moduleId="+iModuleId+"&actionId="+byActionId;
                         con.sendPostRequest(sUrl,null,null,listHandler.arhRoutechange);
                        //listHandler.onClkOpenActionInDLG(MsgHandler.getMsg(MsgConstants.CMS_ROUTE_CHANGE),"/cms/deliveries!getRouteChange.do?rowTransId="+iTransIds,900,450,"clCMSDeliveries.onClkSaveDeliveries()","clCloseDelivery");
                    }
                    else
                    {
                       msg.showMessage(0,MsgHandler.getMsg(MsgConstants.CMS_DELIVERIES_ROUTECHNG));
                    }
                    //listHandler.onClkOpenCloseDispatch("Closing Dispatch","/cms/dispatchinfo!getCloseDispatch.do?rowTransId="+iTransIds,900,450);
                }
            }
        }
        else if(byActionId==Constants.RETURN_WAYBILL)
        {
            iModuleId=listView.getModuleId();
            //alert(iModuleId)
            if(iModuleId == Constants.CMS_DELIVERIES)
            {
                if(listHandler.validateRowSelection(iTransIds,false))
                {
                    if(listHandler.validateCMSDeliveriesRowStatus(byActionId,ICMSConstants.ISTATUS.ARRIVED_AT_DESTINATION,
                        ICMSConstants.ISTATUS.DELIVERY_ASSIGNED,ICMSConstants.ISTATUS.RETURNED_TO_DESTINATION_WAREHOUSE,
                        ICMSConstants.ISTATUS.READY_TO_COLLECT))    ///,ICMSConstants.ISTATUS.CONSIGNEE_WILL_COLLECT
                    {
                        //listHandler.onClkOpenActionInDLG("Return Waybill","/cms/deliveries!getReturnWaybill.do?rowTransId="+iTransIds,900,450,"clCMSDeliveries.onClkSaveDeliveries()","clCloseDelivery");

//                         var sUrl = "/cms/deliveries!getReturnWaybill.do";
//                         sUrl+="?wayBillNo="+iTransIds+"&calledFrom="+Constants.CMS_DELIVERIES;//+"&moduleId="+iModuleId+"&actionId="+byActionId;
                         sUrl+="?wayBillNo="+iTransIds;//+"&moduleId="+iModuleId+"&actionId="+byActionId;
                        //alert('sUrl==='+sUrl);
                         con.sendPostRequest(sUrl,null,null,listHandler.arhreturnWayBill);
                    }
                    else
                    {
                       msg.showMessage(0,MsgHandler.getMsg(MsgConstants.CMS_DELIVERIES_RETURNWAYBL));
                    }
                    //listHandler.onClkOpenCloseDispatch("Closing Dispatch","/cms/dispatchinfo!getCloseDispatch.do?rowTransId="+iTransIds,900,450);
                }
            }
        }
        else if(byActionId==Constants.CONSIGNEE_WILL_COLLECT)
        {
            iModuleId=listView.getModuleId();
            //alert(iModuleId)
            if(iModuleId == Constants.CMS_DELIVERIES)
            {
                if(listHandler.validateRowSelection(iTransIds,false))
                {
                    if(listHandler.validateCMSDeliveriesRowStatus(byActionId,ICMSConstants.ISTATUS.ARRIVED_AT_DESTINATION,
                            ICMSConstants.ISTATUS.DELIVERY_ASSIGNED,ICMSConstants.ISTATUS.READY_TO_COLLECT,
                            ICMSConstants.ISTATUS.RETURNED_TO_DESTINATION_WAREHOUSE,ICMSConstants.ISTATUS.PENDING))
                    {
//                        var sUrl = "/cms/deliveries!saveConsigneeWillCollect.do";
                         sUrl+="?wayBillNo="+iTransIds+"&moduleId="+iModuleId+"&actionId="+byActionId;
                         con.sendPostRequest(sUrl,null,null,listHandler.arhConsigneewillcollect);
                    }
                    else
                    {
                       msg.showMessage(0,MsgHandler.getMsg(MsgConstants.CMS_CONSIGNEE_WILCOLLECT));
                    }
                    //listHandler.onClkOpenCloseDispatch("Closing Dispatch","/cms/dispatchinfo!getCloseDispatch.do?rowTransId="+iTransIds,900,450);
                }
            }
        }
        else if(byActionId==Constants.REQUESTED_TO_DELIVER)
        {
            iModuleId=listView.getModuleId();
            //alert(iModuleId)
            if(iModuleId == Constants.CMS_DELIVERIES)
            {
                if(listHandler.validateRowSelection(iTransIds,false))
                {
                    if(listHandler.validateCMSDeliveriesRowStatus(byActionId,ICMSConstants.ISTATUS.CONSIGNEE_WILL_COLLECT))
                    {
//                        var sUrl = "/cms/deliveries!saveConsigneeWillCollect.do";
                         sUrl+="?wayBillNo="+iTransIds+"&moduleId="+iModuleId+"&actionId="+byActionId;
                         con.sendPostRequest(sUrl,null,null,listHandler.arhRequestDelivered);
                    }
                    else
                    {
                       msg.showMessage(0,MsgHandler.getMsg(MsgConstants.CMS_VALIDATE_REQUESTED_TO_DELIVER));
                    }
                    //listHandler.onClkOpenCloseDispatch("Closing Dispatch","/cms/dispatchinfo!getCloseDispatch.do?rowTransId="+iTransIds,900,450);
                }
            }
        }
         else if(byActionId==Constants.CONFIRM_DELIVERY)
        {
            iModuleId=listView.getModuleId();
            //alert(iModuleId)
            if(iModuleId == Constants.CMS_DELIVERIES)
            {
                if(listHandler.validateRowSelection(iTransIds,true))
                {
                    if(listHandler.validateCMSDeliveriesRowStatus(byActionId,ICMSConstants.ISTATUS.DELIVERED,ICMSConstants.ISTATUS.PARTIALLY_DELIVERED))
                    {
                         sUrl+="?arrTransIds="+iTransIds+"&moduleId="+iModuleId+"&actionId="+byActionId;
                         con.sendPostRequest(sUrl,null,null,listHandler.arhRequestDelivered);
                    }
                    else
                    {
                       msg.showMessage(0,MsgHandler.getMsg(MsgConstants.CMS_CONFIRM_DELIVERY));
                    }
                    //listHandler.onClkOpenCloseDispatch("Closing Dispatch","/cms/dispatchinfo!getCloseDispatch.do?rowTransId="+iTransIds,900,450);
                }
            }
        }
         else if(byActionId==Constants.RETURN_TO_WAREHOUSE)
        {
            iModuleId=listView.getModuleId();
            //alert(iModuleId)
            if(iModuleId == Constants.CMS_DELIVERIES)
            {
                listHandler.onClkOpenActionInDLG(MsgHandler.getMsg(MsgConstants.CMS_DELIVERY_CANCEL_TO_WAH),sUrl+"?rowTransId="+iTransIds,600,400,"clValidateDeliverey.onClkSaveValidateDelivery()","clValidateDelivrey");///cms/deliveries!getValidateDelivery.do
            }
        }
       else if(byActionId == Constants.CALL_RESPONSE)
        {
            if(listHandler.validateRowSelection(iTransIds,true))
            {
                listHandler.onClkOpenActionInDLG(MsgHandler.getMsg(MsgConstants.CALLER_SCREEN_RESPONSE),"/tele/teleMkt!getCallResponse.do",595,450,"clCallerResponse.onClkSaveCallResponse()","dlgCallerResponse");
            }

        }
        else if(byActionId == Constants.APPLICATION_FEE)
           {
                if(listHandler.validateRowSelection(iTransIds,true))
                 listHandler.getApplicationFee(iTransIds,sUrl);
           }
        else if(byActionId == Constants.REJECT_APPLICATION)
           {
               if(listHandler.validateRowSelection(iTransIds,true))
                listHandler.getRejectApplication(iTransIds,sUrl);
           }
        else if(byActionId == Constants.ACCEPT_APPLICATION)
           {
               if(listHandler.validateRowSelection(iTransIds,true))
                listHandler.getAcceptApplication(iTransIds,sUrl);
           }
        else if(byActionId == Constants.ADMISSION_FEE)
           {
               if(listHandler.validateRowSelection(iTransIds,false))
                listHandler.getAdmissionFee(iTransIds,sUrl);
           }
        else if(byActionId == Constants.REGISTER)
           {
               if(listHandler.validateRowSelection(iTransIds,false))
                listHandler.getRegistration(iTransIds);
           }
        else if(byActionId == Constants.SIGNWITH_SIGNEASY)
           {
               sUrl="social/signEasySettings!getSignEasyAuthInfo.do";
               con.sendPostRequest(sUrl, null, null, "handler.arhSignEasy")
           }
        else if(byActionId == Constants.PULL_DOCUMENTS)
        {
            sUrl="social/signEasySettings!getSignEasyAuthInfo.do";
            con.sendPostRequest(sUrl, null, null, "handler.arhPullSignEasy")
        }
        else if(byActionId == Constants.EXPORT_MAILCHIMP)
        {
            listHandler.onClkShowExportMailChimp();
        }
        else if(byActionId == Constants.IMPORT_FROM_MAILCHIMP)
        {
            listHandler.onClkShowImportMailChimp();
        }
        else if(byActionId == Constants.CLOSE_LINK)
        {
            /*if(listHandler.validateRowSelection(iTransIds,false))
            {
                iModuleId = listView.getModuleId();
                var sParams = "sourceModuleId=" + iModuleId + "&transId=" + iTransIds[0];
                con.sendPostRequest("module/m!updatePendingLinkStatus.do", sParams, null, "handler.arhPendingLinkUpdateStatus");
            }*/
            if(listHandler.validateRowSelection(iTransIds,false))
            {
                iModuleId = listView.getModuleId();
                sUrl = "module/m!getWorkflowLinks.do?moduleId="+iModuleId;
                var clWorkFlowlinks = new DialogBox("workflowLinks", "Select Workflow Link", 100, 50, 400, 250, sUrl, false, null, true, true, null, null, null, null, null, null, false, null, false, true);
                clWorkFlowlinks.setCenter();
            }
            /*if (listHandler.validateRowSelection(iTransIds, false))
            {
                var arrActions = new Array();
                arrActions[0] = MsgHandler.getMsg(MsgConstants.CLOSE_LINK) + "|clLinkModuleFldDlg.onClkUpdateProduct";
                arrActions[1] = MsgHandler.getMsg(MsgConstants.CANCEL) + "|clLinkModuleFldDlg.onClkHideDlgBox";
                var sUrl = "module/m!getSourceLinkPendingItems.do";
                var sParams = "";
                sParams += "?sourceModuleId=" + listView.getModuleId() + "&isCloseLink=true";
                sParams +="&transId="+iTransIds[0];
                var linkSourceModuleDlg = new DialogBox("linkModuleDlg", MsgHandler.getMsg(MsgConstants.CLOSE_LINKS), 100, 50, 950, 550, sUrl + sParams, false, null, true, true, arrActions, null, null, true, null, null, false, null, false, true);
                linkSourceModuleDlg.setCenter();
                linkSourceModuleDlg.show();
            }*/
        }
        else if(byActionId == Constants.IActions.RAISE_FULFILLMENT)
        {
            if(listHandler.validateRowSelection(iTransIds,false))
            {
                var iActionView=Constants.IActionPosition.LIST_VIEW;
                var sSubmitData="transId=" + iTransIds[0] + "&moduleId=" + listView.getModuleId()+"&actionView="+iActionView;
                con.sendPostRequest("/social/fulfillment!isValidateFulfillment.do",sSubmitData, null, me.resFulfillmentSI, null, null, null, false, false, ACTION_LOADING);
            }
        }
        else if(byActionId == Constants.IActions.RETURN_REQUEST)
        {
            var iStatus = 0;
            var iTransIds = listHandler.getSelectedTransIds();
            var iExtraIds = listView.getExtraIds();
            if(iExtraIds!=null && iExtraIds.length>0)
                iStatus = iExtraIds[0];
            if (iTransIds != null && iTransIds.length > 1) {
                msg.showMessage(0, MsgHandler.getMsg(MsgConstants.MULTI_SELECT_NOT_ALLOWED, 0, 0, clAppBuffer.getModuleCaption(listView.getModuleId(), true)));

            }
            else if(iStatus == Constants.IFULFILLMENT_STATUS.DELIVERED) {
                me.showReturnRequestDlg(listView.getModuleId(),iTransIds[0],byActionId);
            }
            else {
                msg.showMessage(0, MsgHandler.getMsg(MsgConstants.RETURN_REQUEST_DELIVERED_ACTION, 0, 0, clAppBuffer.getModuleCaption(listView.getModuleId(), true)));

            }
        //}
        //else if(byActionId == Constants.IActions.VERIFY_RETURN_REQUEST) {
        //    var iTransIds = listHandler.getSelectedTransIds();
        //    var arrExtraIds = listView.getExtraIds();
        //    var isVerifiedRecord = parseInt(arrExtraIds[0])==1?true:false;
        //    if (iTransIds != null && iTransIds.length > 1) {
        //        msg.showMessage(0, MsgHandler.getMsg(MsgConstants.MULTI_SELECT_NOT_ALLOWED, 0, 0, clAppBuffer.getModuleCaption(listView.getModuleId(), true)));
        //        return;
        //    }
        //    else if(!isVerifiedRecord) {
        //        me.showVerifyReturnRequestDlg(listView.getModuleId(), iTransIds[0], byActionId);
        //    }
        //    else {
        //        msg.showMessage(0, MsgHandler.getMsg(MsgConstants.RECORD_VERIFIED, 0, 0, clAppBuffer.getModuleCaption(listView.getModuleId(), true)));
        //        return;
        //    }

        }
        else if(byActionId==Constants.IActions.RECORD_RECEIPT) //raise receipt
        {
            if(listHandler.validateRowSelection(iTransIds,false))
            {
                var iModuleId,arrExtraId;
                iModuleId=listView.getModuleId();
                arrExtraId = listView.getExtraIds("",true);
                if(arrExtraId[0]!=Constants.ITransStatus.PAID)
                {
                    sUrl += "&calledFrom=" + iModuleId + "&callingTransId=" + iTransIds[0];
                    sUrl += "&baseModuleId=" + iModuleId + "&baseTransId=" + iTransIds[0];
                    home.setCenterUI(sUrl);
                }
                else
                {
                    msg.showMessage(0,MsgHandler.getMsg(MsgConstants.PAYMENT_RECORD_ACTION, 0, 0,clAppBuffer.getModuleCaption(iModuleId,true)));
                    return false;
                }
            }
        }
        else if( byActionId == Constants.IActions.IMPORT_SFG )
        {
            listHandler.selectSFGFile();
        }
    };
    //validation for Raise fulfillment
    this.isValidRaiseFulfillment=function(iFulfillmentStatusId,iModuleId)
    {
        var sMessage="";
        if(iFulfillmentStatusId==Constants.IFULFILLMENT_STATUS.FULFILLED || iFulfillmentStatusId==Constants.IFULFILLMENT_STATUS.DELIVERED)
            sMessage="selected "+clAppBuffer.getModuleCaption(iModuleId,true)+" has fulfilled";
        else
            sMessage="Fulfillment has already generated against "+clAppBuffer.getModuleCaption(iModuleId,true);
        msg.showMessage(0,sMessage);
        return false;
    };
    //raise fulfillment action
    this.showFulfillmentDlg=function(iBaseModuleId,iBaseTransId)
    {
        var sUrl = "/module/moduleView!getEditView.do?moduleId="+Constants.IModuleTypes.FULFILLMENTS+"&viewIn=" + Constants.MODULE_IN_DLG + "&sFnSaveCallback=parent.handler.hideFulfillmentDlg&baseModuleId="+iBaseModuleId+
            "&baseTransId="+iBaseTransId+"&calledFrom="+iBaseModuleId;
        var clDlg = new DialogBox("dlgFulfillment", "Fulfillment", 100, 50, 900, 500, sUrl, true, null, true, true, null);
        clDlg.setCenter();
        clDlg.show();
    };
    this.hideFulfillmentDlg=function(sResponse,iStatusCode) {
        if (iStatusCode == MSG_SUCCESS_STATUS_ONLY || iStatusCode == MSG_SUCCESS)
        {
            getDialogBox("dlgFulfillment").hide();
            msg.showToastMsg(" Record saved successfully.");
            listView.refreshListView(null, null, true);
        }
    };
    //response of Raise fulfillment for Sales Invoice
    this.resFulfillmentSI=function(sResponse)
    {
        if(sResponse!=null)
        {
            var arrReponse=eval(sResponse);
            if(parseInt(arrReponse[0])==Constants.MSG_SUCCESS)
            {
                var iModuleId,iTransId;
                iModuleId=parseInt(arrReponse[1]);
                iTransId=parseInt(arrReponse[2]);
                me.showFulfillmentDlg(iModuleId, iTransId);
            }
        }
    };

    //verify ECart Return request action
    //this.showVerifyReturnRequestDlg=function(iBaseModuleId,iBaseTransId,byActionId)
    //{
    //    var arrActions=new Array();
    //    var sUrl = "/module/returnRequest!getVerifyReturnRequestDlg.do?moduleId="+Constants.IModuleTypes.ECART_RETURN_REQUEST;
    //    sUrl+="&transId="+iBaseTransId+"&action="+byActionId;
    //    arrActions[0] = MsgHandler.getMsg(MsgConstants.SAVE)+"|clEcartReturnRequest.saveVerifyRetunRequest";
    //    arrActions[1] = MsgHandler.getMsg(MsgConstants.CLOSE)+"|clEcartReturnRequest.hideVerifyReturnRequestDlg";
    //    var clDlg = new DialogBox("dlgECartReturnRequest", "Return Request", 100, 50, 300, 200, sUrl, false, null, false, true, arrActions);
    //    clDlg.setCenter();
    //    clDlg.show();
    //};
    //this.hideVerifyReturnRequestDlg=function()
    //{
    //    getDialogBox("dlgECartReturnRequest").hide();
    //    msg.showToastMsg(" Record saved successfully.");
    //    listView.refreshListView(null,null,true);
    //};


    //raise ECart Return request action
    this.showReturnRequestDlg=function(iBaseModuleId,iBaseTransId,byActionId)
    {
        var sUrl = "/module/moduleView!getEditView.do?moduleId="+Constants.IModuleTypes.ECART_RETURN_REQUEST+"&viewIn=" + Constants.MODULE_IN_DLG + "&sFnSaveCallback=parent.handler.hideReturnRequestDlg&baseModuleId="+iBaseModuleId+
            "&baseTransId="+iBaseTransId+"&calledFrom="+iBaseModuleId+"&actions="+byActionId;
        var clDlg = new DialogBox("dlgECartReturnRequest", "Return Request", 100, 50, 900, 500, sUrl, true, null, true, true, null);
        clDlg.setCenter();
        clDlg.show();
    };
    this.hideReturnRequestDlg=function()
    {
        getDialogBox("dlgECartReturnRequest").hide();
        msg.showToastMsg(" Record saved successfully.");
        listView.refreshListView(null,null,true);
    };
    //validation for Mark as delivery
    this.isValidMarkAsDelivery=function(iFulfillmentStatusId,iModuleId)
    {
        var sMessage,isValid=true;
        if (iFulfillmentStatusId == 0)/*|| iFulfillmentStatusId == Constants.IFULFILLMENT_STATUS.BOOKED*/
        {
            sMessage = "Fulfilment not generated";
            isValid = false;
        }
        else if(iFulfillmentStatusId==Constants.IFULFILLMENT_STATUS.FULFILLED || iFulfillmentStatusId==Constants.IFULFILLMENT_STATUS.DELIVERED)
        {
            sMessage="Selected "+clAppBuffer.getModuleCaption(iModuleId,true)+" has fulfilled";
            isValid = false;
        }
        if(!isValid)
            msg.showMessage(0, sMessage);
        return isValid;
    };
    //mark as delivery action
    this.doMarkAsDelivery=function(iBaseModuleId,iBaseTransId)
    {
        con.sendPostRequest("social/fulfillment!doMarkAsDelivery.do", "moduleId=" + iBaseModuleId + "&transId=" + iBaseTransId, null, me.resMarkAsDelivery, null, null, null, false, false, ACTION_SAVE);
    };
    //response of Mark as delivery
    this.resMarkAsDelivery=function(sResponse)
    {
        if(sResponse!=null)
        {
            msg.showToastMsg(" Record saved successfully.");
            listView.refreshListView(null,null,true);
        }
    };
    //response of sales invoice for mark as delivery action
    this.resDoMarkAsDelivery=function(sResponse)
    {
        if(sResponse!=null)
        {
            var arrReponse=eval(sResponse);
            if(parseInt(arrReponse[0])==Constants.MSG_SUCCESS)
            {
                var iModuleId,iTransId;
                iModuleId=parseInt(arrReponse[1]);
                iTransId=parseInt(arrReponse[2]);
                me.doMarkAsDelivery(iModuleId,iTransId);
            }
        }
    };

    this.arhPendingLinkUpdateStatus = function(iStatus)
    {
        if(iStatus == Constants.MSG_SUCCESS) {
            msg.showToastMsg(MsgHandler.getMsg(MsgConstants.UPDATED_SUCCESSFULLY));
            listView.refreshListView(null,null,true);
        }
    };

    this.showCloseLinkDlg = function(iSrcFieldId)
    {
        getDialogBox("workflowLinks").hide();
        if(iSrcFieldId == 0)
        {
            msg.showMessage(0,"No active workflows found");
            return;
        }
        var arrActions = [];
        arrActions[0] = MsgHandler.getMsg(MsgConstants.CLOSE_LINK) + "|clLinkModuleFldDlg.onClkUpdateProduct";
        arrActions[1] = MsgHandler.getMsg(MsgConstants.CANCEL) + "|clLinkModuleFldDlg.onClkHideDlgBox";
        var sUrl = "module/m!getSourceLinkPendingItems.do";
        var sParams = "";
        sParams += "?sourceModuleId=" + listView.getModuleId() + "&isCloseLink=true";
        sParams +="&transId="+listHandler.getSelectedTransIds()[0];
        if(iSrcFieldId > 0)
            sParams +="&sourceFieldId="+iSrcFieldId;
        var linkSourceModuleDlg = new DialogBox("linkModuleDlg", MsgHandler.getMsg(MsgConstants.CLOSE_LINKS), 100, 50, 950, 550, sUrl + sParams, false, null, true, true, arrActions, null, null, true, null, null, false, null, false, true);
        linkSourceModuleDlg.setCenter();
        linkSourceModuleDlg.show();
    };


    this.handleRaiseSalesOrder=function(sResponse)
    {
        if(sResponse)
        {
            msg.showMessage(0,sResponse);
//            listView.refreshListView(Constants.SALES_ORDER);
        }
    };

    this.handleDetailedAction=function(byActionId,sUrl)
    {
        //alert(sUrl +"=="+ arguments[0]+"="+arguments[1]+"="+arguments[2]+"="+arguments[3])

        var isDraftRecord = relModuleHandler.getBaseModuleRecordStatus() == Constants.IRecordStatus.DRAFT;
        var iModuleId=document.getElementById("moduleId").value;
        var iTransId = document.getElementById("transId").value;

        if (byActionId!=Constants.EDIT && byActionId!=Constants.DELETE && isDraftRecord)
        {
            msg.showMessage(0, MsgHandler.getMsg(MsgConstants.DRAFT_RECORD_ACTION, 0, 0,clAppBuffer.getModuleCaption(iModuleId,true)));
            return;
        }


        clAppBuffer.setActionId(byActionId);
        if(byActionId==Constants.EDIT || byActionId==Constants.CLONE)
        {
            var isClone=false;

            if(byActionId==Constants.EDIT)
                iTransId=arguments[3];
            else if(byActionId==Constants.CLONE)
            {
                iTransId=arguments[2];
                isClone=true;
            }
//            sUrl+="&windowType="+home.getWindowType();
            detailedHandler.editModule(sUrl,iTransId,isClone,0,0);
        }
        else if(byActionId > Constants.STANDARD_ACTIONS_LIMIT )
        {
            var iReportType=arguments[2];
             if( iReportType==Constants.SRC_EXT_REPORT || iReportType==Constants.SRC_INTERNAL_REPORT)
             {
                 var iShowAs=arguments[3];
                 var sTitle=arguments[4];

                 //me.openReport(sUrl,iReportType,iShowAs,iTransId,0,0,sTitle,null,0,0);
                 if (iReportType == Constants.SRC_INTERNAL_REPORT)
                     me.openReport(sUrl, iReportType, iShowAs, iTransId, iModuleId, iTransId, sTitle, null, 0, 0);
                 else
                     me.openReport(sUrl, iReportType, iShowAs, iTransId, 0, 0, sTitle, null, 0, 0);
             }
        }
        else if(byActionId==Constants.CONVERT)
        {
            var iApprovalId=0;
            if(document.getElementById("approvalId")!=null)
                iApprovalId = document.getElementById("approvalId").value;

            if(iModuleId==Constants.LEADS )
            {
                if(clLeads.getApprdLeadsSetting()>0)
                {
                    //iApprovalId = document.getElementById("approvalId").value;
                    if (iApprovalId != Constants.IAPPROVAL_STATUS.APPROVED) {
                        msg.showMessage(0, MsgHandler.getMsg(MsgConstants.APPROVED_LEADS_TO_CONVERT_OPPORTUNITY));
                        return false;
                    }
                }

                var iExtraId=0;
                if(document.getElementById("extraIds[2]"))
                    iExtraId=document.getElementById("extraIds[2]").value;
                if(iExtraId==Constants.ILEADSTATE.UNQUALIFIED)
                {
                    msg.showMessage(0,MsgHandler.getMsg(MsgConstants.LEAD_CONVERT_UNQUALIFIED));
                    return false;
                }
            }
            else
            {
                if(iApprovalId==Constants.IAPPROVAL_STATUS.PENDING)
                {
                    msg.showMessage(0, MsgHandler.getMsg(MsgConstants.PENDING_REC_CANT_CONVERTED,0,0));
                    return false;
                }
            }
            if(iModuleId==Constants.INCIDENTS)
            {
                if(document.getElementById("extraIds[0]")!=null
                && document.getElementById("extraIds[0]").value==Constants.INCIDENT_CONVERTED)
                {
                    msg.showMessage(0,MsgHandler.getMsg(MsgConstants.INCIDENT_ALREADY_CONVERTED));
                    return false;
                }
            }
            /*if(iModuleId==Constants.SUSPECTS)
            {
                sUrl=con.getStruts2Url("marketing","suspect","getSuspectDetails");
                sUrl += "moduleId=" + iModuleId;
            }
            else*/
            //if(iModuleId==Constants.LEADS || iModuleId==Constants.INCIDENTS || iModuleId==Constants.SUSPECTS)
            if(iModuleId==Constants.LEADS || iModuleId==Constants.SUSPECTS)
                sUrl += "&moduleId=" + iModuleId;
            else if(iModuleId==Constants.PMS_ENQUIRY)
                sUrl += "&moduleId=" + Constants.PMS_CONTRACTS;
            if(iModuleId==Constants.LEADS || iModuleId==Constants.INCIDENTS || iModuleId==Constants.SUSPECTS|| iModuleId==Constants.PMS_ENQUIRY)
                iExtraIds = document.getElementById("transId").value;
            else if(document.getElementById("extraIds[0]"))
              iExtraIds = document.getElementById("extraIds[0]").value;
//            if(iModuleId==Constants.SUSPECTS)
//                sUrl +="&iTransId="+ iExtraIds;
//            else sUrl +="&transId="+ iExtraIds;
//            con.sendPostRequest(sUrl, "", null, "listHandler.arhConvertHandler", false, null, null, false, true, ACTION_CONVERT);
//            alert("sUrl "+sUrl )

            if(iModuleId==Constants.PMS_ENQUIRY)
            {
                sUrl +="&baseTransId="+iExtraIds+"&calledFrom="+Constants.PMS_ENQUIRY;
//                home.setCenterUI(sUrl);
                con.sendPostRequest(sUrl, "", null, "listHandler.arhPMSEnquiry", false, null, null, false, true, ACTION_CONVERT);
            }
            else if(iModuleId==Constants.INCIDENTS)
            {
                /*sUrl="/module/moduleView!getEditView.do?moduleId="+Constants.REQUEST+"&isBuffer=true&baseModuleId="+Constants.INCIDENTS
                 +"&calledFrom="+Constants.INCIDENTS+"&baseTransId="+iTransIds[0];*/
                //sUrl+="&isSetModuleData=true&iModuleId="+Constants.REQUEST+"&isBuffer=true&baseModuleId="+Constants.INCIDENTS+"&calledFrom="+Constants.INCIDENTS+"&baseTransId="+iTransIds[0];
                //sUrl=sUrl.replace("moduleId=5632",);
                //var sModuleParam = "moduleId="+Constants.INCIDENTS;
                //sUrl = sUrl.replace(sModuleParam,"moduleId="+Constants.REQUEST);
                sUrl += "&moduleId=" + Constants.REQUEST;
                sUrl+="&isSetModuleData=true&iModuleId="+Constants.REQUEST+"&baseModuleId="+Constants.INCIDENTS
                    +"&calledFrom="+Constants.INCIDENTS+"&baseTransId="+iExtraIds;
                //home.setCenterUI(sUrl);
                home.setCenterUI(sUrl,null,null,false,"listHandler.arhPMSEnquiry",null,null,null,null,true);
            }
            else
            {
                sUrl +="&iTransId="+ iExtraIds;
                home.setCenterUI(sUrl);
            }
        }
        else if(byActionId==Constants.PRINT) // using VM(need to remove)
        {
            var iApprovalStatus= 0;
             if(document.getElementById("approvalId"))
                iApprovalStatus = document.getElementById("approvalId").value;
            //if(iApprovalStatus==Constants.IAPPROVAL_STATUS.APPROVED)
            //var iTransId;
            {

                /*if(iModuleId==Constants.TELELEADS || iModuleId==Constants.LEADS ) {           /!*||iModuleId==Constants.LEADS *!/
                    iTransId = document.getElementById("extraIds[0]").value;
                }
                else
                    iTransId=document.getElementById("transId").value;*/


                var arrActions = [];

                var sMethod="clPrintLayoutSelection.onClkPrint";
                if(arguments[3]>1) //vm printing
                    sMethod="clPrintModule.onClkPrintSelectedModule";
//alert("detailed")
                arrActions[0] = MsgHandler.getMsg(MsgConstants.PRINT)+"|"+sMethod;
                arrActions[1] = MsgHandler.getMsg(MsgConstants.CLOSE)+"|";
                var clSelectLayoutDlg = new DialogBox("layoutdlg","",140,160,330,185,sUrl+"&transId="+iTransId+"&approvalStatus="+iApprovalStatus, false, null, false,true,arrActions);
                clSelectLayoutDlg.setTitle(MsgHandler.getMsg(MsgConstants.SELECT_LAYOUT));
                clSelectLayoutDlg.setCenter();
                //            clSelectLayoutDlg.show();
            }
            /*else
            {
                 msg.showMessage(0,MsgHandler.getMsg(MsgConstants.MOD_PENDING_ACCESS_PENDING,0,0,clAppBuffer.getModuleCaption(iModuleId,true),MsgHandler.getMsg(MsgConstants.PRINT)));
                 return false;
            }*/

        }
        else if(byActionId==Constants.EMAIL_MODULE_DATA)
         {
             var iApprovalStatus=0;
             if(document.getElementById("approvalId"))
                iApprovalStatus = document.getElementById("approvalId").value;
             if(iApprovalStatus!=Constants.IAPPROVAL_STATUS.APPROVED)
             {
                 msg.showMessage(0,MsgHandler.getMsg(MsgConstants.MOD_PENDING_ACCESS_PENDING,0,0,clAppBuffer.getModuleCaption(iModuleId,true),MsgHandler.getMsg(MsgConstants.EMAIL)));
//                 msg.showMessage(0,MsgHandler.getMsg(MsgConstants.CALL_ALREADY_CLOSED));
                 return false;
             }
             else
             {
                 var iSendMailId=0,iEmailLogId=0;
                 sUrl +="&transId="+iTransId;
                 sTitle=MsgHandler.getMsg(MsgConstants.SEND)+" "+MsgHandler.getMsg(MsgConstants.MAIL);

                 var clSendMailDlg;
                 clSendMailDlg = new DialogBox("sendMail",sTitle,40,60,850,650, sUrl, true, null, true,true,null);
                 clSendMailDlg.setTitle(sTitle);
                 clSendMailDlg.setCenter();
                 clSendMailDlg.show();
             }
         }
        else if(byActionId==Constants.DELETE)
        {
            var imgEdit=arguments[2];

            //var iTransId=relModuleHandler.getBaseTransId();


            var iExtraIds =0;
            if(document.getElementById("extraIds[0]"))
              iExtraIds = document.getElementById("extraIds[0]").value;
             clAppBuffer.setActionId(byActionId);
            relModuleHandler.deleteModules(sUrl,iModuleId,iTransId,iExtraIds,0,Constants.DETAILED_LAYOUT);
        }
        else if(byActionId==Constants.CLOSE_REQUEST)
        {
            //var iStatusId=document.getElementById("statusId").value;
            var iStatusId=Focus.crm.sdesk.callDetailedView.getCallStatusId();
            if( iStatusId == Constants.IRequest.CLOSED)
                msg.showMessage(0,MsgHandler.getMsg(MsgConstants.CALL_ALREADY_CLOSED));
                //msg.showMessage(0,"Call already closed.");
                //Validation.showMessage("Call already closed",Validation.ERROR_MSG,null,Validation.ERROR_MANDATORY,true);
            else if(handler.validateCallStatus(Constants.RELATEDMODULE_LAYOUT,byActionId,Constants.CALL_CLOSE))
                listHandler.showModuleDialog(sUrl+"&isSeparateForm=1",Constants.CALL_CLOSE,arguments[2],arguments[3],arguments[4]," Close ",750,450);
        }
        else if( byActionId==Constants.RE_OPEN )
        {
            //var iStatusId=document.getElementById("statusId").value;
            /*var iStatusId=Focus.crm.sdesk.callDetailedView.getCallStatusId();
            if( iStatusId == Constants.IRequest.CLOSED)
                msg.showMessage(0,"Call already closed.");*/
                //Validation.showMessage("Call already closed",Validation.ERROR_MSG,null,Validation.ERROR_MANDATORY,true);
            if(handler.validateCallStatus(Constants.RELATEDMODULE_LAYOUT,byActionId,Constants.RE_OPEN))
                listHandler.showModuleDialog(sUrl,Constants.CALL_REOPEN,arguments[2],arguments[3],arguments[4]," Re-Open ",750,450);
        }
        else if(byActionId==Constants.APPROVE||byActionId==Constants.REJECT)
        {
            detailedHandler.approve(byActionId,iTransId,sUrl,arguments[2]);
        }
        else if(byActionId==Constants.TERMINATE || byActionId==Constants.LEGAL_CASE)
            {

                var iContractStatus = 0;
                if(document.getElementById("extraIds[0]")!=null)
                    iContractStatus = document.getElementById("extraIds[0]").value;
                var iAppovedId = 0;
                if(document.getElementById("approvalId")!=null)
                    iApprovalId = document.getElementById("approvalId").value;
                if (iContractStatus == Constants.ICONTRACT_STATUS.CLOSED) {
                    msg.showMessage(0, MsgHandler.getMsg(MsgConstants.MOD_STATUS_ACTION_DENIED, 0, 0, clAppBuffer.getModuleCaption(iModuleId, true), MsgHandler.getMsg(MsgConstants.CONTRACT_CLOSE), MsgHandler.getMsg(byActionId == Constants.TERMINATE ? MsgConstants.TERMINATE : MsgConstants.LEGAL_CASE)));
                    return false;
                } else if (iAppovedId == Constants.IAPPROVAL_STATUS.PENDING) {
                    msg.showMessage(0, MsgHandler.getMsg(MsgConstants.MOD_PENDING_ACTION_DENIED, 0, 0, clAppBuffer.getModuleCaption(iModuleId, true), MsgHandler.getMsg(byActionId == Constants.TERMINATE ? MsgConstants.TERMINATE : MsgConstants.LEGAL_CASE)));
                    return false;
                } else if (iContractStatus == Constants.ICONTRACT_STATUS.RENEWED) {
                    msg.showMessage(0, MsgHandler.getMsg(MsgConstants.MOD_STATUS_ACTION_DENIED, 0, 0, clAppBuffer.getModuleCaption(iModuleId, true), MsgHandler.getMsg(MsgConstants.RENEWED), MsgHandler.getMsg(byActionId == Constants.TERMINATE ? MsgConstants.TERMINATE : MsgConstants.LEGAL_CASE)));
                    return false;
                }
                else if ((byActionId==Constants.LEGAL_CASE && iContractStatus == Constants.ICONTRACT_STATUS.LEGAL_CASE)) {
                    msg.showMessage(0, MsgHandler.getMsg(MsgConstants.MOD_STATUS_ACTION_DENIED, 0, 0, clAppBuffer.getModuleCaption(iModuleId, true), MsgHandler.getMsg(MsgConstants.LEGAL_CASE), MsgHandler.getMsg(byActionId == Constants.TERMINATE ? MsgConstants.TERMINATE : MsgConstants.LEGAL_CASE)));
                    return false;
                }

                var sTitle="";
                sTitle = (byActionId==Constants.TERMINATE)?"Contract Termination":((byActionId==Constants.CONTRACT_CLOSE)?"Contract Close":"Contract LegalCase");
                var iContractId = document.getElementById("transId").value;
                if(byActionId==Constants.CONTRACT_CLOSE)
                    sUrl = con.getStruts2Url("support","termination","getPMSContractCloseDetails",null,true);
                else
                    sUrl = con.getStruts2Url("support","termination","getPMSTermination",null,true);
                sUrl+="?contractId="+iContractId+"&baseTransId="+iContractId+"&moduleId11="+iModuleId+"&includeHeader=0"+"&viewIn="+Constants.MODULE_IN_DLG;
                sUrl+="&actionId="+byActionId;
                //alert('sUrl Detailed view ............  ====='+sUrl);
                var clLeaseDlg = new DialogBox("sHeaderDlg","",140,160,580,450,sUrl, true, null, false,true,null);
                clLeaseDlg.setTitle(sTitle);
                clLeaseDlg.setCenter();
                clLeaseDlg.show();
            }
        else if(byActionId==Constants.RENEWAL)
            {
                var iContractId = document.getElementById("transId").value;

                if(iModuleId == Constants.PMS_CONTRACTS) {
                    var sParams = "?transId=" + iContractId + "&moduleId=" + iModuleId + "&renewal=1";
                    sUrl = "/module/moduleView!getModuleView.do" + sParams + "&byAction=" + Constants.EDIT_LAYOUT;

                    sUrl += "&clone=1";
                }
//                    sUrl = "/module/moduleView!getEditView.do"+sParams+"&clone=1";
                //                sUrl+="&transId="+iContractId+"&moduleId="+iModuleId;
//                con.sendPostRequest(sUrl,null,null,null);
                home.setCenterUI(sUrl);
            }
        else if(byActionId==Constants.CONTRACT_CLOSE)
        {

            var iContractStatus = 0;
            if(document.getElementById("extraIds[0]")!=null)
                iContractStatus = document.getElementById("extraIds[0]").value;
            var iAppovedId = 0;
            if(document.getElementById("approvalId")!=null)
                iApprovalId = document.getElementById("approvalId").value;
            if (iContractStatus == Constants.ICONTRACT_STATUS.CLOSED) {
                msg.showMessage(0, MsgHandler.getMsg(MsgConstants.MOD_STATUS_ACTION_DENIED, 0, 0, clAppBuffer.getModuleCaption(iModuleId, true), MsgHandler.getMsg(MsgConstants.CONTRACT_CLOSE), MsgHandler.getMsg(byActionId == Constants.TERMINATE ? MsgConstants.TERMINATE : MsgConstants.LEGAL_CASE)));
                return false;
            } else if (iAppovedId == Constants.IAPPROVAL_STATUS.PENDING) {
                msg.showMessage(0, MsgHandler.getMsg(MsgConstants.MOD_PENDING_ACTION_DENIED, 0, 0, clAppBuffer.getModuleCaption(iModuleId, true), MsgHandler.getMsg(byActionId == Constants.TERMINATE ? MsgConstants.TERMINATE : MsgConstants.LEGAL_CASE)));
                return false;
            } else if (iContractStatus == Constants.ICONTRACT_STATUS.RENEWED) {
                msg.showMessage(0, MsgHandler.getMsg(MsgConstants.MOD_STATUS_ACTION_DENIED, 0, 0, clAppBuffer.getModuleCaption(iModuleId, true), MsgHandler.getMsg(MsgConstants.RENEWED), MsgHandler.getMsg(byActionId == Constants.TERMINATE ? MsgConstants.TERMINATE : MsgConstants.LEGAL_CASE)));
                return false;
            }

            var sTitle="";
            sTitle = "Contract Close";
            var iContractId = document.getElementById("transId").value;
            sUrl = con.getStruts2Url("support","termination","getPMSContractCloseDetails",null,true);
            sUrl+="?contractId="+iContractId+"&baseTransId="+iContractId+"&moduleId11="+iModuleId+"&includeHeader=0"+"&viewIn="+Constants.MODULE_IN_DLG;
            sUrl+="&actionId="+byActionId;
            //alert('sUrl====='+sUrl);
            //var clLeaseDlg = new DialogBox("sHeaderDlg","",140,160,580,450,sUrl, true, null, false,true,null);
            var clLeaseDlg = new DialogBox("module"+Constants.PMS_CONTRACT_CLOSE, "", 140, 160, 580, 450, sUrl, true, null, false, true, null);
            clLeaseDlg.setTitle(sTitle);
            clLeaseDlg.setCenter();
            clLeaseDlg.show();
        }
            /*{
                var iContractId = document.getElementById("transId").value;

                sUrl = "/support/termination!getContractClose.do";
                sUrl+="?contractId="+iContractId+"&moduleId="+iModuleId;
                if(iContractId>0)
                    con.sendPostRequest(sUrl,null,null,null);
            }*/
        /*else if(byActionId==Constants.RE_OPEN )
        {
            sUrl+="?transId="+arguments[2]+"&status="+Constants.IRequest.RE_OPEN;
            con.sendPostRequest(sUrl,null,null,"detailedHandler.arhRefreshCallHeader");
        }*/
        else if(byActionId==Constants.SIGNWITH_SIGNEASY)
        {
            sUrl="social/signEasySettings!getSignEasyAuthInfo.do";
            con.sendPostRequest(sUrl, null, null, "handler.arhSignEasy")
        }
        else if(byActionId == Constants.MERGE_CALLS)
        {
            var iWidth=1050,iHeight=620;
            var iCallId = 0,iCustomerId =0;
            sUrl = "module/moduleView!getMergeTicket.do";
            arrActions = [];
            arrActions[0] = MsgHandler.getMsg(MsgConstants.MERGE,0,0)+"|clMergeTicket.onClkSaveMergeTicket";
            arrActions[1] = MsgHandler.getMsg(MsgConstants.CANCEL,0,0)+"|";
            if(document.getElementById("transId"))
                iCallId = document.getElementById("transId").value;
            if(document.getElementById("moduleId"))
                iModuleId= document.getElementById("moduleId").value;
            if(document.getElementById("accountId"))
                iCustomerId= document.getElementById("accountId").value;
            sUrl+="?callId="+iCallId+"&moduleId="+iModuleId+"&customerId="+iCustomerId+"&width="+iWidth+"&height="+iHeight;
            var clDlg = new DialogBox("dlgMergeTicket","Merge Ticket",100,50,iWidth,iHeight,sUrl,true, null, false,true,arrActions);
            clDlg.setCenter();
            clDlg.show();
        }
        else if(byActionId==Constants.IActions.CONVERT_TO_INVOICE)
        {
            sUrl+="&baseModuleId="+iModuleId+"&baseTransId="+iTransId;
            home.setCenterUI(sUrl);
        }
        else if(byActionId==Constants.IActions.RAISE_FULFILLMENT)
        {
            var iActionView=Constants.IActionPosition.DETAILED_VIEW;
            con.sendPostRequest("/social/fulfillment!isValidateFulfillment.do","transId="+iTransId+"&moduleId="+iModuleId+"&actionView="+iActionView,null,me.resFulfillmentSI,null,null,null,false,false,ACTION_SAVE);
        }
    };
    /*
     when click on pullsignedDoc button in listview this method will call,
     if you are clicking pullsignedDoc button without loggin in crm then if condition part of arhPullSignEasy will execute.and
     if signeasy already loggedin then else part will execute and it will download all signed document.
     @response this response will return signeasy auth info.
     */
    this.arhPullSignEasy = function (sResponse) {
        var sResponseVal, sClientId, sRedirectUri, sUrl, sAuthUrl,sinEasyWin;
        if (sResponse == null || sResponse != "") {
            sResponseVal = sResponse.split("|");
            sClientId = sResponseVal[0];
            sRedirectUri = sResponseVal[1];
            sAuthUrl = sResponseVal[2];
            var SCOPE;
            //SCOPE = "user:read files:read original:read original:create signed:create signed:read signed:update files:read rs:read rs:create webhooks:manage";
            SCOPE = "user:read files:read original:read original:create original:update signed:create signed:read signed:update files:read rs:read rs:update rs:create webhooks:manage template:manage";
            //Version2.1
            sUrl = sAuthUrl+"authorize?response_type=code&client_id=" + sClientId + "&redirect_uri=" + sRedirectUri + "/streamline/seredirect&scope=" + SCOPE;

           //version1
           // sUrl = "https://api-ext.getsigneasy.com/oauth2/authorize?response_type=code&client_id=" + sClientId + "&redirect_uri=" + sRedirectUri + "/streamline/seredirect&scope=" + SCOPE;
            sinEasyWin = window.open(sUrl, 'authorizationWin', 'screenX=480,screenY=150,width=450,height=500,scrollbars=yes,resizable=yes');
            //listHandler.pullSignedDoc();
        }
        else{
            listHandler.pullSignedDoc();
        }
    };


    /*
    when we login 1st time signeasy in crm then if condition part of arhsigneasy will execute.and if signeasy already loggedin then else part will execute it will open document selection screen.
    @response this response will return signeasy auth info.
     */
    this.arhSignEasy = function (sResponse) {
        var sResponseVal,sClientId,sRedirectUri, sUrl,sAuthUrl,sinEasyWin;
        //var sScriptArray = eval(sResponse);


        if (sResponse==null || sResponse!="") {
            sResponseVal=sResponse.split("|");
            sClientId = sResponseVal[0];
            sRedirectUri = sResponseVal[1];
            sAuthUrl = sResponseVal[2];
            //sClientSecret = sScriptArray[1];
            var SCOPE;
         /*   var iClient_Id = "svkn2RPj3vQogptN62IKy3wmQm1zw5m492LsQEBr";
            var iClient_Secret = "cM9MB4KzUVeRm5UhHXMsxZC4BbIdFJJXnziuP3F8zecNobJX7d";*/
            //SCOPE = "user:read files:read original:read original:create signed:create signed:read signed:update files:read rs:read rs:create webhooks:manage";
            SCOPE = "user:read files:read original:read original:create original:update signed:create signed:read signed:update files:read rs:read rs:update rs:create webhooks:manage template:manage";
            sUrl = sAuthUrl+"authorize?response_type=code&client_id="+sClientId+"&redirect_uri="+sRedirectUri+"/streamline/seredirect&scope="+SCOPE;

            sinEasyWin = window.open(sUrl,'authorizationWin','screenX=480,screenY=150,width=450,height=500,scrollbars=yes,resizable=yes');
        }
        else{
                 var arrActions,clDlg,sDlg = "signEasySettingsDlg",moduleId,transId;
                clDlg = getDialogBox(sDlg);
            arrActions = [];
            if(me.byLayoutType == 1){
                moduleId=listView.getModuleId();
                transId=listView.getSelTransIds();
                    if(transId == 0)
                    {
                        msg.showMessage(0,MsgHandler.getMsg(MsgConstants.SELECT_RECORD,0,0));
                        return false;
                    }

            }else{
                moduleId=document.getElementById("moduleId").value;
                transId=document.getElementById("transId").value;

            }
                sUrl = con.getStruts2Url("social","signEasySettings","getSignEasy",null,true);
                sUrl += "?moduleId="+moduleId+"&transId="+transId;
                clDlg = new DialogBox(sDlg,"SignEasy Request",0,0,590,590,sUrl,true,null,false,true,null,false,null,true,false,false,false,false,false,false);
                //clDlg = new DialogBox(sDlg,"SignEasy Request",150,150,590,400,sUrl,true);
                clDlg.setCenter();
                clDlg.show();
        }

    };

    /*
     purpose of this method is to hide signeasy dialog after sending document for request signature.
     */
    this.arhReqSignature=function(iStatusCode, sMsg)
    {
      //  alert("iStatusCode="+iStatusCode)
        if(parseInt(iStatusCode)==MSG_SUCCESS)
        {
                parent.getDialogBox("signEasySettingsDlg").hide();
            if( parent.document.getElementById("dvDetailedView") == null )
                parent.listView.clearCheckBoxes(0,false);
        }

    };
    this.closeAuthWin=function(){
        self.close();

    };

    this.handleRelModuleAction = function(byActionId,sUrl)
    {
        var iBaseModuleId=0;

        if(byActionId==Constants.NEW || byActionId==Constants.EDIT)
        {
            var isDraftRecord=false;
            if(me.isFromListView())
            {
                isDraftRecord = listView.isDraftRecordSelected("listReportTab_1");
                iBaseModuleId = listView.getModuleId();
            }
            else
            {
                iBaseModuleId = relModuleHandler.getBaseModuleId();
                isDraftRecord = relModuleHandler.getBaseModuleRecordStatus() == Constants.IRecordStatus.DRAFT;
            }

            if (isDraftRecord && byActionId==Constants.NEW)
            {
                msg.showMessage(0, MsgHandler.getMsg(MsgConstants.DRAFT_RECORD_ACTION, 0, 0,clAppBuffer.getModuleCaption(iBaseModuleId,true)));
                return;
            }
        }

        var iTransId=0;
        var iModuleId=0;

        var iBaseTransId=relModuleHandler.getBaseTransId();

        if(byActionId==Constants.ACTION_CALL_RESOLUTION)
        {
            if(handler.validateCallStatus(Constants.RELATEDMODULE_LAYOUT,byActionId))
                relModuleHandler.editRelatedModule(Constants.CALL_RESOLUTION,sUrl,iTransId,false,arguments[4],iBaseTransId,arguments[6],arguments[7]);
        }
        else if(byActionId > Constants.STANDARD_ACTIONS_LIMIT )
        {
            var iReportType=arguments[2];
             if( iReportType==Constants.SRC_EXT_REPORT || iReportType==Constants.SRC_INTERNAL_REPORT)
             {
                 var iShowAs=arguments[3];
                 var sTitle=arguments[4];
                 /*iModuleId=relModuleHandler.iModuleId;
                 iBaseModuleId = relModuleHandler.getBaseModuleId();
                 var arrTransIds =listView.getSelTransIds("listReportTab_"+iModuleId);

                 alert(iBaseModuleId);
                 alert(iBaseTransId);
                 alert(arrTransIds);*/
                 me.openReport(sUrl,iReportType,iShowAs,0, relModuleHandler.getBaseModuleId(),iBaseTransId,sTitle,null,0,0);
             }
        }
        else if(byActionId==Constants.EDIT
                || byActionId==Constants.CLONE
                || byActionId==Constants.NEW_TASK
                || byActionId==Constants.NEW_APPOINTMENT
                || byActionId==Constants.NEW_EVENT
                || byActionId==Constants.LOG_AN_ACTIVITY
                || byActionId==Constants.NEW_MEETING
                || byActionId==Constants.NEW_PLAN
                || byActionId==Constants.NEW_TELE_CALL
                || byActionId==Constants.CALL_NOTES
                )//|| byActionId==Constants.ACTION_CALL_RESOLUTION
        {
            if(byActionId==Constants.EDIT)
            {
                iModuleId=arguments[2];
                iTransId=arguments[3];
            }
            else //activities
            {
                iBaseModuleId=arguments[4];
            }

            var arrValues = relModuleHandler.getBaseTransIdAndExtraId(iBaseModuleId);
            iBaseTransId = arrValues[0];
            var iBaseExtraIds = [arrValues[1]];

            if(iModuleId==Constants.OPEN_ACTIVITIES)
            {
                var imgEdit=arguments[4];
                relModuleHandler.editOpenActivity(sUrl,iTransId,imgEdit,0,iBaseTransId,Constants.OPEN_ACTIVITIES,iBaseExtraIds);
                //relModuleHandler.editOpenActivity(sUrl,iTransId,imgEdit,arguments[4],iBaseTransId,Constants.OPEN_ACTIVITIES);
            }
            else
            {
                /*var objDropDownTr=arguments[6];
                relModuleHandler.editModuleinOverlay(sUrl,iTransId,false,iBaseModuleId,iBaseTransId,null,iModuleId,objDropDownTr);*/
                detailedHandler.editModule(sUrl,iTransId,false,iBaseModuleId,iBaseTransId,0,iBaseExtraIds);
            }
        }
        else if(byActionId==Constants.NEW)
        {
            if (!(iBaseModuleId == Constants.LEADS || iBaseModuleId == Constants.TELELEADS))
                iBaseModuleId = arguments[4];
            var isRelatedActionFromListView=me.isFromListView();
            //if(!document.getElementById("moduleViewMode")) //true if related action is from detailed view, false for list view
            if(isRelatedActionFromListView) //true if related action is from detailed view, false for list view
            {
//                isRelatedActionFromListView = true;
                iBaseModuleId = listView.getModuleId();
                //TODO: commented on 23/03/2022 memeberId changes in Lead/TeleLead
                /*if(iBaseModuleId==Constants.TELELEADS ||iBaseModuleId==Constants.LEADS )
                    iBaseTransId = listView.getSelectedExtraId()[0];
                else*/
                    iBaseTransId = listHandler.getSelectedTransIds()[0];


                var arrTransIds =listView.getSelTransIds("listReportTab_1");
                if(!listHandler.validateRowSelection(arrTransIds,false))
                    return;
            }

            if(relModuleHandler.iModuleId==Constants.CONTACT_ROLES)
                relModuleHandler.editContactRoles(Constants.CONTACT_ROLES,sUrl,iTransId,false,iBaseModuleId,iBaseTransId,arguments[6],arguments[7]);
            else if(relModuleHandler.iModuleId==Constants.CALL_NOTES)
            {
                //if(handler.validateCallStatus(Constants.RELATEDMODULE_LAYOUT,byActionId,relModuleHandler.iModuleId))
                    relModuleHandler.showCallNote(sUrl,arguments[2],arguments[3],arguments[4],relModuleHandler.iModuleId,iBaseTransId);
            }
            else if(relModuleHandler.iModuleId==Constants.DOCUMENTS )
            {
//                relModuleHandler.addDocuments(sUrl,arguments[2],arguments[3],arguments[4],byActionId);
                me.addDocuments(sUrl, arguments[2], arguments[3], arguments[4], byActionId, relModuleHandler.iModuleId, iBaseModuleId);
            }
            else if(relModuleHandler.iModuleId==Constants.ATTACHMENTS)
            {
                //if(handler.validateCallStatus(Constants.RELATEDMODULE_LAYOUT,byActionId,Constants.ATTACHMENTS))
                    me.addDocuments(sUrl,arguments[2],arguments[3],arguments[4],byActionId,relModuleHandler.iModuleId);
            }
            else if(relModuleHandler.iModuleId==Constants.CALL_TASKS)
            {
                if(handler.validateCallStatus(Constants.RELATEDMODULE_LAYOUT,byActionId,Constants.CALL_TASKS))
                    listHandler.showModuleDialog(sUrl,Constants.CALL_TASKS,arguments[2],arguments[3],arguments[4],"Call Task",800,500);
            }
            else if(relModuleHandler.iModuleId==Constants.NOTES)
            {
                var iMemberId = 0;
                if (isRelatedActionFromListView)
                {
                    if((iBaseModuleId == Constants.LEADS || iBaseModuleId == Constants.TELELEADS)) {
                        var iExtraId = listView.getLeadStatus();
                        if (iExtraId == Constants.LEAD_STATUS_CONVERTED) {
                            msg.showMessage(0, MsgHandler.getMsg(MsgConstants.LEAD_ALREADY_CONVERTED));//MsgHandler.getMsg(MsgConstants.SELECT_RECORD,0,0)
                            return false;
                        }
                        iBaseTransId = listView.getSelectedExtraId()[0];
                        iMemberId = listView.getSelectedTransId();
                    }
                    else
                    {
                        iBaseTransId = listView.getSelectedTransId();
                        iMemberId = listView.getSelectedExtraId()[0];
                    }
                }
                else
                {
                    var arrValues = relModuleHandler.getBaseTransIdAndExtraId(iBaseModuleId);
                    iBaseTransId = arrValues[0];
                    iMemberId = arrValues[1];

                    /*
                     iMemberId = 0;
                    if (iBaseModuleId == Constants.LEADS || iBaseModuleId == Constants.TELELEADS)
                    {
                        if(document.getElementById("isViewAll"))
                        {
                            iMemberId = document.getElementById("baseTransId").value;
                            iBaseTransId = document.getElementById("extraIds[0]").value;
                        }
                        else
                        {
                            iMemberId = detailedHandler.getTransId();
                            iBaseTransId = detailedHandler.getExtraId();
                        }
                    }*/
                }
                //sUrl +="&memberId="+iMemberId;
                relModuleHandler.showNote(sUrl, arguments[2], arguments[3], arguments[4], iBaseTransId, iMemberId);
            }
            else
            {
                if (relModuleHandler.iModuleId == Constants.ESTIMATION
                     || relModuleHandler.iModuleId == Constants.SERVICE_QUOTE
                     || relModuleHandler.iModuleId == Constants.SERVICE_ORDER
                     || ((relModuleHandler.iModuleId == Constants.CHANGES
                     || relModuleHandler.iModuleId == Constants.PROBLEMS) && iBaseModuleId == Constants.REQUEST))
                {
                    if(isRelatedActionFromListView)
                    {
                        if (!handler.validateCallStatus(Constants.LIST_LAYOUT, byActionId, relModuleHandler.iModuleId))
                            return;
                    }
                    else
                    {
                        if (!handler.validateCallStatus(Constants.RELATEDMODULE_LAYOUT, byActionId, relModuleHandler.iModuleId))
                            return;
                    }
                }
                else if(relModuleHandler.iModuleId == Constants.IModuleTypes.FULFILLMENTS || relModuleHandler.iModuleId == Constants.IModuleTypes.FIN_PAYMENTS_RECEIVED)
                {
                    iBaseTransId=parseInt(iBaseTransId);
                    var iActionView,isValid,iRelModuleId;
                    if(isRelatedActionFromListView)
                    {
                        iActionView = Constants.IActionPosition.LIST_VIEW;
                        isValid=listHandler.validateRowSelection(iBaseTransId, false);
                        iRelModuleId=relModuleHandler.iModuleId;
                    }
                    else
                    {
                        iBaseModuleId=document.getElementById("moduleId").value;
                        iActionView = Constants.IActionPosition.RELATED_VIEW;
                        iRelModuleId=relModuleHandler.iModuleId;
                        isValid=true;
                    }
                    if(isValid)
                    {
                        function resValidateStatus(sResponse,iStatusCode)
                        {
                            if(sResponse!=null && sResponse!="null")
                            {
                                var arrResponse=eval(sResponse);
                                isValid=(parseInt(arrResponse[0])==Constants.MSG_SUCCESS)
                            }
                            else if(iStatusCode==Constants.MSG_EXCEPTIONS)
                            {
                                isValid=false;
                            }
                        }
                        var sSubmitData="transId=" + iBaseTransId + "&moduleId=" + iBaseModuleId+"&actionView="+iActionView+"&relModuleId="+iRelModuleId;
                        con.sendPostRequest("/social/fulfillment!isValidateFulfillment.do",sSubmitData,resValidateStatus, null, con.RESPONSE_HTML, null, null, true, false, ACTION_LOADING);
                    }
                    if(!isValid)
                        return isValid;
                }
                var isShowRelModuleInCenterScreen=false;
                if(isRelatedActionFromListView)
                {

                    if(isRelatedActionFromListView && relModuleHandler.iModuleId == Constants.QUOTE)
                    {    
                        if(listHandler.validateRowSelection(null,false))
                            handler.validateQuoteForListView(sUrl,iBaseTransId,false,iBaseModuleId,iBaseTransId)
                    }
                    else
                    {
                        me.editModule(sUrl,0,false,iBaseModuleId,iBaseTransId);
                    }
                }
                else
                {
                    imgEdit = arguments[6];
                    if (imgEdit)
                        iTransId = relModuleHandler.getSelectedTransId(relModuleHandler.iModuleId, imgEdit);

                    if (relModuleHandler.iModuleId == Constants.QUOTE
                        || relModuleHandler.iModuleId == Constants.SALES_ORDER
                        || relModuleHandler.iModuleId == Constants.CONTACTS
                        || relModuleHandler.iModuleId == Constants.PRODUCTS
                        || relModuleHandler.iModuleId == Constants.REQUEST
                        || relModuleHandler.iModuleId == Constants.OPPORTUNITIES
                        || relModuleHandler.iModuleId == Constants.ESTIMATION
                        || relModuleHandler.iModuleId == Constants.SERVICE_QUOTE
                        || relModuleHandler.iModuleId == Constants.SERVICE_ORDER
                        || relModuleHandler.iModuleId == Constants.WON_COMPETITOR
                        || relModuleHandler.iModuleId == Constants.LOST_COMPETITOR
                        || relModuleHandler.iModuleId == Constants.PROBLEMS
                        || relModuleHandler.iModuleId == Constants.CHANGES)
                    {
                        isShowRelModuleInCenterScreen = true;
                    }
                    else
                        isShowRelModuleInCenterScreen = detailedView.isShowRelModuleInCenterScreen(relModuleHandler.iModuleId);


                    if (isShowRelModuleInCenterScreen)
                    {
                        /*@CORONA quote module calledFrom*/
                        if(relModuleHandler.iModuleId == Constants.QUOTE&&iBaseModuleId>0)
                            sUrl=sUrl+"&calledFrom="+iBaseModuleId;
                        relModuleHandler.editRelatedModule(relModuleHandler.iModuleId, sUrl, iTransId, false, iBaseModuleId, iBaseTransId, arguments[6], arguments[7]);
                    }
                    else
                    {
                        var sDlgTitle;
                        if (iTransId > 0)
                        {
                            sDlgTitle = Focus.crm.Messages.getActionLabel(Constants.EDIT);
                            sDlgTitle += " " + clAppBuffer.getModuleCaption(relModuleHandler.iModuleId, true);
                        }
                        else
                        {
                            sDlgTitle = MsgHandler.getMsg(MsgConstants.NEW);
                            if(arguments.length > 3 && arguments[3])
                                sDlgTitle += " " + arguments[3];
                        }



                        listHandler.showModuleDialog(sUrl, relModuleHandler.iModuleId, imgEdit, iBaseTransId, iTransId > 0, sDlgTitle, 650, 400);
                    }
                }

            }
        }
        else if(byActionId==Constants.DELETE)
        {
            var imgEdit=arguments[2];
            var iModuleId=arguments[3];

            var iTransId=listView.getSelectedTransId("listReportTab_"+iModuleId,0,imgEdit);
            var iOpenActModuleId=0,iExtraIds=null;

            if(iModuleId==Constants.OPEN_ACTIVITIES)
            {
                iOpenActModuleId=Constants.OPEN_ACTIVITIES;
                iModuleId=listView.getSelectedExtraId("listReportTab_"+iOpenActModuleId,0,imgEdit)[0];
            }
            else if(iModuleId==Constants.CALL_RESOLUTION)
            {
                if(!handler.validateCallStatus(Constants.RELATEDMODULE_LAYOUT,byActionId,iModuleId))
                    return;
            }
            else if (iModuleId == Constants.ESTIMATION || iModuleId == Constants.PARTS_REQUESTED || iModuleId == Constants.PARTS_REPLACED || iModuleId == Constants.ATTACHMENTS)
             {
                 var arrExtraIds = null;
                 var objTable = new sTable("listReportTab_"+iModuleId);
                 var iExtraIdsLength=0,iExtraHiddenCol=0,iColCurrentRow=0,iColCnt=0,iColIndex=0,iExtraIds=null;
                 var iSelectedRow = imgEdit.parentNode.parentNode.rowIndex-1;
                 var iRowCnt = objTable.getRowCount();
                    if(iRowCnt>1)
                        iColCurrentRow=1;
                 if(document.getElementById("extraIdsLength_"+iModuleId)!=null)
                    iExtraIdsLength = document.getElementById("extraIdsLength_"+iModuleId).value;
                 if(document.getElementById("extraHiddenCol_"+iModuleId))
                    iExtraHiddenCol = document.getElementById("extraHiddenCol_"+iModuleId).value;
                 iColCnt = objTable.getColCount(iColCurrentRow)-2 ;//1 for authstatus and 1 for extraidslength;
                 iColIndex = parseInt(iColCnt - iExtraIdsLength);
                 if(iExtraIdsLength>0)
                 {
                     arrExtraIds = [];
                     for(var j=0; j<iExtraIdsLength;j++)
                         arrExtraIds[j] = objTable.getValueAt(iSelectedRow, (iColIndex + j), true, iSelectedRow);
                     if (iModuleId == Constants.ATTACHMENTS) {
                         iExtraIds = arrExtraIds[1];
                         if (arrExtraIds[0] > 0)
                             iTransId = arrExtraIds[0];
                     }
                     else {
                         iExtraIds = arrExtraIds[0];
                     }
                 }
                 if(iModuleId == Constants.PARTS_REQUESTED)
                 {
                    if(arrExtraIds!=null && (arrExtraIds[1]==true || arrExtraIds[1]=="true"))
                    {
                       msg.showMessage(0, MsgHandler.getMsg(MsgConstants.RESTRICT_PARTS_REQ_DELETION,0,0,clAppBuffer.getModuleCaption(Constants.CUST_SPARE_PARTS),clAppBuffer.getModuleCaption(Constants.ESTIMATION)));
                       return false;
                    }
                 }
                 else if(iModuleId == Constants.ESTIMATION)
                 {
                     iExtraIds=null;
                    if(arrExtraIds!=null && (arrExtraIds[0]==true || arrExtraIds[0]=="true"))
                    {
                       msg.showMessage(0, MsgHandler.getMsg(MsgConstants.RESTRICT_ESTIMATION_DELETION,0,0,clAppBuffer.getModuleCaption(Constants.CUST_SPARE_PARTS),clAppBuffer.getModuleCaption(Constants.ESTIMATION)));
                       return false;
                    }
                 }
             }
            relModuleHandler.deleteModules(sUrl,iModuleId,iTransId,iExtraIds,iOpenActModuleId,Constants.RELATEDMODULE_LAYOUT);
        }
        else if(byActionId==Constants.CLOSE_REQUEST)
        {
            var iModuleId=document.getElementById("moduleId").value;
            var iTransId=document.getElementById("transId").value;
            listHandler.closeRequest(sUrl,iModuleId,iTransId);
        }
        else if(byActionId==Constants.CONVERT)
        {
            var iModuleId=document.getElementById("moduleId").value;
            sUrl+="&iTransId="+relModuleHandler.getBaseTransId();
            if(iModuleId==Constants.INCIDENTS || iModuleId==Constants.SUSPECTS)
                sUrl+="&moduleId="+iModuleId;
            //            alert("sUrl==="+sUrl)
            home.setCenterUI(sUrl);
        }

        else if(byActionId == Constants.RAISE_SPAREPART_REQUEST)
        {
            var arrTransIds =listView.getSelTransIds("listReportTab_"+Constants.ESTIMATION);
            if(listHandler.validateRowSelection(arrTransIds,false))
            {
                var iArrExtraIds = listView.getExtraIds("listReportTab_"+Constants.ESTIMATION);
                var sExtraIds=null,iCounter=0,sData="";
                sExtraIds = iArrExtraIds[0];
               /*for(var i=0;i<arrTransIds.length;i++)
                {
                    sExtraIds = iArrExtraIds[i];
                    if(sExtraIds[0]==true || sExtraIds[0]=="true")
                        break;
                    sData+="&transIds="+arrTransIds[i]+"&extraIds="+arrTransIds[i];
                    if(i==0)
                        sData+="&transId="+arrTransIds[0];
                    iCounter++;
                }*/
                if(sExtraIds[0]==true || sExtraIds[0]=="true")
                {
                    msg.showMessage(0, MsgHandler.getMsg(MsgConstants.SPAREPARTS_ALREADY_RAISED,0,0,clAppBuffer.getModuleCaption(Constants.CUST_SPARE_PARTS),clAppBuffer.getModuleCaption(Constants.ESTIMATION)));
                }
                else
                {
                    sData+="&extraIds="+arrTransIds[0];/*&transIds="+arrTransIds[0]+"*/
                    sData+="&callingTransId="+arrTransIds[0];
                    sData+="&isSetModuleData=true";
                    iCounter++;
                    var url = "module/moduleView!getCallModules.do?moduleId="+Constants.PARTS_REQUESTED+"&actionId=115&baseTransId="+relModuleHandler.getBaseTransId();
                    url+="&calledFrom="+Constants.ESTIMATION+sData+"&isEdit=false";
                    //                    url+="&calledFrom="+Constants.ESTIMATION+"&transId="+arrTransIds[0]+"&isEdit=false";
                    listHandler.showModuleDialog(url,Constants.PARTS_REQUESTED,arguments[2],0,false," Parts Requested ");

                }

            }
        }
        else if(byActionId == Constants.RAISE_SPAREPART_REPLACED)
        {
            var arrTransIds =listView.getSelTransIds("listReportTab_"+Constants.PARTS_REQUESTED);
            if(listHandler.validateRowSelection(arrTransIds,true))
            {
                var arrExtraIds = listView.getExtraIds("listReportTab_"+Constants.PARTS_REQUESTED);
                var sExtraIds = null;//arrExtraIds[0];
                var sData="",iCount= 0,iPrevTransId =0,iCurrTransId=0;
                for(var i=0;i<arrTransIds.length;i++)
                {
                    sExtraIds = arrExtraIds[i];
                    iCurrTransId=arrTransIds[i];
                    if(iPrevTransId>0 && iCurrTransId!=iPrevTransId)
                    {
                        msg.showMessage(0,"Multiple record selection is not allowed for selected action.");
                        return false;
                    }
                    if(sExtraIds[1]==true || sExtraIds[1]=="true")
                        break;
                    sData+="&extraIds="+sExtraIds[0];/*&transIds="+arrTransIds[i]+"*/
                    if(i==0)
                    {
                        sData+="&callingTransId="+arrTransIds[0];
                        sData+="&isSetModuleData=true";
                    }
                    iPrevTransId=iCurrTransId;
                    iCount++;
                }
                if(arrTransIds.length==iCount)
                {
                    url = "module/moduleView!getCallModules.do?moduleId="+Constants.PARTS_REPLACED+"&actionId=115&baseTransId="+relModuleHandler.getBaseTransId();
                    url+="&calledFrom="+Constants.PARTS_REQUESTED+sData+"&isEdit=false";
                    listHandler.showModuleDialog(url,Constants.PARTS_REPLACED,arguments[2],0,false," Parts Replaced ");
                }
                else
                {
                    msg.showMessage(0, MsgHandler.getMsg(MsgConstants.SPAREPARTS_ALREADY_REQUESTED,0,0,clAppBuffer.getModuleCaption(Constants.CUST_SPARE_PARTS),clAppBuffer.getModuleCaption(Constants.PARTS_REQUESTED)));
                }
            }
        }
//        else if(byActionId==Constants.NEW_NOTE)
//            relModuleHandler.showNote(sUrl,arguments[2],arguments[3],arguments[4]);
        else if(byActionId==Constants.SEND_AN_EMAIL || byActionId==Constants.REPLY|| byActionId==Constants.REPLY_ALL)
        {
            if(byActionId==Constants.SEND_AN_EMAIL)
            {
                var iApprovalStatus = 0;
                if(document.getElementById("approvalId"))
                    iApprovalStatus=document.getElementById("approvalId").value;
                else if(document.getElementById("baseApprovalId"))
                    iApprovalStatus=document.getElementById("baseApprovalId").value;

                if (iApprovalStatus != Constants.IAPPROVAL_STATUS.APPROVED)
                {
                    msg.showMessage(0,MsgHandler.getMsg(MsgConstants.MOD_PENDING_ACCESS_PENDING,0,0,"Record",MsgHandler.getMsg(MsgConstants.EMAIL)));
                    return false;
                }
            }
            relModuleHandler.showSendMail(sUrl,arguments[2],arguments[3],arguments[4],0,relModuleHandler.getModuleId(),byActionId,0);
        }
/*        else if(byActionId==Constants.NEW_CALL_NOTES)
        {
            if(handler.validateCallStatus(Constants.RELATEDMODULE_LAYOUT,byActionId))
                relModuleHandler.showCallNote(sUrl,arguments[2],arguments[3],arguments[4]);
        }
        else if(byActionId==Constants.NEW_DOCUMENT )
        {
            relModuleHandler.addDocuments(sUrl,arguments[2],arguments[3],arguments[4],byActionId);
        }
        else if(byActionId==Constants.NEW_CALL_ATTACH)
        {
            if(handler.validateCallStatus(Constants.RELATEDMODULE_LAYOUT,byActionId))
                relModuleHandler.addDocuments(sUrl,arguments[2],arguments[3],arguments[4],byActionId);
        }*/
        else if(byActionId==Constants.PRINT)
        {
            //alert(sUrl)

            var iSelTransId=listView.getTransIds("listReportTab_"+arguments[2]);
            //alert(listView.getTransId("listReportTab_"+arguments[2]))
            //if(listView.getTransId("listReportTab_"+arguments[2])!=null && listView.getTransId("listReportTab_"+arguments[2])!=0)
            //if(iSelTransId!=0)
            if(listHandler.validateRowSelection(iSelTransId,false))
            {
                /*if(listHandler.validateRowSelection(iSelTransId,false)==false)
                 return;*/
                var objTbl = new sTable("listReportTab_"+arguments[2]);
                /*var iSelRow = objTbl.getCurrentRow();
                iSelRow = (iSelRow<0)?0:iSelRow;
                var iApprovalStatus = 0;
                var iAuthColIndex = objTbl.getColCount()-1 ;
                iApprovalStatus = objTbl.getValueAt(iSelRow,iAuthColIndex-1);*/
                var iApprovalStatus = listView.getAuthId("listReportTab_"+arguments[2]);

                /*if(iApprovalStatus!=Constants.IAPPROVAL_STATUS.APPROVED)
                {
                    msg.showMessage(0,MsgHandler.getMsg(MsgConstants.MOD_PENDING_ACCESS_PENDING,0,0,clAppBuffer.getModuleCaption(arguments[2],true),MsgHandler.getMsg(MsgConstants.PRINT)));
                    return false;
                }
                else*/
                {
                    var arrActions = [];

                    var sMethod="clPrintLayoutSelection.onClkPrint";
                    if(arguments[3]>1) //vm printing
                        sMethod="clPrintModule.onClkPrintSelectedQuote";

                    /*if(arguments[3] == 1)
                     window.open(sUrl+"&transId="+iSelTransId+"&extraParam=1");
                     else
                     {*/
                    arrActions[0] = MsgHandler.getMsg(MsgConstants.PRINT)+"|"+sMethod;
                    arrActions[1] = MsgHandler.getMsg(MsgConstants.CLOSE)+"|";
                    var clSelectLayoutDlg = new DialogBox("layoutdlg","",140,160,330,185,sUrl+"&transId="+iSelTransId+"&approvalStatus="+iApprovalStatus, false, null, false,true,arrActions);
                    clSelectLayoutDlg.setTitle(MsgHandler.getMsg(MsgConstants.SELECT_LAYOUT));
                    clSelectLayoutDlg.setCenter();
                    //clSelectLayoutDlg.show();
                    //}
                }
                /*else
                 msg.showMessage(0,MsgHandler.getMsg(MsgConstants.SELECT_RECORD));*/
            }
        }
        else if(byActionId==Constants.PRINT) /////////TODO: old--- need to remove
        {          //alert(sUrl)
            sUrl = clAppBuffer.getContextPath()+"/"+sUrl;
            var iSelTransId=listView.getTransIds("listReportTab_"+arguments[2]);
            //alert(listView.getTransId("listReportTab_"+arguments[2]))
            //if(listView.getTransId("listReportTab_"+arguments[2])!=null && listView.getTransId("listReportTab_"+arguments[2])!=0)
            //if(iSelTransId!=0)
            if(listHandler.validateRowSelection(iSelTransId,false))
            {
                /*if(listHandler.validateRowSelection(iSelTransId,false)==false)
                        return;*/
                if(arguments[3] == 0)
                   window.open(sUrl+"&printquote=1&transId="+iSelTransId);
                else if(arguments[3] == 1)
                {
                    window.open(sUrl+"&transId="+iSelTransId+"&extraParam=1");
                }
                else
                {
                    var arrActions = [];
                    arrActions[0] = MsgHandler.getMsg(MsgConstants.PRINT)+"|clPrintModule.onClkPrintSelectedQuote";//TODO need to set Print label and title from messagehandler
                    arrActions[1] = MsgHandler.getMsg(MsgConstants.CLOSE)+"|";
                    var clQuoteLayDlg = new DialogBox("printQuoteDlg","",140,160,280,250,sUrl+"&transId="+iSelTransId, true, null, false,true,arrActions);
                    //clQuoteLayDlg.setTitle(MsgHandler.getMsg(MsgConstants.DETAILS,0,Constants.TASKS));
                    clQuoteLayDlg.setTitle(MsgHandler.getMsg(MsgConstants.SELECT_LAYOUT));
                    clQuoteLayDlg.setCenter();
                    clQuoteLayDlg.show();
                }
            }
            /*else
                msg.showMessage(0,MsgHandler.getMsg(MsgConstants.SELECT_RECORD));*/
        }
     else if(byActionId==Constants.EMAIL_QUOTE || byActionId==Constants.EMAIL_SERVICE_QUOTE)
        {

            //if(listView.getTransId("listReportTab_"+arguments[5])!=null && listView.getTransId("listReportTab_"+arguments[5])!=0)
            //if(iSelTransId!=0)
            var iSelTransId=listView.getTransIds("listReportTab_"+arguments[5]);
            if(listHandler.validateRowSelection(iSelTransId,false))
            {
                var objTbl, iSelRow, iApprovalStatus = 0;
                objTbl = new sTable("listReportTab_"+arguments[5]);
                /*iSelRow = objTbl.getCurrentRow();
                iSelRow = (iSelRow<0)?0:iSelRow;
                var iAuthColIndex = objTbl.getColCount()-1 ;
                iApprovalStatus = objTbl.getValueAt(iSelRow,iAuthColIndex-1);*/
                iApprovalStatus = listView.getAuthId("listReportTab_"+arguments[5]);
                if(iApprovalStatus!=Constants.IAPPROVAL_STATUS.APPROVED)
                {
                    msg.showMessage(0,MsgHandler.getMsg(MsgConstants.MOD_PENDING_ACCESS_PENDING,0,0,clAppBuffer.getModuleCaption(arguments[5],true),MsgHandler.getMsg(MsgConstants.EMAIL)));
                    return false;
                }
                else
                {
                    relModuleHandler.showSendMail(sUrl,arguments[2],arguments[3],arguments[4],iSelTransId,relModuleHandler.iModuleId,byActionId,0);
                }
            }
            /*else
             msg.showMessage(0,MsgHandler.getMsg(MsgConstants.SELECT_RECORD));*/
        }
        else if(byActionId==Constants.VIEW_ALL)
        {
             var iModuleId=arguments[2];
            var iBaseModuleId=document.getElementById("moduleId").value;
            if(iBaseModuleId==Constants.REQUEST)
            {
                sUrl+="&relModuleExtraFlds=callStatusId&relModuleExtraFlds=callStateId";
                sUrl+="&relModuleExtraFldValues="+Focus.crm.sdesk.callDetailedView.getCallStatusId();
                sUrl+="&relModuleExtraFldValues="+Focus.crm.sdesk.callDetailedView.getCallStateId();
            }
            if(iBaseModuleId==Constants.LEADS && document.getElementById("isDetailedviewConvrtdLead") && util.trim(document.getElementById("isDetailedviewConvrtdLead").value).length>0)
            {
                if(sUrl.indexOf("?")!=-1)
                    sUrl+="&isDetailedviewConvrtdLead="+document.getElementById("isDetailedviewConvrtdLead").value;
                else sUrl+="?isDetailedviewConvrtdLead="+document.getElementById("isDetailedviewConvrtdLead").value;
            }
            //alert(iModuleId+","+sUrl)
            listView.viewAllRelatedModule(iModuleId,sUrl);
            //home.setCenterUI(sUrl);
        }
        else if(byActionId==Constants.NEW_CALL_WORKLOG)
        {

            if(handler.validateCallStatus(Constants.RELATEDMODULE_LAYOUT,byActionId))
            {
                var isFromCallTask=arguments[5];

                if(isFromCallTask)
                {
                    var iSelTransId=listView.getTransIds("listReportTab_"+Constants.CALL_TASKS);
                    //alert("iSelTransId " +iSelTransId)

                    if(listHandler.validateRowSelection(iSelTransId,false)==false)
                        return;

                    sUrl+="&calledFrom="+Constants.CALL_TASKS;
                    sUrl+="&callTaskId="+iSelTransId;

                }

                listHandler.showModuleDialog(sUrl,Constants.CALL_WORKLOG,arguments[2],arguments[3],arguments[4]," Worklog ",900,550);
            }
        }
/*
        else if(byActionId==Constants.NEW_CALL_TASK)
        {
            if(handler.validateCallStatus(Constants.RELATEDMODULE_LAYOUT,byActionId))
                relModuleHandler.showModuleDialog(sUrl,Constants.CALL_TASKS,arguments[2],arguments[3],arguments[4],":: Call Task ::",650,400);
        }
*/
        else if(byActionId==Constants.ADD_PART_REPLACED)
        {
            isShowRelModuleInCenterScreen = detailedView.isShowRelModuleInCenterScreen(relModuleHandler.iModuleId);

            iTransId=listView.getSelectedTransId("listReportTab_"+relModuleHandler.iModuleId,0,arguments[2]);

            if(handler.validateCallStatus(Constants.RELATEDMODULE_LAYOUT,byActionId))
            {
                if (isShowRelModuleInCenterScreen)
                {
                    if (iBaseModuleId > 0)
                        sUrl = sUrl + "&calledFrom=" + iBaseModuleId;
                    relModuleHandler.editRelatedModule(relModuleHandler.iModuleId, sUrl, iTransId, false, iBaseModuleId, iBaseTransId, arguments[6], arguments[7]);
                }
                else
                listHandler.showModuleDialog(sUrl,Constants.PARTS_REPLACED,arguments[2],arguments[3],arguments[4]," Parts Replaced ");
            }
        }
        else if(byActionId==Constants.ADD_PART_REQUESTED) {
            isShowRelModuleInCenterScreen = detailedView.isShowRelModuleInCenterScreen(relModuleHandler.iModuleId);
            iTransId=listView.getSelectedTransId("listReportTab_"+relModuleHandler.iModuleId,0, arguments[2]);

            if (handler.validateCallStatus(Constants.RELATEDMODULE_LAYOUT, byActionId)) {
                if (isShowRelModuleInCenterScreen)
                {
                    if (iBaseModuleId > 0)
                        sUrl = sUrl + "&calledFrom=" + iBaseModuleId;
                    relModuleHandler.editRelatedModule(relModuleHandler.iModuleId, sUrl, iTransId, false, iBaseModuleId, iBaseTransId, arguments[6], arguments[7]);
                }
                else
                    listHandler.showModuleDialog(sUrl, Constants.PARTS_REQUESTED, arguments[2], arguments[3], arguments[4], " Parts Requested ");
            }
        }
       /* else if(byActionId==Constants.PULL_DOCUMENTS)
        {
          /!* var moduleId=document.getElementById("moduleId").value;
           var transId=document.getElementById("transId").value;*!/
           clSignEasy.pullSignedDoc();
        }
*/
    };
    this.handleHomepageAction = function(byActionId,sUrl)
    {
        if(byActionId > Constants.STANDARD_ACTIONS_LIMIT )
        {
            var iReportType=arguments[2];
            if (iReportType == Constants.SRC_EXT_REPORT || iReportType == Constants.SRC_INTERNAL_REPORT)
             {
                 var iShowAs=arguments[3];
                 var sTitle=arguments[4];

                 me.openReport(sUrl,iReportType,iShowAs,0,0,0,sTitle,null,0,0);
             }
        }
    };

    this.isFromListView=function()
    {
        var isRelatedActionFromListView=false;
        if(!document.getElementById("moduleViewMode") && !document.getElementById("isViewAll")) //true if related action is from detailed view, false for list view
            isRelatedActionFromListView=true;

        return isRelatedActionFromListView;
    };

    this.convertTeleCallModuleDlg=function(byActionId,iTeleCallTransId,sPhone)
    {
        //alert(byActionId+" , "+iRelModuleId+" , "+iTeleCallTransId+" , "+sPhone);

        me.iTeleCallTransId=iTeleCallTransId;
        if(byActionId == Constants.CONVERT_TO_LEAD)
        {
            me.iRelModuleId=Constants.LEADS;
            home.showModuleDlg(Constants.LEADS, "handler.callBackModuleDlg", "&phone=" + util.encodeURI(sPhone),null,false,null,0,950,500,0);
        }
        else // Constants.CONVERT_TO_CONTACT
        {
            me.iRelModuleId=Constants.CONTACTS;
            home.showModuleDlg(Constants.CONTACTS, "handler.callBackModuleDlg", "&phone=" + util.encodeURI(sPhone),null,false,null,0,950,500,0);
        }

    };
    this.callBackModuleDlg = function (sResponse)
    {
        if (sResponse)
        {
            sResponse = eval(sResponse);
            var iTransId = sResponse[1];
            var sParams = "moduleId=" + me.iRelModuleId + "&transId=" + iTransId;
            sParams+="&teleCallTransId="+me.iTeleCallTransId;

            var sUrl = con.getStruts2Url("common", "epbx.do", "updateTeleCallRelatedType", null);


            con.sendPostRequest(sUrl, sParams, null,arh);
        }

        function arh(sResponse)
        {
            listView.refreshListView(null,null,true);
        }
    };

    this.handleTreeAction = function(byActionId,sUrl)
    {
        if(byActionId==Constants.CONVERT)
            listHandler.getConvertLead(sUrl);
        else if(byActionId==Constants.ASSIGN)
            listHandler.assignLeads(sUrl);
        else if(byActionId==Constants.FIND_DUPLICATES)
            listHandler.getSearchDuplicate(sUrl);
        else if(byActionId==Constants.SHARE)
            listHandler.addRecordUsers(sUrl,arguments[2]);
        else if(byActionId==Constants.CALL_LEAD)
            listHandler.getCallerScreen(sUrl);
    };



    this.getDetailedView = function(sUrl,iTransId,iModuleId,isAccess,sMsg,iMemberId)
    {
        var sParams;
        sParams = "moduleId="+iModuleId+"&transId="+iTransId+"&byAction=" + Constants.DETAILED_LAYOUT;
        //TODO: commented on 23/03/2022 memeberId changes in Lead/TeleLead
        //if(iModuleId==Constants.TELELEADS ||iModuleId==Constants.LEADS )
        //    sParams += "&extraIds="+iMemberId;
        sUrl=listHandler.appendParamsToUrl(sUrl,sParams);

        if(isAccess==0)
            document.getElementById("msgbox").innerHTML=sMsg;
        else
            home.setCenterUI(sUrl);
    };
    
    me.sListQuoteUrl=null;
    this.validateQuoteForListView=function(sUrl,iTransId,isClone,iBaseModuleId,iBaseTransId)
    {
        me.sListQuoteUrl=sUrl;
        var sUrl = con.getStruts2Url("module","opportunity","validateActions",null,true);
        sUrl+="?moduleId=" + Constants.QUOTE + "&opportunityId=" + iTransId;
        con.sendPostRequest(sUrl, null, null,"handler.arhValidateQuote", false);
    };
    
    this.arhValidateQuote=function(sResponse)
    {
        if(sResponse==1)
        {
            var iBaseTransId = listView.getTransId();
            var iBaseModuleId = listView.getModuleId();
            me.editModule(me.sListQuoteUrl,0,false,iBaseModuleId,iBaseTransId);
        }
    };

    this.validateActiveStatus=function()
    {
        var iExtraIds,isActive=true;
        iExtraIds=listView.getSelectedExtraId();
        isActive=(iExtraIds[15]=="true");
        if(!isActive)
        {
            msg.showMessage(0,MsgHandler.getMsg(MsgConstants.IN_ACTIVE_MSG,0,0));
            return false;
        }
        return true;
    };

    this.validateCallStatus=function(byLayoutType,byActionId,iModuleId)
    {
        var iStatusId,iStateId,sResStatusId=null,isActive=true,iExtraIds,isAllowActivity=true;
        var isRelatedActionFromListView=me.isFromListView();
        if(byLayoutType==Constants.LIST_LAYOUT)
        {
            iStatusId=listHandler.getCallStatusId();
            iStateId=listHandler.getCallStateId();
            iExtraIds=listView.getSelectedExtraId();
            //sResStatusId = document.getElementById("resStatusId").value;
            isActive=(iExtraIds[15]=="true");
            isAllowActivity=(iExtraIds[16]==1);
        }
        else if(byLayoutType==Constants.RELATEDMODULE_LAYOUT && document.getElementById("isViewAll"))
        {
            iStatusId=relModuleHandler.getCallStatusId();
            iStateId=relModuleHandler.getCallStateId();
        }else if(byLayoutType==Constants.RELATEDMODULE_LAYOUT && isRelatedActionFromListView)
        {
            iStatusId=listHandler.getCallStatusId();
            iStateId=listHandler.getCallStateId();
            iExtraIds=listView.getSelectedExtraId();
            isActive=(iExtraIds[15]=="true");
        }
        else //if(byLayoutType==Constants.RELATEDMODULE_LAYOUT)
        {
            iStatusId=Focus.crm.sdesk.callDetailedView.getCallStatusId();
            iStateId=Focus.crm.sdesk.callDetailedView.getCallStateId();
            sResStatusId=Focus.crm.sdesk.callDetailedView.getActivityRestrictCallStatus();
            isActive=Focus.crm.sdesk.callDetailedView.getActive();
            //if(sResStatusId>0)
            if(sResStatusId && sResStatusId.length>0)
                sResStatusId=","+sResStatusId+",";
            else
                sResStatusId=null;
        }
        if(!isActive)
        {
            msg.showMessage(0,MsgHandler.getMsg(MsgConstants.IN_ACTIVE_MSG,0,0));
            return;
        }

        //alert(iModuleId+","+iStatusId+","+iStateId);
        var sMsg;
        if( iModuleId==Constants.CALL_CLOSE && ( iStatusId == Constants.IRequest.NEW || iStateId == Constants.IRequest.UN_ASSIGNED) )
        {
            //sMsg="Cannot close the call when the ";
            sMsg=MsgHandler.getMsg(MsgConstants.CANNOT_CLOSE_CALL_Status);
            //sMsg+=(iStatusId== Constants.IRequest.NEW)?" status is New ":" state is Un-assigned ";
            sMsg+=(iStatusId== Constants.IRequest.NEW)?MsgHandler.getMsg(MsgConstants.CANNOT_CLOSE_CALL_NEW):MsgHandler.getMsg(MsgConstants.CANNOT_CLOSE_CALL_UNASSIGN);
            msg.showMessage(0,sMsg);
            return false;
        }
        else if(byActionId==Constants.NEW_CALL_WORKLOG && iStatusId==0)
        {
            sMsg=MsgHandler.getMsg(MsgConstants.WORKLOG);
            sMsg=MsgHandler.getMsg(MsgConstants.ADDOREDIT,0,0,sMsg,clAppBuffer.getModuleCaption(Constants.REQUEST,true).toLowerCase(),'"In-Active"');
            msg.showMessage(0,sMsg);
            return false;
        }
        else
        {
            if(   ( iStatusId == Constants.IRequest.NEW ||(sResStatusId!=null && sResStatusId.indexOf(","+iStatusId+",")!=-1))
                    //iStatusId == Constants.IRequest.CLOSED ||
                 || isRelatedActionFromListView && byActionId!=Constants.SURVEY)
            {
                var bOverRide;
                if( byLayoutType != Constants.LIST_LAYOUT && !isRelatedActionFromListView)
                {
                    bOverRide=Focus.crm.sdesk.callDetailedView.validateSpecialRights(Constants.SECURITY.UPDATE);
                    if( bOverRide && iStatusId != Constants.IRequest.CLOSED)
                        bOverRide=false;
                }
                if(isRelatedActionFromListView)
                {
                    //if( !(iStatusId == Constants.IRequest.CLOSED || byActionId==Constants.NEW_CALL_WORKLOG) && iStatusId != Constants.IRequest.NEW)
                    if( !(iStatusId == Constants.IRequest.CLOSED) && iStatusId != Constants.IRequest.NEW)
                        bOverRide=isAllowActivity;

                }
                if(!bOverRide)
                {
                    //sMsg=" Add or Edit ";
                    //alert(byActionId+","+this.iModuleId+","+iModuleId)
                    var sMsgVar1=null;
                    if(byActionId==Constants.NEW_CALL_WORKLOG)
                        sMsgVar1=MsgHandler.getMsg(MsgConstants.WORKLOG)//"WorkLog";
                    else if(byActionId==Constants.RE_OPEN)
                    {
                        if( Focus.crm.sdesk.callDetailedView.validateSpecialRights(Constants.SECURITY.RE_OPEN) &&
                            Focus.crm.sdesk.callDetailedView.validateSpecialRights(Constants.SECURITY.REOPEN_CLOSE) )
                            return true;
                        sMsgVar1=MsgHandler.getMsg(MsgConstants.RE_OPEN);
                    }
                    else if(byActionId==Constants.NEW)
                    {
                        if(iModuleId==Constants.CALL_NOTES)
                            sMsgVar1=MsgHandler.getMsg(MsgConstants.NOTES);//"Notes";
                        else if(iModuleId==Constants.CALL_TASKS)
                            sMsgVar1=MsgHandler.getMsg(MsgConstants.TASK)//"Task";
                        else if(iModuleId==Constants.ATTACHMENTS)
                            sMsgVar1=MsgHandler.getMsg(MsgConstants.ATTACH)//"Attach";
                        else if(iModuleId==Constants.ESTIMATION || iModuleId==Constants.SERVICE_QUOTE || iModuleId==Constants.SERVICE_ORDER|| iModuleId==Constants.PROBLEMS|| iModuleId==Constants.CHANGES)
                            sMsgVar1 = clAppBuffer.getModuleCaption(iModuleId, true);;;
//                            sMsgVar1=MsgHandler.getMsg(iModuleId)//"Attach";
                    }
                    /*                else if(byActionId==Constants.NEW_CALL_NOTES)
                     sMsg+="Notes";
                     else if(byActionId==Constants.NEW_CALL_TASK)
                     sMsg+="Task";
                     else if(byActionId==Constants.NEW_CALL_ATTACH)
                     sMsg+="Attach";*/
                    else if(byActionId==Constants.ACTION_CALL_RESOLUTION)
                        sMsgVar1 = MsgHandler.getMsg(MsgConstants.RESOLUTION);//"Resolution";
                    else if(byActionId==Constants.ACTION_CALL_RESOLUTION)
                        sMsgVar1 = MsgHandler.getMsg(MsgConstants.RESOLUTION);//"Resolution";
                    else if(byActionId==Constants.ADD_PART_REQUESTED)
                        sMsgVar1 = MsgHandler.getMsg(MsgConstants.PARTSREQUESTED);//"Parts Requested";
                    else if (byActionId == Constants.CLOSE_REQUEST)
                        sMsgVar1 = clAppBuffer.getModuleCaption(Constants.REQUEST, true).toLowerCase();//"CALL CLOSE
                    else if(byActionId==Constants.ADD_PART_REPLACED)
                        sMsgVar1 = MsgHandler.getMsg(MsgConstants.PARTSREPLACED);//"Parts Replaced";
                    else if(byActionId==Constants.DELETE && iModuleId == Constants.CALL_RESOLUTION )
                        sMsgVar1 = MsgHandler.getMsg(MsgConstants.DELETERESO);//"Delete Resolution ";
                    else if(byActionId==Constants.CLOSE_REQUEST)
                        sMsgVar1 = clAppBuffer.getModuleCaption(Constants.REQUEST, true).toLowerCase();;//"CALL CLOSE


                    var sMsgVar2=me.getCallStatusNameById(iStatusId);
                    if( util.trim(sMsgVar2).length==0 )
                    {
                        if(iStatusId== Constants.IRequest.NEW)
                            sMsgVar2="New";
                        else if(iStatusId== Constants.IRequest.CLOSED)
                            sMsgVar2="Closed";
                        else if(iStatusId== Constants.IRequest.RESOLVED)
                            sMsgVar2="Resolved";
                        else if(iStatusId== Constants.IRequest.IN_PROGRESS)
                            sMsgVar2="In-Progress";
                        else if(iStatusId== Constants.IRequest.OPEN)
                            sMsgVar2="Open";
                        else if(iStatusId== Constants.IRequest.ON_HOLD)
                            sMsgVar2="On-hold";
                        else if(iStatusId== Constants.IRequest.UN_ASSIGNED)
                            sMsgVar2="UN-ASSIGNED";
                        else{
                            //sMsgVar2="Escalate";
                            sMsg=MsgHandler.getMsg(MsgConstants.ADDOREDIT_CUSTOM,0,0,sMsgVar1,clAppBuffer.getModuleCaption(Constants.REQUEST,true).toLowerCase());
                            msg.showMessage(0,sMsg);
                            return false;
                        }
                    }
                    sMsg=MsgHandler.getMsg(MsgConstants.ADDOREDIT,0,0,sMsgVar1,clAppBuffer.getModuleCaption(Constants.REQUEST,true).toLowerCase(),sMsgVar2);
                    //sMsg+=(iStatusId== Constants.IRequest.NEW)?"New":" Closed ";
                    msg.showMessage(0,sMsg);

                    return false;
                }
            }
            else if( iModuleId==Constants.CALL_CLOSE && iStatusId != Constants.IRequest.RESOLVED && byActionId!=Constants.SURVEY  )
            {
                //msg.showMessage(0,"Call can be closed only when call is Resolved");
                //msg.showMessage(0,"Request cannot be Closed if it is not resolved");
                if( iStatusId==Constants.IRequest.RESOLVED)
                    msg.showMessage(0,MsgHandler.getMsg(MsgConstants.CALL_ALREADY_CLOSED,0,0,clAppBuffer.getModuleCaption(Constants.REQUEST,true).toLowerCase()));
                else
                    msg.showMessage(0,MsgHandler.getMsg(MsgConstants.CALL_CANNOTCLOSE,0,0,clAppBuffer.getModuleCaption(Constants.REQUEST,true).toLowerCase()));
                return false;
            }
            else if( iModuleId==Constants.REQUEST && iStatusId != Constants.IRequest.CLOSED && byActionId==Constants.SURVEY  )
            {
                //msg.showMessage(0,"Call can be closed only when call is Resolved");
                msg.showMessage(0,MsgHandler.getMsg(MsgConstants.SURVEY_FORCALLS));
                return false;
            }
        }
        return true;
    };

    this.getCallStatusNameById=function(iStatusId)
    {
        var sReturnStatus="";
        if(document.getElementById("hfReqStatus"))
        {
            var sStatus=document.getElementById("hfReqStatus").value;
            if(util.trim(sStatus).length>0)
            {
                var iIndex=sStatus.indexOf(iStatusId+"_");
                if( iIndex!=-1 )
                {
                    var sVar1=sStatus.substring(iIndex);
                    sReturnStatus=sVar1.split(",")[0].split("_")[1];
                }
            }
        }
        return sReturnStatus
    };

    this.handleDialogClose=function(iRelModuleId)
    {
        if( me.byLayoutType==Constants.DETAILED_LAYOUT || me.byLayoutType==Constants.RELATEDMODULE_LAYOUT)
        {
            //var iModuleId=document.getElementById("moduleId").value;
            if(iRelModuleId != Constants.CALL_CLOSE && iRelModuleId != Constants.CALL_REOPEN)
            {
                //if(document.getElementById("isViewAll") && document.getElementById("isViewAll").value==1)
                if(document.getElementById("listReportTab_"+iRelModuleId))
                    listView.refreshRelatedView(iRelModuleId);
            }
            //else
                 //document.getElementById("statusId").value=Constants.IRequest.CLOSED;

            getDialogBox("module"+iRelModuleId).hide();

            if( me.byLayoutType==Constants.DETAILED_LAYOUT)
                detailedHandler.refreshHeader();
            /*if( iRelModuleId==Constants.CALL_REOPEN)
                Focus.crm.sdesk.callDetailedView.enableButtons();*/
        }
        else if( me.byLayoutType==Constants.LIST_LAYOUT )
        {
            var iModuleId=document.getElementById("iModuleId").value;
            if(iRelModuleId == Constants.PMS_CONTRACT_CLOSE)
                getDialogBox("module"+iRelModuleId).hide();
            else
                getDialogBox("module"+iModuleId).hide();
             listView.getRefresh();
        }
        else
        {
            if(iRelModuleId == Constants.PMS_CONTRACT_CLOSE)/*contract book snapshot close*/
                getDialogBox("module"+iRelModuleId).hide();
        }
    };


    /**
     *
     */
    this.onClkGetNotes=function(imgObject,iModuleId,iTransId,isFromSummaryInfo)
    {
        var iRowIndex,iCallId,iStatusId,sAction,clNotesDetDlg,arrExtraIds,arrActions;
        var sUrl = con.getStruts2Url("module","moduleView","getCallModules",null,true);
        var iWidth = 600,iHeight = 550,x = 140,y = 160;
        var ignoreAnimation = false,isSimple = false,isScrollable = false;
       if(iModuleId==Constants.REQUEST){
            iRowIndex=imgObject.parentNode.parentNode.rowIndex-1;
            arrExtraIds=listView.getSelectedExtraId('',iRowIndex);
            iStatusId=arrExtraIds[2];
            iCallId=listView.getSelectedTransId('',iRowIndex);
            sUrl+="?callId="+iCallId+"&statusId="+iStatusId;
            sUrl+="&baseTransId="+iCallId+"&actionId="+Constants.GET_NOTES+"&moduleId="+iModuleId+"&relModuleId="+Constants.CALL_NOTES;
        }
        else
            sUrl+="?callId="+iTransId+"&actionId="+Constants.GET_NOTES+"&moduleId="+iModuleId+"&includeHeader=1";
        arrActions = [];
        if(iStatusId==Constants.IRequest.CLOSED)
//            arrActions[0] = "Ok|";
            arrActions[0] = MsgHandler.getMsg(MsgConstants.OK,0,0)+"|";
        else{
            sAction="clCallNotes.onClkSaveCallNotes(true,"+isFromSummaryInfo+")";
            arrActions[0] = "Save|"+sAction;
            arrActions[1] = MsgHandler.getMsg(MsgConstants.CANCEL,0,0)+"|";
        }
//        alert(sUrl)
        clNotesDetDlg = new DialogBox("callNotesDets","",x,y,iWidth,iHeight,sUrl, true, null, isScrollable,true,arrActions,false,null,false,false,false,false,ignoreAnimation,isSimple);
        clNotesDetDlg.setTitle(MsgHandler.getMsg(MsgConstants.DETAILS,0,Constants.NOTES));
//        clNotesDetDlg.setTitle("Notes Details");
        clNotesDetDlg.setCenter();
        clNotesDetDlg.isHide(true);
//        clNotesDetDlg.show();
    };
    /**
     *
     */
    this.onClkGetNotes1=function(imgObject,iModuleId,iTransId,isFromSummaryInfo)
    {
        var iRowIndex,iCallId,iStatusId,sAction,clNotesDetDlg,arrExtraIds,arrActions;
        var sUrl = con.getStruts2Url("module","moduleView","getCallModules",null,true);
        var iWidth = 600,iHeight = 550,x = 140,y = 160;
        var ignoreAnimation = false,isSimple = false,isScrollable = false;
       if(iModuleId==Constants.REQUEST){
            iRowIndex=imgObject.parentNode.parentNode.rowIndex-1;
            arrExtraIds=listView.getSelectedExtraId('',iRowIndex);
            iStatusId=arrExtraIds[2];
            iCallId=listView.getSelectedTransId('',iRowIndex);
            sUrl+="?callId="+iCallId+"&statusId="+iStatusId;
            sUrl+="&baseTransId="+iCallId+"&actionId="+Constants.GET_NOTES+"&moduleId="+iModuleId+"&relModuleId="+Constants.CALL_NOTES;
        }
        else
            sUrl+="?callId="+iTransId+"&actionId="+Constants.GET_NOTES+"&moduleId="+iModuleId+"&includeHeader=1";
        arrActions = [];
        if(iStatusId==Constants.IRequest.CLOSED)
//            arrActions[0] = "Ok|";
            arrActions[0] = MsgHandler.getMsg(MsgConstants.OK,0,0)+"|";
        else{
            sAction="clCallNotes.onClkSaveCallNotes(true,"+isFromSummaryInfo+")";
            arrActions[0] = "Save|"+sAction;
            //arrActions[1] = MsgHandler.getMsg(MsgConstants.CANCEL,0,0)+"|";
        }
        clOverlay.showFrameOverlay("callNotesDets",sUrl,"50%","100%",clOverlay.OVERLAY_RIGHT,0,0,null,MsgHandler.getMsg(MsgConstants.DETAILS,0,Constants.NOTES),"containerDiv",false,arrActions);
    };

    this.onClkGetUserActivities = function(iTransId,isInDialog,isCallNotes){
        var clUserActivitiesDlg,arrActions;
        var sUrl,iStatusId;
        if(isCallNotes){
            sUrl = con.getStruts2Url("module","notes","getNotesDetailsDlg",null,true);
            iStatusId = Constants.IRequest.CLOSED;
            sUrl+="?callId="+iTransId+"&statusId="+Constants.IRequest.CLOSED;
            sUrl+="&moduleId="+Constants.REQUEST;
            sUrl+="&isUserActivity=1";
        }
        else{
            sUrl = con.getStruts2Url("support","worklog","getWorkLogs",null,true);
            sUrl+="?callId="+iTransId;
        }

        arrActions = [];

        var iHeight = 550,iWidth = 600,x = 140, y = 160;
        var ignoreAnimation = false,isSimple = false,isScrollable = false;
        if(isInDialog){
            iHeight = 440;
            iWidth = 360;
            x = 0;
            y = 0;
            ignoreAnimation = true;
            isSimple = true;
            isScrollable = true;
            sUrl+="&height=height:375";

            var moduleDlg = parent.getDialogBox("module"+Constants.CALL_CLOSE);
            if(moduleDlg == null)
            moduleDlg = parent.getDialogBox("module"+Constants.REQUEST);
            moduleDlg.setBounds(0,70,750,570);
        }
        else
        arrActions[0] = MsgHandler.getMsg(MsgConstants.OK,0,0)+"|";
        clUserActivitiesDlg = new DialogBox("workLogDets","",x,y,iWidth,iHeight,sUrl, true, null, isScrollable,true,arrActions,false,null,false,false,false,false,ignoreAnimation,isSimple);

        if(isCallNotes)
            clUserActivitiesDlg.setTitle(MsgHandler.getMsg(MsgConstants.DETAILS,0,Constants.NOTES));
        else
            clUserActivitiesDlg.setTitle(clAppBuffer.getModuleCaption(Constants.CALL_WORKLOG,false));

        clUserActivitiesDlg.setCenter();
        clUserActivitiesDlg.isHide(true);
    };
    /**
     *
     */
    this.onClkGetTasks=function(imgObject){
        var iRowIndex,sUrl,clTasksDetDlg,arrActions,iCallId;
        iRowIndex=imgObject.parentNode.parentNode.rowIndex-1;
        arrActions = [];
//        arrActions[0] = "Ok|";
        arrActions[0] = MsgHandler.getMsg(MsgConstants.OK,0,0)+"|";
        iCallId=listView.getSelectedTransId('',iRowIndex);
        sUrl = con.getStruts2Url("module","moduleView","getCallModules",null,true);
        sUrl+="?baseTransId="+iCallId+"&actionId="+Constants.GET_TASKS+"&moduleId=0&callId="+iCallId;
        clTasksDetDlg = new DialogBox("taskDets","",140,160,600,500,sUrl, true, null, false,true,arrActions);
        clTasksDetDlg.setTitle(MsgHandler.getMsg(MsgConstants.DETAILS,0,Constants.TASKS));
//        clTasksDetDlg.setTitle("Tasks Details");
        clTasksDetDlg.setCenter();
        clTasksDetDlg.show();
    };
    /**
     *
     */
       this.onClkGetEmails=function(imgObject){
           var iRowIndex,sUrl,iModuleId,iCallId,arrActions,clEmailDetDlg;
           iRowIndex=imgObject.parentNode.parentNode.rowIndex-1;
           arrActions = [];
//           arrActions[0] = "Ok|";
           arrActions[0] = MsgHandler.getMsg(MsgConstants.OK,0,0)+"|";
           iCallId=listView.getSelectedTransId('',iRowIndex);
           iModuleId=Constants.REQUEST;
           sUrl = con.getStruts2Url("module","moduleView","getCallModules",null,true);
           sUrl+="?callId="+iCallId+"&moduleId="+iModuleId;
           sUrl+="&baseTransId="+iCallId+"&actionId="+Constants.GET_EMAILS;
           clEmailDetDlg = new DialogBox("emailDets",null,140,160,550,500,sUrl, true, null, false,true,arrActions);
           clEmailDetDlg.setTitle(MsgHandler.getMsg(MsgConstants.DETAILS,0,Constants.EMAILS));
//           clEmailDetDlg.setTitle("Email Details");
           clEmailDetDlg.setCenter();
           clEmailDetDlg.show();
       };

    // ///////////////////////////////////////// Dashboard  /////////////////////////////////////////////////////////////////

    ///// ERP Mapping List View ////////////////
    this.cloneErpMapping = function(sUrl)
    {
        if(listHandler.validateRowSelection(null,false))
        {
            var iTransId = listView.getSelectedTransId();
            sUrl+="&transId="+iTransId;
            home.setCenterUI(sUrl);
        }
    };
    this.cloneWorkFlow = function(sUrl)
    {
        if(listHandler.validateRowSelection(null,false))
        {
            var iTransId = listView.getSelectedTransId();
            sUrl+="&transId="+iTransId;
            if(window["clCloudSetup"]!=undefined)
            {
                AdvPaging.deleteInstance("listReportTab_"+listView.getTableId());
                home.setCenterUI(sUrl,null,null,false,"clModuleTabbedPane.handleResponse");
            }
            else
            home.setCenterUI(sUrl);
        }
    };

    this.updateSyncMaster = function()
    {
        if(listHandler.validateRowSelection(null,false))
        {
            //var iTransId = listView.getSelectedTransId();
            var iTransId = listHandler.getSelectedTransIds();
            var arrActions,clDlg,iModuleId=0;
            var sDlg="clSyncDlg";
            iModuleId = listView.getModuleId();
            clDlg = getDialogBox(sDlg);
            arrActions = [];
            arrActions[0] = MsgHandler.getMsg(MsgConstants.SYNC)+"|clERPSyncMasters.updateSyncMaster";
            arrActions[1] = MsgHandler.getMsg(MsgConstants.CANCEL)+"|";
            clDlg = new DialogBox(sDlg,MsgHandler.getMsg(MsgConstants.ERP_SYNCMASTERS),240,50,650,585,
                    "common/integrationSet!getERPSyncMasters.do?transId="+iTransId, true, null, true,true,arrActions,true,null,true,false,false,false,true);
            clDlg.setCenter();
            clDlg.show();

        }

    };

    this.cloneProfilesRoles = function(sUrl)
    {
        if(listHandler.validateRowSelection(null,false))
        {
            var iTransId = listView.getSelectedTransId();
            sUrl+="&transId="+iTransId;
            home.setCenterUI(sUrl);
        }
    };

    this.onClkCloneMappingTemplate = function(sUrl)
    {
        if(listHandler.validateRowSelection(null,false))
        {
            var iTransId = listView.getSelectedTransId();
            sUrl+="&transId="+iTransId;
            sUrl+="&isClone="+true;
            home.setCenterUI(sUrl);
        }
    };

    this.onClkActiveInactiveScreens = function(iType,iConfigId)
    {
        var iTransIds =listView.getTransIds();
        var isActive = false;
        if(iConfigId==Constants.ERP_FOCUS_MAPPINGS)
            isActive = me.validateActiveInactive(iType,5,MsgConstants.ERPMAPPING_ACTIVE,MsgConstants.ERPMAPPING_INACTIVE);
        else
            isActive = me.validateActiveInactive(iType,3,MsgConstants.INTEGRATION_SETT_ACTIVE,MsgConstants.INTEGRATION_SETT_INACTIVE);

        if(listHandler.validateRowSelection(iTransIds,true) && isActive)
        {
            var sUrl="";
            if(iConfigId==Constants.ERP_FOCUS_MAPPINGS)
                sUrl = con.getStruts2Url("common","integrationSet","updateMappingStatus",null,true);
            else
                sUrl = con.getStruts2Url("common","integrationSet","updateIntSettingStatus",null,true);
            sUrl+="?transIds="+iTransIds+"&type="+iType;
            if(iConfigId==Constants.ERP_FOCUS_MAPPINGS)
                con.sendPostRequest(sUrl, null, null,"handler.refreshErpMapping", false);
            else
                con.sendPostRequest(sUrl, null, null,"handler.refreshIntSettings", false);
        }
    };

    this.refreshErpMapping=function(sResponse)
    {
        var sUrl = "",sParams="";
        sUrl = con.getStruts2Url("common","setup","getPrefSetup",null,true);
        if(document.getElementById("title")!=null)
            sParams += "&title="+util.encodeURI(document.getElementById("title").value);
        sUrl +="?configId=1682&groupId=1"+sParams;
        home.setCenterUI(sUrl);
    };
    this.refreshIntSettings=function(sResponse)
    {
        var sUrl = "",sParams="";
        sUrl = con.getStruts2Url("common","setup","getPrefSetup",null,true);
        if(document.getElementById("title")!=null)
            sParams += "&title="+util.encodeURI(document.getElementById("title").value);
        sUrl +="?configId=1681&groupId=1"+sParams;
        home.setCenterUI(sUrl);
    };
    ///// ERP Mapping List View ////////////////

     ///// WORKFLOW List View ////////////////
    this.onClkActiveInactiveWorkflow = function(iType)
    {
        var iTransIds =listView.getTransIds();
        if(listHandler.validateRowSelection(iTransIds,true))
        {
            var sUrl="";
            sUrl = con.getStruts2Url("common","workFlow","updateWorkflowStatus",null,true);
            sUrl+="?active="+iType;
             for(var k=0; k<iTransIds.length;k++)
            {
                sUrl+="&transIds=" + iTransIds[k];
            }
            con.sendPostRequest(sUrl, null, null,"handler.arhWorkflowActive", false);
        }
    };
    this.arhWorkflowActive = function()
    {
        var sUrl = "",sParams="";
        sUrl = con.getStruts2Url("common","setup","getPrefSetup",null,true);
        if(document.getElementById("title")!=null)
            sParams += "&title="+util.encodeURI(document.getElementById("title").value);
        sUrl +="?configId=151&groupId=6"+sParams;
        home.setCenterUI(sUrl);
    };
    ///// WORKFLOW List View ////////////////

    this.onClkToggleActiveRecords = function(iStatusId,iGroupId,iConfigId){
        var iTransIds = listView.getTransIds();
        if(listHandler.validateRowSelection(iTransIds,true))
        {
            var sUrl = null;

            if( iConfigId == Constants.BUSINESS_PROCESS.WORKFLOWS )
                sUrl = con.getStruts2Url("common","workFlow","updateWorkflowStatus",null,true);
            else
                sUrl = con.getStruts2Url("common","templates","updateTemplateStatus",null,true);

            sUrl += "?statusId="+iStatusId;
            var iSelectionType = AdvPaging.getInstance().getSelectionPageType();
            if( iSelectionType == 1 )
                sUrl += "&reportHandle="+listView.getReportHandle();
            else {
                for (var k = 0; k < iTransIds.length; k++)
                    sUrl += "&transIds=" + iTransIds[k];
            }
            con.sendPostRequest(sUrl, null, null,"handler.arhToggleActiveRecords", false, null, null, false, false, ACTION_UPDATE, false, [iGroupId,iConfigId]);
        }
    };
    this.arhToggleActiveRecords = function(sResponse, iStatusCode, sMsg, appValue, objReqCache)
    {
        var sUrl = con.getStruts2Url("common","setup","getPrefSetup",null,true);
        sUrl += "?configId="+objReqCache[1]+"&groupId="+objReqCache[0];
        if(document.getElementById("title")!=null)
            sUrl += "&title="+util.encodeURI(document.getElementById("title").value);
        home.setCenterUI(sUrl,null,true);
    };
    //////////////////////////////////// Social Config //////////////////////////////////////////////////////////////////

     this.getNetworkLogin = function(thisObj,iNetworkType)
    {
        var iNetworkId=1,iRowIndex,arrCalActions,sUrl,iSocialUserid=0,dlgNetworkLogin,sTitle;
        sUrl = con.getStruts2Url("social","network","getNetworkLoginDlg",null,true);
        if(thisObj != undefined && iNetworkType == undefined)
        {
            iRowIndex = thisObj.parentNode.parentNode.rowIndex-1;
            iSocialUserid = listView.getSelectedTransId("listReportTab_1",iRowIndex);
            iNetworkId = new sTable("listReportTab_1").getValueAt(iRowIndex,2);
            sUrl += "?iSocialUserId="+iSocialUserid+"&networkId="+iNetworkId;
        }
        else
        {
            iNetworkId = iNetworkType;
            sUrl +="?iSocialUserId="+iSocialUserid+"&networkId="+iNetworkId;
        }
        if(iNetworkId == 2)
            sTitle = MsgHandler.getMsg(MsgConstants.GOOGLE_ACCOUNT,0,0);
        //            sTitle = "Google Account";
        else if(iNetworkId == 3)
            sTitle = MsgHandler.getMsg(MsgConstants.FACEBOOK_ACCOUNT,0,0);
        //            sTitle = "Facebook Account";
        else if(iNetworkId == 4)
                sTitle = MsgHandler.getMsg(MsgConstants.TWITTER_ACCOUNT,0,0);
        //                sTitle = "Twitter Account";


        arrCalActions = [];
        /*arrCalActions[0] = "Ok|clNetworkLogin.saveNetworkUserInfo"; //3rd param onwards===attributes
        arrCalActions[1] = "Cancel|";*/
        arrCalActions[0] = MsgHandler.getMsg(MsgConstants.OK,0,0)+"|clNetworkLogin.saveNetworkUserInfo"; //3rd param onwards===attributes
        arrCalActions[1] = MsgHandler.getMsg(MsgConstants.CANCEL,0,0)+"|";

        dlgNetworkLogin =new DialogBox("dlg", sTitle,100,50,580,330,sUrl,true,"frmNetworkLogin",null,true,arrCalActions);
        dlgNetworkLogin.setTitle(sTitle);
        dlgNetworkLogin.setCenter();
        dlgNetworkLogin.show();
    };
    this.getReminder = function(thisObj)
    {
        var iReminderId = 0,arrCalActions,sUrl,dlgReminder;
        sUrl = con.getStruts2Url("module","reminder","getReminder",null,true);
       if(thisObj!=undefined){
        var iRowIndex = thisObj.parentNode.parentNode.rowIndex-1;
        iReminderId = listView.getSelectedTransId("listReportTab_1",iRowIndex);
       }

        sUrl+="?transId="+iReminderId;
        arrCalActions = [];
        /*arrCalActions[0] = "Ok|clReminder.onClkSaveReminder"; //3rd param onwards===attributes
        arrCalActions[1] = "Cancel|";*/
        arrCalActions[0] = MsgHandler.getMsg(MsgConstants.OK,0,0)+"|clReminder.onClkSaveReminder"; //3rd param onwards===attributes
        arrCalActions[1] =MsgHandler.getMsg(MsgConstants.CANCEL,0,0)+"|";

        dlgReminder =new DialogBox("dlg", "",100,50,580,300,sUrl,true,"frmReminder",null,true,arrCalActions);
//        dlgReminder.setTitle(":: My Reminders ::")
        dlgReminder.setTitle(MsgHandler.getMsg(MsgConstants.MY,0,0)+""+MsgHandler.getMsg(MsgConstants.REMINDERS,0,0));
        dlgReminder.setCenter();
        dlgReminder.show();
    };
    this.deleteNetworkUserInfo = function(thisObj,sUrl) {
        if (window.confirm("Are you sure want to delete ?")) {
            var iRowIndex = thisObj.parentNode.parentNode.rowIndex-1;
            var iSocialUserid = listView.getSelectedTransId("listReportTab_1",iRowIndex);
            sUrl +="?iSocialUserId="+iSocialUserid;
            con.sendPostRequest(sUrl,null,null,null);

            sUrl = con.getStruts2Url("common","setup","getPrefSetup",null,true);
            sUrl +="?configId=186&groupId=14";
            listView.refreshListView(sUrl);
        }

    };

    this.onClkInviteUsers = function()
    {
        var sUrl,iModuleId,arrActions,clCSSInviteUsersDlg;
        arrActions = [];
        arrActions[0] = MsgHandler.getMsg(MsgConstants.INVITE,0,0)+"|clInviteUsers.onClkInviteUsers";
        arrActions[1] = MsgHandler.getMsg(MsgConstants.CANCEL,0,0)+"|";
        //iCallId=listView.getSelectedTransId('',iRowIndex);
        iModuleId=Constants.CONTACTS;
        sUrl = con.getStruts2Url("support","cssSettings","getInviteUsers",null,true);
        sUrl+="?moduleId="+iModuleId;
        //sUrl+="&baseTransId="+iCallId+"&actionId="+Constants.GET_EMAILS;
        clCSSInviteUsersDlg = new DialogBox("inviteUsers",""+MsgHandler.getMsg(MsgConstants.INV_USERS_DLG)+"",140,160,890,650,sUrl, true, null, true,true,arrActions);
        clCSSInviteUsersDlg.setCenter();
        clCSSInviteUsersDlg.show();

    };

    this.onClkDisableCssUsers = function(iType)
    {
        var iTransIds =listView.getTransIds();
        var clTable = new sTable("listReportTab_1");
        var iColCount = clTable.getColCount();
        var chkActiveIndex=0;
        for (var i = 1; i < iColCount; i++)
        {
            if(clTable.getHeaderElementAt(i)!=undefined)
            {
                /*var iColumnVal =(clTable.getHeaderElementAt(i).childNodes[1]).value;
                if(iColumnVal==34046)//UserActive column*/
                var sDiv=clTable.getHeaderElementAt(i);
                var fldId=cross.getFirstElement(sDiv.childNodes);
                var iFieldId=fldId.value;
                //var sColumnVal =cross.getInnerText(clTable.getHeaderElementAt(i));
                //if(sColumnVal=="User Active")//UserActive column
                if(iFieldId==34046)
                {
                    chkActiveIndex=i;
                    break;
                }
            }
        }
        if(chkActiveIndex>0)
        {
            if(listHandler.validateRowSelection(iTransIds,true) && me.validateCSSActiveInactive(iType,chkActiveIndex))
            {
                var sUrl = con.getStruts2Url("support","cssSettings","disableUsers",null,true);
                sUrl+="?userIds="+iTransIds+"&type="+iType;
                 con.sendPostRequest(sUrl, null, null,"handler.arhDisableerrorDlg", false);
            }
        }
    };


    this.validateCSSActiveInactive=function(iType,chkIndex)
    {
        var clTable = new sTable("listReportTab_1");
        var iRowCnt = clTable.getRowCount();
        var tdChk,objChkBox,iRowIndex;
        for (var i = 0; i < iRowCnt; i++)
        {
            tdChk = clTable.getElementAt(i,0).parentNode;
            objChkBox = cross.getFirstElement(tdChk.childNodes);
            if(objChkBox.checked)
            {
                iRowIndex = objChkBox.parentNode.parentNode.parentNode.rowIndex-1;
                var objActiveCheckBox = clTable.getElementAt(iRowIndex, chkIndex).parentNode;
                var objElements=objActiveCheckBox.getElementsByTagName("INPUT");
                 if(objElements.length>0)
                     objActiveCheckBox=objElements[0];
                if(objActiveCheckBox.checked)//active
                {

                    if(iType==0)
                    {
                        //                        Validation.showMessage("Selected user "+clTable.getValueAt(i, 1)+" is already Active",Validation.ERROR_MSG);
                        msg.showMessage(0,MsgHandler.getMsg(MsgConstants.CSS_ACTIVE,0,0,clAppBuffer.getModuleCaption(Constants.CONTACTS,true)));
                        return false;
                    }
                }
                else
                {
                    if(iType==1)
                    {
                        //                        Validation.showMessage("Selected user "+clTable.getValueAt(i, 1)+" is already In-Active",Validation.ERROR_MSG);
                        msg.showMessage(0,MsgHandler.getMsg(MsgConstants.CSS_INACTIVE,0,0,clAppBuffer.getModuleCaption(Constants.CONTACTS,true)));
                        return false;
                    }
                }
            }
        }

        return true;
    };

    this.onClkUnlockCssUser = function(iType)
    {
        var clTable = new sTable("listReportTab_1");
        var iColCount = clTable.getColCount();
        var chkActiveIndex=0;
        for (var i = 1; i < iColCount; i++)
        {
            if(clTable.getHeaderElementAt(i)!=undefined)
            {
                /*var iColumnVal =(clTable.getHeaderElementAt(i).childNodes[1]).value;
                if(iColumnVal==34047)//UserLocked column*/
                var sDiv=clTable.getHeaderElementAt(i);
                var fldId=cross.getFirstElement(sDiv.childNodes);
                var iFieldId=fldId.value;
                //var sColumnVal =cross.getInnerText(clTable.getHeaderElementAt(i));
                //if(sColumnVal=="User Locked")//UserActive column
                if(iFieldId==34047)
                {
                    chkActiveIndex=i;
                    break;
                }
            }
        }
        if(chkActiveIndex>0)
        {
            var iTransIds =listView.getTransIds();
            if(listHandler.validateRowSelection(iTransIds,true) && me.validateUnlockCSSUsers(chkActiveIndex))
            {
                var sUrl = con.getStruts2Url("support","cssSettings","unlockCssUsers",null,true);
                sUrl+="?userIds="+iTransIds+"&type="+iType;
                con.sendPostRequest(sUrl, null, null,"handler.arhUnlockCssuser", false);
            }
        }
    };

    this.onClkResetCSSPassword = function(sUrl)
    {
        if(listHandler.validateRowSelection(null,true))
        {
            var addAssignUserDlg ;
            var arrActions = [];
            arrActions[0] = MsgHandler.getMsg(MsgConstants.OK,0,0)+"|clResetCssPwd.onClkSaveCssResetPwd";//3rd param onwards===attributes
            arrActions[1] = MsgHandler.getMsg(MsgConstants.CANCEL,0,0)+"|";

            var sParam = "?transId="+listView.getTransIds();
            addAssignUserDlg = new DialogBox("dlgResetPwd",":. "+MsgHandler.getMsg(MsgConstants.RESET_PWD)+" .:",140,160,330,240,sUrl+sParam,true,null,true,true,arrActions);

            addAssignUserDlg.setCenter();
            addAssignUserDlg.show();
        }
    };

    this.onClkResetCSSEmail = function(sUrl)
    {
        if(listHandler.validateRowSelection(null,false))
        {
            var clEmialDlg ;
            var arrActions = [];
            arrActions[0] = MsgHandler.getMsg(MsgConstants.OK,0,0)+"|clResetCssEmail.onClkSaveCssResetEmail";
            arrActions[1] = MsgHandler.getMsg(MsgConstants.CANCEL,0,0)+"|";

            var sParam = "?transId="+listView.getTransIds();
            clEmialDlg = new DialogBox("dlgResetEmail",":. "+MsgHandler.getMsg(MsgConstants.RESET_EMAIL)+" .:",140,160,370,260,sUrl+sParam,true,null,true,true,arrActions);

            clEmialDlg.setCenter();
            clEmialDlg.show();
        }
    };

    /**
     * this method is used to mark/unmark as managet in css list view
     * @param iType : 1:Mark:2 :unmark
     * @param iUserId : user Id
     */

    this.onClkMarkAsManagerBtn=function(iType,iUserId)
    {
        var sUrl ="support/cssSettings!markAsManager.do?";
        sUrl+="userId="+iUserId+"&type="+iType;
        con.sendPostRequest(sUrl,null, null,"handler.arhDisableerrorDlg", false);
    };

    this.validateActiveInactive = function(iType,chkIndex,iActiveContsant,iInActiveConstant)
    {
        var clTable = new sTable("listReportTab_1");
        var iRowCnt = clTable.getRowCount();
        var tdChk,objChkBox,iRowIndex,objDv,arrDvChilds;
        for (var i = 0; i < iRowCnt; i++)
        {
            tdChk = clTable.getElementAt(i,0).parentNode;
            objChkBox = cross.getFirstElement(tdChk.childNodes);
            if(objChkBox.checked)
            {
                iRowIndex = objChkBox.parentNode.parentNode.parentNode.rowIndex-1;
//                alert(clTable.getElementAt(iRowIndex, chkIndex).innerHTML)
//                if(clTable.getElementAt(iRowIndex, chkIndex).checked)//active
                objDv=clTable.getElementAt(iRowIndex, chkIndex);
                //alert(objDv.type)
                var objCheckBox=null;
                arrDvChilds = cross.getChildren(objDv);
                objCheckBox=arrDvChilds[0];
                if(objCheckBox!=null && objCheckBox.checked)
                {

                    if(iType==0)
                    {
//                        Validation.showMessage("Selected user "+clTable.getValueAt(i, 1)+" is already Active",Validation.ERROR_MSG);
                        msg.showMessage(0,MsgHandler.getMsg(iActiveContsant,0,0,clTable.getValueAt(i, 1)));
                        return false;
                    }
                }
                else
                {
                    if(iType==1)
                    {
//                        Validation.showMessage("Selected user "+clTable.getValueAt(i, 1)+" is already In-Active",Validation.ERROR_MSG);
                        msg.showMessage(0,MsgHandler.getMsg(iInActiveConstant,0,0,clTable.getValueAt(i, 1)));
                        return false;
                    }
                }
            }
        }

        return true;
    };

    this.validateUnlockCSSUsers = function(chkIndex)
    {
        var clTable = new sTable("listReportTab_1");
        var iRowCnt = clTable.getRowCount();
        var tdChk,objChkBox,iRowIndex;
        for (var i = 0; i < iRowCnt; i++)
        {
            tdChk = clTable.getElementAt(i,0).parentNode;
            objChkBox = cross.getFirstElement(tdChk.childNodes);
            if(objChkBox.checked)
            {
                iRowIndex = objChkBox.parentNode.parentNode.parentNode.rowIndex-1;
                var objActiveCheckBox = clTable.getElementAt(iRowIndex, chkIndex).parentNode;
                var objElements=objActiveCheckBox.getElementsByTagName("INPUT");
                if(objElements.length>0)
                    objActiveCheckBox=objElements[0];
                if(!objActiveCheckBox.checked)//active
                {
                    msg.showMessage(0,MsgHandler.getMsg(MsgConstants.CSS_UNLOCKED,0,0,clAppBuffer.getModuleCaption(Constants.CONTACTS,true)));
                    return false;
                }
            }
        }

        return true;
    };

    this.arhDisableerrorDlg = function(sResponse,iStatus)
    {
        sResponse=eval(sResponse);
        var iRowIndexes;
        if(sResponse[0]==0)
        {
            /*iRowIndexes=listView.getSelectedRowIndexes(1);
            for(var i=0;i<iRowIndexes.length;i++)
            {
                listView.deleteRow(1,iRowIndexes[i]-i);
            }*/
            listView.clearCheckBoxes(0,false);
            //listView.getRefresh();
            me.callCSSUsersList();
            msg.showToastMsg(sResponse[1]);
        }
        else if(sResponse[0]==1)
        {
            /*iRowIndexes=listView.getSelectedRowIndexes(1);
            for(var i=0;i<iRowIndexes.length;i++)
            {
                listView.deleteRow(1,iRowIndexes[i]-i);
            }*/
            listView.clearCheckBoxes(0,false);
            //listView.getRefresh();
            me.callCSSUsersList();
            msg.showToastMsg(sResponse[1]);
        }
        else if(sResponse[0]<0)
            msg.showMessage(0,sResponse[1]);
    };

    this.arhUnlockCssuser = function(sResponse,iStatus)
    {
        sResponse=eval(sResponse);
        if(sResponse[0])
        {
            /*var iRowIndexes=listView.getSelectedRowIndexes(1);
            for(var i=0;i<iRowIndexes.length;i++)
            {
                listView.deleteRow(1,iRowIndexes[i]-i);
            }*/
            listView.clearCheckBoxes(0,false);
            /*listView.getRefresh();*/
            me.callCSSUsersList();
            msg.showToastMsg(sResponse[0]);
        }

    };

    this.listViewCallbackCss=function(iModuleId)
    {
        var sArrParams = [];
       sArrParams[0]=con.getStruts2Url("support","cssSettings","getInviteUsers",null,true);
       //sArrParams[1]="&moduleId="+Constants.CONTACTS+"&scrType=1";;
       sArrParams[1]="&scrType=1";
       return sArrParams;
    };

    this.callCSSUsersList=function()
    {
        window.scrollTo(0,0);
        var sUrl = "common/setup!getPrefSetup.do";//jfCsFYt8cDEHZB6nc^^ytnKeEwFRbjBlS9xcmYahhcg=!n
        home.setCenterUI(sUrl +"?byAction=0&byActionType=0&configId=1664&groupId=6&moduleId=2309&title=CSS Users");
    };


    //// external Module////////

    this.onClkGetRandomSelection=function(sUrl,byRandomtype)
    {
        var iTransIds=listHandler.getSelectedTransIds();
        if(listHandler.validateRowSelection(iTransIds,true))
        {
            var arrActions = [];
            /*arrActions[0] = "Ok|clRandmSelDlg.onClkSaveRandmSelection";//3rd param onwards===attributes
            arrActions[1] = "Cancel|";*/
            arrActions[0] = MsgHandler.getMsg(MsgConstants.OK,0,0)+"|clRandmSelDlg.onClkSaveRandmSelection";//3rd param onwards===attributes
            arrActions[1] = MsgHandler.getMsg(MsgConstants.CANCEL,0,0)+"|";

            var sParam = "?transIds="+iTransIds+"&randomtype="+byRandomtype;
            sParam += "&moduleId="+listHandler.getModuleId();
            var addRandomSelection;
            addRandomSelection = new DialogBox("dlgRandomSelection",":. "+MsgHandler.getMsg(MsgConstants.SMEP_RANDOM)+" .:",140,160,400,250,sUrl+sParam,true,null,true,true,arrActions);

            addRandomSelection.setCenter();
            addRandomSelection.show();
        }
    };

    this.onClkMatchSelection=function(sUrl)
    {
      var iTransIds=listHandler.getSelectedTransIds();
        if(listHandler.validateRowSelection(iTransIds,true))
        {
            var arrActions = [];
            arrActions[0] = MsgHandler.getMsg(MsgConstants.OK,0,0)+"|clMatchSelDlg.onClkSaveMatch";//3rd param onwards===attributes
            arrActions[1] = MsgHandler.getMsg(MsgConstants.CANCEL,0,0)+"|";

            var sParam = "?transIds="+iTransIds;
            sParam += "&moduleId="+listHandler.getModuleId();
            var addRandomSelection;
            addRandomSelection = new DialogBox("dlgMatchSelection",":. "+MsgHandler.getMsg(MsgConstants.SMEP_MATCH)+" .:",140,160,350,200,sUrl+sParam,true,null,true,true,arrActions);

            addRandomSelection.setCenter();
            addRandomSelection.show();
        }
    };



    //////////////////////////////////// Social Config //////////////////////////////////////////////////////////////////
    this.getSuspectDetails=function(){
      var iTransId=listView.getTransId();
        var sUrl=con.getStruts2Url("marketing","suspect","getSuspectDetails",null,true);
        sUrl+="?transId="+iTransId;
        home.setCenterUI(sUrl,null,false,false);
    };

    this.getRequestBackup = function()
    {
         var sUrl,arrActions,clDlg,sDlg = "backupSettingsDlg";
//            var sFileName=sFilePath.substring(sFilePath.lastIndexOf('\\')+1,sFilePath.length);
            clDlg = getDialogBox(sDlg);
        arrActions = [];
            arrActions[0]=MsgHandler.getMsg(MsgConstants.OK)+"|clBackupSettingsDlg.onClkBackNow";
            arrActions[1]=MsgHandler.getMsg(MsgConstants.CANCEL)+"|";
            sUrl = con.getStruts2Url("common","createCompany","backupNowSettings");
            clDlg = new DialogBox(sDlg,MsgHandler.getMsg(MsgConstants.BACK_UP_TITLE),150,250,470,330,sUrl,true,null,false,true,arrActions);
            clDlg.setCenter();
            clDlg.show();
    };



    this.deleteBackup = function()
    {
        var iTransIds=listHandler.getSelectedTransIds();
            if (listHandler.validateRowSelection(iTransIds, true)) {
                if (window.confirm(MsgHandler.getMsg(MsgConstants.WANT_TO_DELETE,0,0))) {
                    var sUrl = con.getStruts2Url("common", "createCompany", "deleteBackup", null, true);
                    sUrl += "?transIds=" + iTransIds;
                    con.sendPostRequest(sUrl, null, null, "handler.arhDelBackUpRes", null, 0, null, false, true, ACTION_DELETE);
                }
        }
    };


    this.arhDelBackUpRes = function()
    {
        listView.isPreferences=true;
        listView.getRefresh("common/setup!getPrefListView.do");
    };
    /**
     * Author: K. Sampath Kumar
     * this method is used to open send mail dialog from send mail related module actions
     * @param imgedit
     * @param sUrl
     * @param sTitle
     * @param isEdit
     */
    this.showSendMail = function(imgedit,sUrl,sTitle,isEdit,iEmailQuote,iRelModuleId,byActionId,iModuleId)
    {
        var iSendMailId=0,iEmailLogId=0,bReturn = true,iTransId=0;
        if(iModuleId==0)
        {
            iModuleId=document.getElementById("moduleId").value;
            //sUrl +="&transId="+relModuleHandler.getBaseTransId();;//handler.getBaseTransId();
        }
        else
        {
            iTransId = listView.getTransIds("listReportTab_1");
            sUrl+="&bMainModule="+true;
            iEmailQuote=iTransId;
        }
        if(byActionId==Constants.REPLY || byActionId==Constants.REPLY_ALL)
        {
            bReturn=false;
            var arrTransIds =listView.getTransIds("listReportTab_"+Constants.EMAILS);
            if(listHandler.validateRowSelection(arrTransIds,false))
            {
                sUrl +="&emailLogId="+arrTransIds[0];
               bReturn=true;
            }

        }

        if(bReturn)
        {
            if(isEdit)
                iEmailLogId = listView.getSelectedTransId(Constants.EMAILS,imgedit);

            me.showEmailDlg(sUrl,byActionId,iEmailLogId,iModuleId,relModuleHandler.getBaseTransId(),iRelModuleId,iEmailQuote);
        }

    };


    this.showEmailDlg=function(sUrl,byActionId,iEmailLogId,iModuleId,iTransId,iRelModuleId,iEmailQuote)
    {
        var sTitle;

        if(iEmailLogId>0)
        {
            sUrl +="&emailLogId="+iEmailLogId;
            sTitle=Focus.crm.Messages.getActionLabel(Constants.EDIT)+" "+MsgHandler.getMsg(MsgConstants.MAIL);
        }
        else
            sTitle=MsgHandler.getMsg(MsgConstants.SEND)+" "+MsgHandler.getMsg(MsgConstants.MAIL);

        if(byActionId==Constants.REPLY)
            sTitle=MsgHandler.getMsg(MsgConstants.REPLY)+" "+MsgHandler.getMsg(MsgConstants.MAIL);
        else if(byActionId==Constants.REPLY_ALL)
            sTitle=MsgHandler.getMsg(MsgConstants.REPLY_ALL);


        if(iTransId)
            sUrl+="&transId="+iTransId;
        else if(iEmailQuote>0)
            sUrl+="&transId="+iEmailQuote;

        if(iEmailQuote>0)
        {
            sUrl += "&quoteTransId=" + iEmailQuote;
        }

        if(iRelModuleId>0)
            sUrl+="&relModuleId="+iRelModuleId;

        var clSendMailDlg;
        //alert(iRelModuleId+","+iModuleId )
        if(iModuleId == Constants.REQUEST && (iRelModuleId>0 && iRelModuleId!=Constants.SERVICE_QUOTE))
        {
            var arrActions = [];
            arrActions[0] = MsgHandler.getMsg(MsgConstants.SEND)+"|clNotifyEmail.sendEmailNotification";
            arrActions[1] = MsgHandler.getMsg(MsgConstants.CANCEL,0,0)+"|clNotifyEmail.onClkCloseDlg";
            sTitle = "Email Notification ";
            clSendMailDlg = new DialogBox("emailNotification",sTitle,40,60,850,720, sUrl, true, null, true,true,arrActions);
        }
        else
        {
            clSendMailDlg = new DialogBox("sendMail",sTitle,40,60,850,660, sUrl, true, null, true,true,null);
        }
        clSendMailDlg.setTitle(sTitle);
        clSendMailDlg.setCenter();
        clSendMailDlg.show();
    };


    this.importPriceBook = function(sUrl)
    {
        if(listHandler.validateRowSelection(null,false))
        {
            var iTransId = listView.getSelectedTransId();
            sUrl+="?transId="+iTransId;
            home.setCenterUI(sUrl);
        }
    };

    this.editModule=function(sURL,iTransId,isClone,iBaseModuleId,iBaseModuleTransId)
    {
//        alert(sURL+","+iTransId+","+isClone+","+iBaseModuleId+","+iBaseModuleTransId);
        if(!iTransId)
            iTransId=0;
        //alert(sURL)
        sURL+="&transId="+iTransId;
        //if(document.getElementById("extraIds"))
        //  sURL+="&extraIds="+document.getElementById("extraIds").value;

        if(isClone)
            sURL+="&clone=1";
        if(iBaseModuleId && sURL.indexOf("baseModuleId=")==-1)
            sURL+="&baseModuleId="+iBaseModuleId;
        if(iBaseModuleTransId)
            sURL+="&baseTransId="+iBaseModuleTransId;

        var iSubTypeId = me.getSubTypeId();
        if(iSubTypeId>0)
            sURL+="&subTypeId="+iSubTypeId;
                //alert(sURL)
        home.setCenterUI(sURL,null,null,false,null,null,null,null,null,true);
    };
    this.getSubTypeId=function()
    {
        var iSubTypeId=0;
        if(document.getElementById("subTypeId"))
            iSubTypeId=document.getElementById("subTypeId").value;
        return iSubTypeId;
    };
    /**
         * Author: K. Sampath Kumar
         * this function is used to add Documents and attachments
         * @param imgEdit
         * @param sUrl
         * @param sTitle
         * @param isEdit
         * @param byActionId
         */
        //    this.addDocuments = function(imgEdit,sUrl,sTitle,isEdit,byActionId)
    this.addDocuments = function (imgEdit, sUrl, sTitle, isEdit, byActionId, iModuleId, iBaseModuleId)
        {
            var iTransId=0,iDocumentId=0,iHeight=550;
            //var clDocumentDlg = getDialogBox("clAttachFile");
            me.isEdit=isEdit;
            if(document.getElementById("scrType")!=null && (document.getElementById("scrType").value==3 || document.getElementById("scrType").value==Constants.DOCUMENTS))// From document module
            {
                //me.addDocumentsForDocsModule(imgEdit,sUrl,sTitle,isEdit,byActionId,document.getElementById("scrType").value);
                sTitle = Focus.crm.Messages.getActionLabel(Constants.NEW)+" "+MsgHandler.getMsg(MsgConstants.DOCUMENTS_TITLE);
                if(isEdit)
                {
                    sTitle = Focus.crm.Messages.getActionLabel(Constants.EDIT)+" "+MsgHandler.getMsg(MsgConstants.DOCUMENTS_TITLE);
                    iDocumentId = me.getSelectedTransId(1,imgEdit);
                }
                sUrl +="&scrType="+document.getElementById("scrType").value+"&actionId="+byActionId;
                sUrl += "&baseTransId="+iTransId+"&documentId="+iDocumentId+"&baseModuleId="+document.getElementById("moduleId").value;
                //alert(sUrl)
            }
            else
            {
                //me.addDocumentsForRelatedModule(imgEdit,sUrl,sTitle,isEdit,byActionId,iModuleId);
                iTransId = me.getBaseTransId();
                var iRecordModuleId = Constants.REQUEST;
                //        if(byActionId==Constants.NEW_CALL_ATTACH)
                if(iModuleId==Constants.ATTACHMENTS)
                {
                    sTitle = Focus.crm.Messages.getActionLabel(Constants.NEW)+" "+MsgHandler.getMsg(MsgConstants.ATTACHMENTS_TITLE);
                    iHeight = 600;
                    if(isEdit)
                    {
                        sTitle = Focus.crm.Messages.getActionLabel(Constants.EDIT)+" "+MsgHandler.getMsg(MsgConstants.ATTACHMENTS_TITLE);
                        var iArrExtraIds = listView.getSelectedExtraId("listReportTab_" + iModuleId, 0, imgEdit);
                        //var iArrExtraIds = me.getSelectedExtraIds(Constants.ATTACHMENTS,imgEdit,0);
                        iRecordModuleId = iArrExtraIds[1];
                        iDocumentId = (iRecordModuleId != Constants.REQUEST) ? iArrExtraIds[0] : me.getSelectedTransId(Constants.ATTACHMENTS, imgEdit);
                    }
                    sUrl += "&scrType=" + iModuleId + "&actionId=" + byActionId + "&recordModuleId=" + iRecordModuleId;
                }
                else
                {
                    sTitle = Focus.crm.Messages.getActionLabel(Constants.ADD)+" "+MsgHandler.getMsg(MsgConstants.DOCUMENTS_TITLE);
                    if(isEdit)
                    {
                        sTitle = Focus.crm.Messages.getActionLabel(Constants.EDIT)+" "+MsgHandler.getMsg(MsgConstants.DOCUMENTS_TITLE);
                        iDocumentId = me.getSelectedTransId(Constants.DOCUMENTS,imgEdit);
                    }
                    sUrl +="&scrType="+byActionId+"&actionId="+byActionId;
                }

                var iMemberId = 0;
                if (me.isFromListView()) {
                    var iArrExtraIds = listView.getSelectedExtraId();
                    //TODO: commented on 23/03/2022 memeberId changes in Lead/TeleLead
                    //iMemberId = (listView.getModuleId() == Constants.TELELEADS || iModuleId == Constants.LEADS ) ? iArrExtraIds[0] : 0;
                    //sUrl += "&baseTransId=" + listView.getSelectedTransId() + "&documentId=" + iDocumentId"&memberId=" + iArrExtraIds[0];
                    sUrl += "&baseTransId=" + listView.getSelectedTransId() + "&documentId=" + iDocumentId;// + "&memberId=" + iArrExtraIds[0];
                }
                else
                {
                    var arrValues = relModuleHandler.getBaseTransIdAndExtraId(iBaseModuleId);
                    iTransId = arrValues[0];
                    //TODO: commented on 23/03/2022 memeberId changes in Lead/TeleLead
                    //iMemberId = arrValues[1];
                    //sUrl += "&baseTransId=" + iTransId + "&documentId=" + iDocumentId + "&memberId=" + iMemberId;

                    sUrl += "&baseTransId=" + iTransId + "&documentId=" + iDocumentId ;
                }
            }
            //alert(sUrl)
            me.getDocumentDialog(sUrl,sTitle,iHeight);
        };

        /* this.addDocumentsForRelatedModule = function(imgEdit,sUrl,sTitle,isEdit,byActionId,iModuleId)
         {


         };

         this.addDocumentsForDocsModule = function(imgEdit,sUrl,sTitle,isEdit,byActionId,scrType)
         {

         };*/

        this.getDocumentDialog=function(sUrl,sTitle,iHeight)
        {
            var arrActions = [];
            arrActions[0] = MsgHandler.getMsg(MsgConstants.OK,0,0)+"|clAttachFile.onClkSaveDocuments";
            arrActions[1] = MsgHandler.getMsg(MsgConstants.CANCEL,0,0)+"|clAttachFile.onClkCloseDlg";
            var clDocumentDlg= new DialogBox("clAttachFile",sTitle,40,60,900,iHeight, sUrl, true, null, true,true,arrActions);
            clDocumentDlg.callFn("clAttachFile.loadDocuments");// added to disable ok button when the document is locked
            clDocumentDlg.setCenter();
            clDocumentDlg.show();
        };
    this.getDocumentDialog1=function(sUrl,sTitle,iHeight)
    {
        var arrActions = [];
        arrActions[0] = MsgHandler.getMsg(MsgConstants.OK,0,0)+"|clAttachFile.onClkSaveDocuments()";
        //arrActions[1] = MsgHandler.getMsg(MsgConstants.CANCEL,0,0)+"|handler.hideDocumentOverlay()";
        clOverlay.showFrameOverlay("clAttachFile",sUrl,"50%","100%",clOverlay.OVERLAY_RIGHT,0,0,null,sTitle,"containerDiv",false,arrActions);
    };

    this.getSelectedTransIds = function()
    {
        var iModuleId=listView.getModuleId();
        return me.getSelectedTransIds(iModuleId);
    };
    this.getSelectedTransIds = function(iModuleId)
    {
        var iTransIds=null;
        //TODO: commented on 23/03/2022 memeberId changes in Lead/TeleLead
        /*if(iModuleId==Constants.TELELEADS ||iModuleId==Constants.LEADS )
            iTransIds = listView.getExtraIds("",true);
        else*/
            iTransIds = listView.getTransIds();
        return iTransIds;
    };

    this.getSelectedTransId=function(iModuleId,imgEdit)
    {
        return listView.getSelectedTransId("listReportTab_"+iModuleId,0,imgEdit);
    };

    this.getBaseTransId=function()
    {
        var iModuleId;
        if(document.getElementById("baseModuleId"))
            iModuleId = document.getElementById("baseModuleId").value;
        else if(document.getElementById("moduleId"))
            iModuleId=document.getElementById("moduleId").value;

        var iTransIds=null;
        //TODO: commented on 23/03/2022 memeberId changes in Lead/TeleLead
/*        if(iModuleId==Constants.TELELEADS ||iModuleId==Constants.LEADS )
            iTransIds = document.getElementById("extraIds[0]").value;
        else*/
        if(document.getElementById("baseTransId"))
            iTransIds = document.getElementById("baseTransId").value;
        else if(document.getElementById("transId"))
            iTransIds = document.getElementById("transId").value;
        return iTransIds;
    };

    this.businessCardView = function(objLink,iTransId,iModuleId,e,isConvertedLead)
    {
        var sParams ="transId=" + iTransId+"&moduleId="+iModuleId+(isConvertedLead?"&isDetailedviewConvrtdLead=false":"");
        me.sId=iModuleId+"_"+iTransId;
        app.evOverShowDetails(objLink,me.sId,Constants.PRONG_LEFT,sParams,null,null,null,e,1600);
    };

////////   External Authentication  /////////////////////////////////////////////

    this.onClkLdapSettingsDlg = function(objThis,isEdit)
    {
        var sUrl,arrActions,clDlg;
        sUrl = con.getStruts2Url("security","externalAuth","getLdapSettings");

        if(isEdit)
        {
            sUrl+="transId="+listView.getSelectedTransId("listReportTab_1",(objThis.parentNode.parentNode.rowIndex-1));
        }

        arrActions = [];
        //arrActions[0] = "Check connection|clLdapSettings.checkLdapConnection();";
        arrActions[0] = MsgHandler.getMsg(MsgConstants.SAVE,0,0)+"|clLdapSettings.saveLdapSettings";
        arrActions[1] = MsgHandler.getMsg(MsgConstants.CANCEL,0,0)+"|";



        clDlg = new DialogBox("LdapSett",MsgHandler.getMsg(MsgConstants.LDAP_SERVER,0,0),140,160,640,510,sUrl, true, null, true,true,arrActions);
        clDlg.setCenter();
        clDlg.show();

    };

    this.getGlobalCascadingDlg=function(objThis,isEdit)
    {
        var sUrl,arrActions,clDlg;
        sUrl = con.getStruts2Url("module","globalcascading","getGlobalCascading");

        if(isEdit)
        {
            sUrl+="transId="+listView.getSelectedTransId("listReportTab_1",(objThis.parentNode.parentNode.rowIndex-1));
        }

        arrActions = [];
        //arrActions[0] = "Check connection|clLdapSettings.checkLdapConnection();";
        arrActions[0] = MsgHandler.getMsg(MsgConstants.SAVE,0,0)+"|clGlobalCascading.onClkSaveGlobalCascading";
        arrActions[1] = MsgHandler.getMsg(MsgConstants.CANCEL,0,0)+"|";



        clDlg = new DialogBox("clGlobalCascading",MsgHandler.getMsg(MsgConstants.GLOBAL_CASCADING,0,0),90,95,500,300,sUrl, true, null, true,true,arrActions);
        clDlg.setCenter();
        clDlg.show();

    };

    this.onClkLdapImportDlg=function(sTitle)
    {

        var iTransIds=listView.getTransIds();
        if(iTransIds.length == 0)
        {
            msg.showMessage(0,MsgHandler.getMsg(MsgConstants.SELECT_RECORD,0,0));
            return false;
        }
        else if(iTransIds.length > 1)
        {
            msg.showMessage(0,MsgHandler.getMsg(MsgConstants.MULTI_SELECT_NOT_ALLOWED,0,0));
            return false;
        }
        var sUrl,iModuleId,arrActions,clImportDlg;
        arrActions = [];
        arrActions[0] = MsgHandler.getMsg(MsgConstants.IMPORT)+"|clLdapImport.onClkImport();";
        arrActions[1] = MsgHandler.getMsg(MsgConstants.CANCEL,0,0)+"|";

        sUrl = con.getStruts2Url("security","externalAuth","getLdapImportDlg");
        sUrl += "transId="+iTransIds[0];

        clImportDlg = new DialogBox("LdapImport",MsgHandler.getMsg(MsgConstants.LDAP_IMPORT_USERS,0,0),140,160,850,650,sUrl, true, null, true,true,arrActions);
        clImportDlg.setCenter();
        clImportDlg.show();

    };
    this.onClkLdapAssignDlg=function(sTitle)
    {
        var iTransIds=listView.getTransIds();
        if(iTransIds.length == 0)
        {
            msg.showMessage(0,MsgHandler.getMsg(MsgConstants.SELECT_RECORD,0,0));
            return false;
        }
        else if(iTransIds.length > 1)
        {
            msg.showMessage(0,MsgHandler.getMsg(MsgConstants.MULTI_SELECT_NOT_ALLOWED,0,0));
            return false;
        }
        var sUrl,iModuleId,arrActions,clAssignDlg;
        arrActions = [];
        arrActions[0] = MsgHandler.getMsg(MsgConstants.CANCEL,0,0)+"|";

        sUrl = con.getStruts2Url("security","externalAuth","getLdapAssignDlg");
        sUrl += "transId="+iTransIds[0];
        clAssignDlg = new DialogBox("LdapAssign",MsgHandler.getMsg(MsgConstants.ASSIGN_ROLE,0,0),140,160,850,660,sUrl, true, null, true,true,arrActions);
        clAssignDlg.setCenter();
        clAssignDlg.show();

    };
    this.onClkPriceExportLayout = function()
       {
           if(listHandler.validateRowSelection(null,false)) {
               var arrActions = [];
               arrActions[0] = "Export|clPriceExport.onClkExport()";
               arrActions[1] = "Cancel|clPriceExport.onClkCancel";

               var sUrl = con.getStruts2Url("common", "pricebook", "getExportLayout");
               var dlgExportLayout = new DialogBox("PriceExportLayout", "Price Export Layout", 75, 85, 330, 200, sUrl, true, null, true, true, arrActions);
               dlgExportLayout.setCenter();
               dlgExportLayout.show();
           }
       };
    this.cloneApprovalProcess = function(sUrl)
    {
        if(listHandler.validateRowSelection(null,false))
        {
            var iTransId = listView.getSelectedTransId();
            sUrl+="&transId="+iTransId;
            if(window["clCloudSetup"]!=undefined)
            {
                AdvPaging.deleteInstance("listReportTab_"+listView.getTableId());
                home.setCenterUI(sUrl,null,null,false,"clModuleTabbedPane.handleResponse");
            }
            else
            home.setCenterUI(sUrl);
        }
    };

    this.onClkRepPost = function(objLink)
   {
       //var iTransId = listView.getTransId();
       var iTableId = listView.getTableId('listReportTab_1');
       var iColCurrentRow = 0,iExtraIdsLength =0;
       var clTable = new sTable('listReportTab_1');
       var iRowCnt = clTable.getRowCount();
               if(iRowCnt>1)
                   iColCurrentRow=1;
       var iColCnt = clTable.getColCount(iColCurrentRow) - 3;
       if(document.getElementById("extraIdsLength_"+iTableId)!=null)
                   iExtraIdsLength = document.getElementById("extraIdsLength_"+iTableId).value;
       var iRowIndex =   objLink.parentNode.parentNode.rowIndex-1;
       var iColIndex = parseInt(iColCnt - iExtraIdsLength);//iHiddenColCnt-iExtraHiddenCol);

       var iTransId = clTable.getValueAt(iRowIndex, iColIndex,true,iColCurrentRow);
       con.sendPostRequest("common/integrationSet!rePostERPLog.do?transId="+iTransId,null,null,"handler.arhRepostRespHandler",null,null,null,false,false,ACTION_REPOSTING);

   };

    this.arhRepostRespHandler=function(sResponse) {
        //if (sResponse != null && parseInt(sResponse) == 1)
        {
            var sUrl = "", sParams = "";
            sUrl = con.getStruts2Url("common", "setup", "getPrefSetup", null, true);
            if (document.getElementById("title") != null)
                sParams += "&title=" + util.encodeURI(document.getElementById("title").value);
            sUrl += "?configId=1684&groupId=1&moduleId=-1&byAction=0&byActionType=0&erplogType=-1" + sParams;
            home.setCenterUI(sUrl);
    }
    };
    this.onClkPlanUpgrade=function()
    {
        if(listHandler.validateRowSelection(null,false))
        {
            var iTransId = listView.getSelectedTransId();
            var clDlg,arrActions,sURL;
            var sUrl="cloud/subscription!getPlanUpgradeDet.do?isOppo=true&transId="+iTransId;
            arrActions = [];
            arrActions[0] = MsgHandler.getMsg(MsgConstants.SAVE,0,0)+"|handler.onClkCloseDlg";
            arrActions[1] = MsgHandler.getMsg(MsgConstants.CANCEL,0,0)+"|handler.onClkCloseDlg";
            clDlg = new DialogBox("dlgOppoPlanUpgrade","Plan upgrade",140,160,1200,500,sUrl, true, null, true,true,arrActions);
            clDlg.setCenter();
            clDlg.show();
        }
    };
    this.onClkCloseDlg=function()
    {
        parent.getDialogBox("dlgOppoPlanUpgrade").hide()
    };
////////   End External Authentication  /////////////////////////////////////////////


    /***************************************  Open Report ********************************/
    this.openReport=function(sUrl,iReportType,iShowAs,iTransId,iBaseModuleId,iBaseTransId,sTitle,sDlgTitle,iWidth,iHeight)
    {
        sUrl=sUrl+"&extRepType="+iReportType;
        sUrl=sUrl+"&showIn="+iShowAs;

        if( iTransId > 0 || (iTransId && iTransId.length > 0 ))
            sUrl+="&modTransIds="+iTransId;

        if(iBaseModuleId)
            sUrl+="&baseModuleId="+iBaseModuleId;
        if(iBaseTransId)
            sUrl+="&baseTransId="+iBaseTransId;

        if(iShowAs==Constants.DISP_DIALOG)
        {
            sUrl+="&isMultipaneView=1";
            var arrActions = [MsgHandler.getMsg(MsgConstants.CANCEL,0,0)+"|"];
            var clExtReportDlg = new DialogBox("extReportDlg",sTitle,8,10,900,600,sUrl, true, null, false,true,arrActions);
            clExtReportDlg.show();
        }
        else if(iShowAs == Constants.DISP_OVERLAY)
        {
            sUrl+="&isMultipaneView=1";
            var dvExternalReport = document.createElement("div");
            dvExternalReport.id="dvExternalReportOverlay";
            dvExternalReport.style.display="none";
            document.body.appendChild(dvExternalReport);
            clOverlay.showFrameOverlay("dvExternalReportOverlay",sUrl,"60%","95%",clOverlay.OVERLAY_RIGHT,50,0,null,sTitle,"dvCenter",false,null,true,true,null,null,null,false,true)

        }
        /*else if(iShowAs==Constants.DISP_NOHEADER) //display in new window
         {
         sUrl+= "&isNewWindow=1";
         window.open(sUrl);
         }*/
        else //if(iShowAs==Constants.DISP_CURRENT_WINDOW)
            home.setCenterUI(sUrl,null,null,false,null,null,null,null,null,true);
    };
    /***************************************  Open Report ********************************/

    /***************************************Report Tracking********************************/

    /*this.onClkGetReportTrackListView = function(event)
    {
        var sUrl = "report/reportCriteria!getReportTrackListview.do?reportId=0";
        var iSrcviewtype = Constants.LIST_LAYOUT;
        //sUrl+="&byActionType="+iSrcviewtype;
        home.setCenterUI(sUrl, null, false, false, null, false, null, false, false, false, iSrcviewtype,false);
        //home.setCenterUI(sUrl);
    };*/

    this.getReportTrackDlg = function(event,iReportId,isQueryReport,objThis)
    {
        var sTableId = "listReportTab_1";
        var iFieldId = 0,iGroupType = 0,sColumnName = null,sFieldName = null;
        var clTable;
        if(objThis && objThis != null) {
            var iRowIndex = objThis.parentNode.parentNode.rowIndex - 1;
            var iArrExtIds = listView.getSelectedExtraId(sTableId, iRowIndex);
            iFieldId=parseInt(iArrExtIds[0]);
            iGroupType = listView.getSelectedTransId(sTableId, iRowIndex);
            iGroupType=parseInt(iGroupType);
            clTable = new sTable(sTableId);
            sColumnName = clTable.getValueAt(iRowIndex, 1,true).trim();
            sFieldName = clTable.getValueAt(iRowIndex, 2,true).trim();
        }
        var sUrl = "report/repDesigner!getReportTrackSettingsDlg.do";
        sUrl += "?reportId="+iReportId+"&isQueryReport="+isQueryReport+"&groupType="+iGroupType;
        if(iFieldId > 0 || iGroupType > 0)
            sUrl += "&fieldId="+iFieldId+"&groupOrModuleType="+iGroupType+"&sColumnName="+util.encodeURI(sColumnName);
        if(iFieldId > 0)
            sUrl += "&fieldName="+util.encodeURI(sFieldName);
        var sTitle = MsgHandler.getMsg(MsgConstants.TRACK_REPORT);
        if(iReportId == 0)
            sTitle = MsgHandler.getMsg(MsgConstants.TRACK_MODULE_REPORTS);
        else if(isQueryReport)
            sTitle = MsgHandler.getMsg(MsgConstants.TRACK_QUERY_REPORT);


        var arrAction=[];
        var sSaveAction = "clTrackReport.onClkSaveTrackReport";
        if(isQueryReport)
            sSaveAction = "clTrackQueryReport.onClkSaveTrackQuery";
        arrAction[0] = MsgHandler.getMsg(MsgConstants.SAVE)+"|"+sSaveAction;
        arrAction[1] = MsgHandler.getMsg(MsgConstants.CANCEL)+"|";
        var reportTrackDlg = new DialogBox("dlgTrackReport", sTitle, 500, 300, 600, 450, sUrl, true, null, true, true,arrAction, null, null, null, null, null, false, null, false, true);
        reportTrackDlg.show();
        reportTrackDlg.setCenter();
    };

    this.deleteReportTrack = function(event,iReportId,isQueryReport,objThis)
    {
        if(window.confirm(MsgHandler.getMsg(MsgConstants.WANT_TO_DELETE,0,0)))
        {
            var iRowIndex = objThis.parentNode.parentNode.rowIndex - 1;
            var sTableId = "listReportTab_1";
            var iArrExtIds = listView.getSelectedExtraId(sTableId, iRowIndex);
            var iFieldId=iArrExtIds[0];
            var iGroupType = listView.getSelectedTransId(sTableId, iRowIndex);
            var sUrl = "report/repDesigner!deleteReportTrackSettings.do";
            var bySourceType = IRepConstants.IDataset.DEFAULT;
            if (isQueryReport)
                bySourceType = IRepConstants.IDataset.QUERY;

            sUrl += "?reportId=" + iReportId + "&isQueryReport=" + isQueryReport + "&fieldId=" + iFieldId + "&groupType=" + iGroupType + "&sourceType=" + bySourceType;

            con.sendPostRequest(sUrl, null, null, "handler.arhRespDelReportTrack", false, null, null, false, false, ACTION_LOADING, false, [iReportId]);
        }
    };

    this.arhRespDelReportTrack = function(iStatus,iStatusCode,sMsg,appValue,objReqCache)
    {
        if(iStatus >= Constants.MSG_SUCCESS)
            listView.getRefresh("report/reportCriteria!getReportTrackListview.do?reportId=" + objReqCache[0]);

    };
    //this method helps to get the shopify instance wizard
    this.getInstanceWizard=function(sUrl)
    {
        con.sendPostRequest(sUrl, null, null, "handler.resInstanceWizard", false, null, null, false, false, ACTION_LOADING);
    };
    this.resInstanceWizard=function(sResponse,iStatusCode,sMsg)
    {
        if(sResponse!=null)
        {
            var objListHeaderBody=document.getElementById("dvListHeaderBody");
            objListHeaderBody.innerHTML=sResponse;
            if (typeof window["initAllCombos"] == "function")
                initAllCombos = null;
            loadResources(objListHeaderBody, util.onScriptsLoad);
        }
        else if(iStatusCode==Constants.MSG_EXCEPTIONS)
        {
            var iStepCount=document.getElementById("iCount").value;
            if(iStepCount>2)
            {
                document.getElementById("step1").style.width="50%";
                document.getElementById("step2").style.width="50%";
                cross.setInnerText(cross.getChildren(document.getElementById("step2"))[1],"");
                for(var i=3;i<=iStepCount;i++)
                    cross.setVisible(document.getElementById("step"+i),false);
            }
            Validation.showMessage(sMsg,Validation.ERROR_MSG,null,Validation.ERROR_MSG,true)
        }
    };

    this.executeWorkflow = function(iActionId,byLayoutType,iModuleId)
    {
        var iTransId = 0;
        if(byLayoutType==Constants.EDIT_LAYOUT || byLayoutType==Constants.DETAILED_LAYOUT)
        {
            if(document.getElementById("transId"))
                iTransId = document.getElementById("transId").value;//moduleView.getTransId();
        }
        else if(byLayoutType==Constants.LIST_LAYOUT)
        {
            var arrTransIds=listView.getTransIds();
            if(!listHandler.validateRowSelection(arrTransIds,false))
                return;
            iTransId = arrTransIds[0];
        }
        else if(byLayoutType==Constants.RELATEDMODULE_LAYOUT)
        {
            iTransId=listView.getTransId("listReportTab_"+iModuleId);
        }

        var sUrl;
        sUrl = "common/workFlow!getWorkFlowActionsDlg.do?moduleId="+iModuleId+"&actionId="+iActionId+"&transId="+iTransId;
        var clWorkFlowActionsDlg = new DialogBox("clWorkFlowActionsDlg", "Workflow Actions", 100, 50, 500, 350, sUrl, false, null, true, true, null, null, null, null, null, null, false, null, false, true);
        clWorkFlowActionsDlg.setCenter();
        clWorkFlowActionsDlg.show();

    };


    /***************************************Report Tracking********************************/
   /* this.onClkAction=function(obj,iAction)
    {
        var iRowIndex=obj.parentNode.parentNode.rowIndex-1;
        var iInstance=parseInt(cross.getInnerText(document.getElementById("iTransId"+iRowIndex)));
        var sUrl = "social/shopifyMapping!getFieldsMapping.do?chkBuffer=false&isAddBuffer=true&instanceId="+iInstance+"&byStep=1&type="+iAction;
        if(iAction==2)//product
        {
            sUrl+="&productOrder=true";
            con.sendPostRequest(sUrl,null,null,"handler.resFieldsMapping",null,null,null,false,false,ACTION_LOADING);
            return true;
        }
        else
        {
            me.getInstanceWizard(sUrl);
        }
    };
    this.resFieldsMapping=function(sResponse)
    {
        var iCurrentStep=document.getElementById("iCurrentSteps").value;
        var objWizard=document.getElementById("contentDivStep_"+iCurrentStep);
        objWizard.innerHTML=sResponse;
        if (typeof window["initAllCombos"] == "function")
            initAllCombos = null;
        loadResources(objWizard, util.onScriptsLoad);
    }*/
};


var relModuleHandler=new function()
{
    var me=this;
    this.iModuleId=null;
    //app.registerInstance("relModuleHandler",this);

    this.setModuleId=function(iModuleId)
    {
        this.iModuleId=iModuleId;
    };

    this.getModuleId=function()
    {
        return this.iModuleId;
    };

    this.getSelectedTransId=function(iModuleId,imgEdit)
    {
        return listView.getSelectedTransId("listReportTab_"+iModuleId,0,imgEdit);
    };

    //Either of imgEdit or iRowIndex is required
    this.getSelectedExtraIds=function(iModuleId,imgEdit,iRowIndex)
    {
        return listView.getSelectedExtraId("listReportTab_"+iModuleId,iRowIndex,imgEdit);
    };

    this.getBaseTransId=function()
    {
        var iModuleId;
        if(document.getElementById("baseModuleId"))
            iModuleId = document.getElementById("baseModuleId").value;
        else if(document.getElementById("moduleId"))
            iModuleId=document.getElementById("moduleId").value;

        var iTransIds=null;
//TODO: commented on 23/03/2022 memeberId changes in Lead/TeleLead
/*
        if(iModuleId==Constants.TELELEADS ||iModuleId==Constants.LEADS )
            iTransIds = document.getElementById("extraIds[0]").value;
        else
*/
        if(document.getElementById("baseTransId"))
            iTransIds = document.getElementById("baseTransId").value;
        else if(document.getElementById("transId"))
            iTransIds = document.getElementById("transId").value;
        return iTransIds;
    };

    this.getBaseModuleId=function()
    {
        var iModuleId=0;
        if(document.getElementById("baseModuleId"))
            iModuleId = document.getElementById("baseModuleId").value;
        else if(document.getElementById("moduleId"))
            iModuleId=document.getElementById("moduleId").value;
        return iModuleId;
    };
    this.getBaseLayoutId = function(){
        var iLayoutId = 0;
        if(document.getElementById("baseLayoutId"))
            iLayoutId = document.getElementById("baseLayoutId").value;
        else if(document.getElementById("layoutId"))
            iLayoutId = document.getElementById("layoutId").value;
        return iLayoutId;
    };

    this.getBaseModuleRecordStatus=function()
    {
        var iRecordStatus = 0;
        if(document.getElementById("recordStatus"))
            iRecordStatus=document.getElementById("recordStatus").value;
        return iRecordStatus;
    };

    this.getSelectedTransIds=function()
    {
        //TODO: commented on 23/03/2022 memeberId changes in Lead/TeleLead
        var iModuleId=listView.getModuleId();
        //var iModuleId=2536;
        var iTransIds=null;
//TODO: commented on 23/03/2022 memeberId changes in Lead/TeleLead
/*
        if(iModuleId==Constants.TELELEADS ||iModuleId==Constants.LEADS )
            iTransIds = listView.getExtraIds("listReportTab_"+iModuleId);
        else
*/
            iTransIds = listView.getTransIds("listReportTab_"+iModuleId);
        return iTransIds;
    };


    this.editRelatedModule=function(iRelModuleId,sURL,iTransId,isClone,iBaseModuleId,iBaseModuleTransId,imgEdit,isEdit)
    {
        var iSubTypeId=-1;
        if(isEdit)
        {
            (!iTransId || iTransId <= 0);
                iTransId = me.getSelectedTransId(iRelModuleId, imgEdit);

            var iExtraIds=me.getSelectedExtraIds(iRelModuleId, imgEdit);
            iSubTypeId=iExtraIds[0];
        }
        //sURL+="&columnLayout=1";
        //relModuleHandler.editModuleinOverlay(sURL,iTransId,isClone,iBaseModuleId,iBaseModuleTransId,iSubTypeId,iRelModuleId,imgEdit);
        detailedHandler.editModule(sURL,iTransId,isClone,iBaseModuleId,iBaseModuleTransId,iSubTypeId);
    };
    this.iRelModId=0;
    this.editModuleinOverlay=function(sURL,iTransId,isClone,iBaseModuleId,iBaseModuleTransId,iSubTypeId,iRelModuleId,objSelectedItemTr)
    {
        if(!iTransId)
            iTransId=0;
        //alert(sURL)
        sURL+="&transId="+iTransId+"&fromDetailedView=1";
        //if(document.getElementById("extraIds"))
        //  sURL+="&extraIds="+document.getElementById("extraIds").value;

        if(isClone)
            sURL+="&clone=1";
        if(iBaseModuleId)
        {
            sURL += "&baseModuleId=" + iBaseModuleId;
        }

        if(iRelModuleId)
            me.iRelModId=iRelModuleId;
        if(iBaseModuleTransId)
            sURL+="&baseTransId="+iBaseModuleTransId;

        if(!iSubTypeId)
            iSubTypeId=detailedHandler.getSubTypeId();
        if(iSubTypeId>0)
            sURL+="&subTypeId="+iSubTypeId;
        sURL+="&viewMode=10";
        sURL+="&isMultipaneView=1";
        sURL+="&sFnSaveCallback=parent.relModuleHandler.hideModuleOverlayDlg";
                //alert(sURL)
        var sTitle = me.getDropDownSelectedTitle(objSelectedItemTr);
        clOverlay.showFrameOverlay("editModule",sURL,"50%","100%",clOverlay.OVERLAY_RIGHT,0,0,null,sTitle,"containerDiv",false,null);
        clOverlay.setOverLaytitleText("editModule",sTitle);
    };
    this.getDropDownSelectedTitle= function (objSelectedItemTr)
    {
        var sReturn="";
        if(objSelectedItemTr)
        {
            sReturn=cross.getInnerText(objSelectedItemTr)
        }
        return sReturn;
    };

    this.hideModuleOverlayDlg=function()
    {
        //alert(me.iRelModId)
        listView.refreshRelatedView(me.iRelModId);
        clOverlay.closeOverlay(null,clOverlay.OVERLAY_RIGHT,"editModule",true);
        me.iRelModId=0;
    };

    this.editContactRoles=function(iRelModuleId,sURL,iTransId,isClone,iBaseModuleId,iBaseModuleTransId,imgEdit,isEdit)
    {
        if(isEdit)
            iTransId = me.getSelectedTransId(iRelModuleId,imgEdit);

        if(!iTransId)
            iTransId=0;
        //alert(sURL)
        sURL+="&transId="+iTransId;
        //if(document.getElementById("extraIds"))
        //  sURL+="&extraIds="+document.getElementById("extraIds").value;

        if(isClone)
            sURL+="&clone=1";
        if(iBaseModuleId)
            sURL+="&baseModuleId="+iBaseModuleId;
        if(iBaseModuleTransId)
            sURL+="&baseTransId="+iBaseModuleTransId;
        //        con.sendPostRequest(sURL,null,null,"relModuleHandler.arhContactRoles");
        home.setCenterUI(sURL,null,false,false,"relModuleHandler.arhContactRoles")
    };

    this.arhContactRoles=function(sResponse)
    {
        //        alert(sResponse)
        util.toggleBackground(false);
        if(parseInt(sResponse)==0)
            alert("No Contacts for this Account");
        else
        {
            app.setBodyContent(document.getElementById("dvCenter"), sResponse, home.onScriptsLoad);
        }
    };


    this.deleteModules=function(sUrl,iModuleId,iTransIds,iExtraIds,iOpenActModuleId,byLayoutType,byActionId)
    {
        //if(window.confirm("Are you sure want to delete ?"))
        if(window.confirm(MsgHandler.getMsg(MsgConstants.WANT_TO_DELETE,0,0)))
        {
            var sParams="moduleId="+iModuleId;
            if(byLayoutType>0)
                sParams+="&layoutType="+byLayoutType;
            //        me.iModuleId = iModuleId;
            if(typeof iTransIds=="object")
            {
                for(var i=0; i < iTransIds.length; i++)
                    sParams+="&transIds="+iTransIds[i];
            }
            else
                sParams+="&transIds="+iTransIds;

            if(iExtraIds)
            {
                if(typeof iTransIds=="object")
                {
                    for(var i=0; i < iExtraIds.length; i++)
                        sParams+="&delRow[" + i + "].extraIds="+iExtraIds[i];
                }
                else
                    sParams+="&delRow[0].extraIds="+iExtraIds;

            }

            var objHandle=null;
            if(/*(clAppBuffer.getWindowType() != Constants.IMODULE_WINDOW.SPLIT_PANE
                && clAppBuffer.getWindowType() != Constants.IMODULE_WINDOW.SPLIT_PANE_WITH_TABBED_PANE)
                &&*/ byLayoutType == Constants.RELATEDMODULE_LAYOUT)
            {
                if(iOpenActModuleId>0)
                    objHandle=handleInfo(iOpenActModuleId,me,byActionId);
                else
                    objHandle=handleInfo(iModuleId,me,byActionId);
            }

            clAppBuffer.setActionId(Constants.DELETE);
            con.sendPostRequest(sUrl, sParams, null,objHandle, false,null,null,false,false,ACTION_DELETE,false,{'d_actionid':Constants.DELETE,'d_windowtype':clAppBuffer.getWindowType()});
        }
    };


    /*
     * this function is used to add Notes
     * */
    this.showNote = function (imgEdit, sUrl, sTitle, isEdit, iBaseTransId, iMemberId)
    {
        var iNoteId=0;
        me.isEdit=isEdit;
        if(!iBaseTransId)
            iBaseTransId=me.getBaseTransId();

        if(iBaseTransId>0)
            sUrl +="&transId="+iBaseTransId;

        sUrl += "&memberId=" + iMemberId;
        //           alert(me.getBaseTransId())
        var arrActions = [];
        /*arrActions[0] = "Ok|clNotes.onClkSaveNotes";
         arrActions[1] = "Cancel|clNotes.onClkCloseDlg";*/
        arrActions[0] = MsgHandler.getMsg(MsgConstants.OK,0,0)+"|clNotes.onClkSaveNotes";
        if(isEdit)
        {
            iNoteId = me.getSelectedTransId(Constants.NOTES,imgEdit);
            sUrl +="&noteId="+iNoteId;
            sUrl +="&isNew=1";
            sTitle=MsgHandler.getModuleActionLabel(Constants.NOTES,Constants.EDIT,true);
            //               sTitle=":: Edit Note ::";
            arrActions[1] = MsgHandler.getMsg(MsgConstants.PRINT,0,0)+"|clNotes.onClkPrintNote";
            arrActions[2] = MsgHandler.getMsg(MsgConstants.CANCEL,0,0)+"|clNotes.onClkCloseDlg";
        }
        else
        {
            sTitle=MsgHandler.getModuleActionLabel(Constants.NOTES,Constants.NEW,true);
            arrActions[1] = MsgHandler.getMsg(MsgConstants.CANCEL,0,0)+"|clNotes.onClkCloseDlg";
        }
        // sTitle=":: "+MsgHandler.getMsg(MsgConstants.ADD_MODULE,0,Constants.NOTES)+" ::";
        //               sTitle=":: Add Note ::";



        //alert(sUrl)
        var clNotesDlg = new DialogBox("notesDetails",sTitle,40,60,640,450, sUrl, true, null, true,true,arrActions);
        clNotesDlg.setTitle(sTitle);
        clNotesDlg.setCenter();
        clNotesDlg.show();
    };


    /*
     * this function is used to add Notes
     * */
    this.showNote1 = function(imgEdit,sUrl,sTitle,isEdit,iBaseTransId)
    {
        var iNoteId=0;
        me.isEdit=isEdit;
        if(!iBaseTransId)
            iBaseTransId=me.getBaseTransId();

        if(iBaseTransId>0)
            sUrl +="&transId="+iBaseTransId;

        //           alert(me.getBaseTransId())
        var arrActions = [];
        arrActions[0] = MsgHandler.getMsg(MsgConstants.OK,0,0)+"|clNotes.onClkSaveNotes";
        if(isEdit)
        {
            iNoteId = me.getSelectedTransId(Constants.NOTES,imgEdit);
            sUrl +="&noteId="+iNoteId;
            sUrl +="&isNew=1";
            sTitle=MsgHandler.getModuleActionLabel(Constants.NOTES,Constants.EDIT,true);
            //               sTitle=":: Edit Note ::";
            arrActions[1] = MsgHandler.getMsg(MsgConstants.PRINT,0,0)+"|clNotes.onClkPrintNote";
        }
        else
        {
            sTitle=MsgHandler.getModuleActionLabel(Constants.NOTES,Constants.NEW,true);
        }
        clOverlay.showFrameOverlay("notesDetails",sUrl,"50%","100%",clOverlay.OVERLAY_RIGHT,0,0,null,sTitle,"containerDiv",false,arrActions);
    };

    /**
     * Author: K. Sampath Kumar
     * this method is used to open send mail dialog from send mail related module actions
     * @param imgedit
     * @param sUrl
     * @param sTitle
     * @param isEdit
     */
    this.showSendMail = function(imgedit,sUrl,sTitle,isEdit,iEmailQuote,iRelModuleId,byActionId,iModuleId)
    {
        var iSendMailId=0,iEmailLogId=0,bReturn = true,iTransId=0;
        if(iModuleId==0)
        {
            if(document.getElementById("moduleId")!=null)
                iModuleId=document.getElementById("moduleId").value;
            else
                iModuleId=document.getElementById("baseModuleId").value;
            //sUrl +="&transId="+me.getBaseTransId();

            //TODO: commented on 23/03/2022 memeberId changes in Lead/TeleLead
            /*if(iModuleId==Constants.TELELEADS ||iModuleId==Constants.LEADS )
            {
                if(document.getElementById("transId")!=null)
                    sUrl += "&memberId=" + document.getElementById("transId").value;
                else
                    sUrl += "&memberId=" + document.getElementById("baseTransId").value;
            }*/
        }
        else
        {
            iTransId = listView.getTransIds("listReportTab_1");
            sUrl+="&bMainModule="+true;
            iEmailQuote=iTransId;
        }
        if(byActionId==Constants.REPLY || byActionId==Constants.REPLY_ALL)
        {
            bReturn=false;
            var arrTransIds =listView.getTransIds("listReportTab_"+Constants.EMAILS);
            if(listHandler.validateRowSelection(arrTransIds,false))
            {
                sUrl +="&emailLogId="+arrTransIds[0];
                bReturn=true;
            }

        }

        if(bReturn)
        {
            if(isEdit)
            {
                iEmailLogId = me.getSelectedTransId(Constants.EMAILS,imgedit);
                //sUrl +="&emailLogId="+iEmailLogId;
                //sTitle=Focus.crm.Messages.getActionLabel(Constants.EDIT)+" "+MsgHandler.getMsg(MsgConstants.MAIL);
            }
            //else
                //sTitle=MsgHandler.getMsg(MsgConstants.SEND)+" "+MsgHandler.getMsg(MsgConstants.MAIL);


            handler.showEmailDlg(sUrl,byActionId,iEmailLogId,iModuleId,me.getBaseTransId(),iRelModuleId,iEmailQuote);


            /*if(byActionId==Constants.REPLY)
                sTitle=MsgHandler.getMsg(MsgConstants.REPLY)+" "+MsgHandler.getMsg(MsgConstants.MAIL);
            else if(byActionId==Constants.REPLY_ALL)
                sTitle=MsgHandler.getMsg(MsgConstants.REPLY_ALL);
            sUrl+="&quoteTransId="+iEmailQuote;

            sUrl+="&relModuleId="+iRelModuleId;
            var clSendMailDlg;
            //alert(iRelModuleId+","+iModuleId )
            if(iModuleId == Constants.REQUEST && (iRelModuleId>0 && iRelModuleId!=Constants.SERVICE_QUOTE))
            {
                var arrActions = new Array();
                arrActions[0] = MsgHandler.getMsg(MsgConstants.SEND)+"|clNotifyEmail.sendEmailNotification";
                arrActions[1] = MsgHandler.getMsg(MsgConstants.CANCEL,0,0)+"|clNotifyEmail.onClkCloseDlg";
                sTitle = "Email Notification ";
                clSendMailDlg = new DialogBox("emailNotification",sTitle,40,60,850,720, sUrl, true, null, true,true,arrActions);
            }
            else
            {
                clSendMailDlg = new DialogBox("sendMail",sTitle,40,60,850,660, sUrl, true, null, true,true,null);
            }
            clSendMailDlg.setTitle(sTitle);
            clSendMailDlg.setCenter();
            clSendMailDlg.show();*/
        }
    };

    this.showSendMail1 = function(imgedit,sUrl,sTitle,isEdit,iEmailQuote,iRelModuleId,byActionId,iModuleId)
    {
        var iSendMailId=0,iEmailLogId=0,bReturn = true,iTransId=0;
        if(iModuleId==0)
        {
            if(document.getElementById("moduleId")!=null)
                iModuleId=document.getElementById("moduleId").value;
            else
                iModuleId=document.getElementById("baseModuleId").value;
            sUrl +="&transId="+me.getBaseTransId();

            //TODO: commented on 23/03/2022 memeberId changes in Lead/TeleLead
            //if(iModuleId==Constants.TELELEADS ||iModuleId==Constants.LEADS )
            //    sUrl +="&memberId="+document.getElementById("transId").value;
        }
        else
        {
            iTransId = listView.getTransIds("listReportTab_1");
            sUrl+="&bMainModule="+true;
            iEmailQuote=iTransId;
        }
        if(byActionId==Constants.REPLY || byActionId==Constants.REPLY_ALL)
        {
            bReturn=false;
            var arrTransIds =listView.getTransIds("listReportTab_"+Constants.EMAILS);
            if(listHandler.validateRowSelection(arrTransIds,false))
            {
                sUrl +="&emailLogId="+arrTransIds[0];
                bReturn=true;
            }

        }
        if(bReturn)
        {
            if(isEdit)
            {
                iEmailLogId = me.getSelectedTransId(Constants.EMAILS,imgedit);
                sUrl +="&emailLogId="+iEmailLogId;
                sTitle=Focus.crm.Messages.getActionLabel(Constants.EDIT)+" "+MsgHandler.getMsg(MsgConstants.MAIL);
            }
            else
                sTitle=MsgHandler.getMsg(MsgConstants.SEND)+" "+MsgHandler.getMsg(MsgConstants.MAIL);
            if(byActionId==Constants.REPLY)
                sTitle=MsgHandler.getMsg(MsgConstants.REPLY)+" "+MsgHandler.getMsg(MsgConstants.MAIL);
            else if(byActionId==Constants.REPLY_ALL)
                sTitle=MsgHandler.getMsg(MsgConstants.REPLY_ALL);
            sUrl+="&quoteTransId="+iEmailQuote;

            sUrl+="&relModuleId="+iRelModuleId;
            var clSendMailDlg;
            //alert(iRelModuleId+","+iModuleId )
            var sId = "";
            if(iModuleId == Constants.REQUEST && (iRelModuleId>0 && iRelModuleId!=Constants.SERVICE_QUOTE))
            {
                var arrActions = [];
                arrActions[0] = MsgHandler.getMsg(MsgConstants.SEND)+"|clNotifyEmail.sendEmailNotification";
                //arrActions[1] = MsgHandler.getMsg(MsgConstants.CANCEL,0,0)+"|clNotifyEmail.onClkCloseDlg";
                sTitle = "Email Notification ";
                //clSendMailDlg = new DialogBox("emailNotification",sTitle,40,60,850,720, sUrl, true, null, true,true,arrActions);
                //clSendMailDlg.setTitle(sTitle);
                //clSendMailDlg.setCenter();
                //clSendMailDlg.show();
                sId = "emailNotification";
            }
            else
            {
                sId = "sendMail";
                //clSendMailDlg = new DialogBox("sendMail",sTitle,40,60,850,660, sUrl, true, null, true,true,null);
            }

            clOverlay.showFrameOverlay(sId,sUrl,"60%","100%",clOverlay.OVERLAY_RIGHT,0,0,null,sTitle,"containerDiv",false,arrActions);

        }
    };

    /*
     * this function is used to add Notes
     * */
    this.showCallNote = function(imgEdit,sUrl,sTitle,isEdit,iModuleId,iBaseTransId)
    {
        var iNoteId=0;
        me.isEdit=isEdit;
        if(iBaseTransId>0)
            sUrl +="&baseTransId="+iBaseTransId;
        else
            sUrl +="&baseTransId="+me.getBaseTransId();

        sUrl +="&actionId="+Constants.NEW;
        sUrl +="&scrType="+iModuleId;
        //        sUrl +="&actionId="+Constants.NEW_CALL_NOTES;

        if(isEdit)
        {
            iNoteId = me.getSelectedTransId(Constants.CALL_NOTES,imgEdit);
            sUrl +="&noteId="+iNoteId;
            sTitle=MsgHandler.getModuleActionLabel(Constants.CALL_NOTES,Constants.EDIT,true);
        }
        else
            sTitle=MsgHandler.getModuleActionLabel(Constants.CALL_NOTES,Constants.NEW,true);

        var arrActions = [];
        /*arrActions[0] = "Ok|clCallNotes.onClkSaveCallNotes(false)";
         arrActions[1] = "Cancel|";*/
        arrActions[0] = MsgHandler.getMsg(MsgConstants.OK,0,0)+"|clCallNotes.onClkSaveCallNotes(false)";
        arrActions[1] = MsgHandler.getMsg(MsgConstants.CANCEL,0,0)+"|";
        //        alert(sUrl)
        var clNotesDlg = new DialogBox("callNotesDetails",sTitle,40,60,630,390, sUrl, true, null, true,true,arrActions);
        clNotesDlg.setTitle(sTitle);
        clNotesDlg.setCenter();
        //clNotesDlg.show();
    };

    /*
     * this function is used to add Notes
     * */
    this.showCallNote1 = function(imgEdit,sUrl,sTitle,isEdit,iModuleId,iBaseTransId)
    {
        var iNoteId=0;
        me.isEdit=isEdit;
        if(iBaseTransId>0)
            sUrl +="&baseTransId="+iBaseTransId;
        else
            sUrl +="&baseTransId="+me.getBaseTransId();

        sUrl +="&actionId="+Constants.NEW;
        sUrl +="&scrType="+iModuleId;
        //        sUrl +="&actionId="+Constants.NEW_CALL_NOTES;

        if(isEdit)
        {
            iNoteId = me.getSelectedTransId(Constants.CALL_NOTES,imgEdit);
            sUrl +="&noteId="+iNoteId;
            sTitle=MsgHandler.getModuleActionLabel(Constants.CALL_NOTES,Constants.EDIT,true);
        }
        else
            sTitle=MsgHandler.getModuleActionLabel(Constants.CALL_NOTES,Constants.NEW,true);

        var arrActions = [];
        /*arrActions[0] = "Ok|clCallNotes.onClkSaveCallNotes(false)";
         arrActions[1] = "Cancel|";*/
        arrActions[0] = MsgHandler.getMsg(MsgConstants.OK,0,0)+"|clCallNotes.onClkSaveCallNotes(false)";
        //arrActions[1] = MsgHandler.getMsg(MsgConstants.CANCEL,0,0)+"|";
        //        alert(sUrl)
        /*var clNotesDlg = new DialogBox("callNotesDetails",sTitle,40,60,630,390, sUrl, true, null, true,true,arrActions);
        clNotesDlg.setTitle(sTitle);
        clNotesDlg.setCenter();
        clNotesDlg.show();*/
        clOverlay.showFrameOverlay("callNotesDets",sUrl,"50%","100%",clOverlay.OVERLAY_RIGHT,0,0,null,MsgHandler.getMsg(MsgConstants.DETAILS,0,Constants.NOTES),"containerDiv",false,arrActions);
        //clNotesDlg.show();
    };

    /*
     * this function is used to add note details to table
     * */
    this.setCallNoteDetails = function(sSubject,sDescription,sNoteType,sScope,iTransId)
    {
        if(handler.isEdit)
            listView.setCurrentRow(Constants.CALL_NOTES,[sSubject,sDescription,sNoteType,sScope,"&nbsp;",iTransId]);
        else
            listView.addRow(Constants.CALL_NOTES,[sSubject,sDescription,sNoteType,sScope,"&nbsp;",iTransId]);
    };


    /**//**
 * Author: K. Sampath Kumar
 * this function is used to add Documents and attachments
 * @param imgEdit
 * @param sUrl
 * @param sTitle
 * @param isEdit
 * @param byActionId
 *//*
 //    this.addDocuments = function(imgEdit,sUrl,sTitle,isEdit,byActionId)
 this.addDocuments = function(imgEdit,sUrl,sTitle,isEdit,byActionId,iModuleId)
 {
 var iTransId=0,iDocumentId=0,iHeight=300;
 //var clDocumentDlg = getDialogBox("clAttachFile");
 me.isEdit=isEdit;
 if(document.getElementById("scrType")!=null && (document.getElementById("scrType").value==3 || document.getElementById("scrType").value==Constants.DOCUMENTS))// From document module
 {
 //me.addDocumentsForDocsModule(imgEdit,sUrl,sTitle,isEdit,byActionId,document.getElementById("scrType").value);
 sTitle = Focus.crm.Messages.getActionLabel(Constants.NEW)+" "+MsgHandler.getMsg(MsgConstants.DOCUMENTS_TITLE);
 if(isEdit)
 {
 sTitle = Focus.crm.Messages.getActionLabel(Constants.EDIT)+" "+MsgHandler.getMsg(MsgConstants.DOCUMENTS_TITLE);
 iDocumentId = me.getSelectedTransId(1,imgEdit);
 }
 sUrl +="&scrType="+document.getElementById("scrType").value+"&actionId="+byActionId;
 sUrl += "&baseTransId="+iTransId+"&documentId="+iDocumentId+"&baseModuleId="+document.getElementById("moduleId").value;
 //alert(sUrl)
 }
 else
 {
 //me.addDocumentsForRelatedModule(imgEdit,sUrl,sTitle,isEdit,byActionId,iModuleId);
 iTransId = me.getBaseTransId();
 //        if(byActionId==Constants.NEW_CALL_ATTACH)
 if(iModuleId==Constants.ATTACHMENTS)
 {
 sTitle = Focus.crm.Messages.getActionLabel(Constants.NEW)+" "+MsgHandler.getMsg(MsgConstants.ATTACHMENTS_TITLE);
 iHeight = 350;
 if(isEdit)
 {
 sTitle = Focus.crm.Messages.getActionLabel(Constants.EDIT)+" "+MsgHandler.getMsg(MsgConstants.ATTACHMENTS_TITLE);
 iDocumentId = me.getSelectedTransId(Constants.ATTACHMENTS,imgEdit);
 }
 sUrl +="&scrType="+iModuleId+"&actionId="+byActionId;
 }
 else
 {
 sTitle = Focus.crm.Messages.getActionLabel(Constants.ADD)+" "+MsgHandler.getMsg(MsgConstants.DOCUMENTS_TITLE);
 if(isEdit)
 {
 sTitle = Focus.crm.Messages.getActionLabel(Constants.EDIT)+" "+MsgHandler.getMsg(MsgConstants.DOCUMENTS_TITLE);
 iDocumentId = me.getSelectedTransId(Constants.DOCUMENTS,imgEdit);
 }
 sUrl +="&scrType="+byActionId+"&actionId="+byActionId;
 }

 sUrl += "&baseTransId="+iTransId+"&documentId="+iDocumentId;
 }
 //alert(sUrl)
 me.getDocumentDialog(sUrl,sTitle,iHeight);
 };

 *//* this.addDocumentsForRelatedModule = function(imgEdit,sUrl,sTitle,isEdit,byActionId,iModuleId)
 {


 };

 this.addDocumentsForDocsModule = function(imgEdit,sUrl,sTitle,isEdit,byActionId,scrType)
 {

 };*//*

 this.getDocumentDialog=function(sUrl,sTitle,iHeight)
 {
 var arrActions = new Array();
 arrActions[0] = MsgHandler.getMsg(MsgConstants.OK,0,0)+"|clAttachFile.onClkSaveDocuments";
 arrActions[1] = MsgHandler.getMsg(MsgConstants.CANCEL,0,0)+"|clAttachFile.onClkCloseDlg";
 var clDocumentDlg= new DialogBox("clAttachFile","::"+sTitle+"::",40,60,550,iHeight, sUrl, true, null, true,true,arrActions);
 clDocumentDlg.callFn("clAttachFile.loadDocuments");// added to disable ok button when the document is locked
 clDocumentDlg.setCenter();
 clDocumentDlg.show();
 }
 */
    /*this.setDocDetails = function()
     {
     listView.refreshRelatedView(Constants.DOCUMENTS);
     };

     this.setAttachDetails = function()
     {
     listView.refreshRelatedView(Constants.ATTACHMENTS);
     };*/

    /*this.setEmailDetails = function()
     {
     listView.refreshRelatedView(Constants.EMAILS);
     };*/

    this.showModuleDialog = function(sUrl,iModuleId,imgEdit,iBaseTransId,isEdit,sTitle,iWidth,iHeight,isCreateDlgInHidden)
    {
        me.isEdit=isEdit;
        if(isEdit)
            sUrl +="&transId="+me.getSelectedTransId(iModuleId,imgEdit);

        if(!iWidth)
            iWidth=670;

        if(!iHeight)
            iHeight=400;

        sUrl+="&viewIn="+Constants.MODULE_IN_DLG;
        if(iBaseTransId>0)
            sUrl+="&baseTransId="+iBaseTransId;

        //alert(sUrl+","+iModuleId)
        var clModuleDlg = new DialogBox("module"+iModuleId,sTitle,140,160,iWidth,iHeight,sUrl, true, null, false,true,null);
        clModuleDlg.setCenter();
        if(isCreateDlgInHidden)
            clModuleDlg.isHide(true);
        else
            clModuleDlg.show();
    };




    this.editOpenActivity=function(sURL,iTransId,imgEdit,iBaseModuleId,iBaseModuleTransId,iListViewTableIndex,iBaseExtraIds)
    {
        iTransId=me.getSelectedTransId(iListViewTableIndex,imgEdit);
        var iModuleId=listView.getSelectedExtraId("listReportTab_"+iListViewTableIndex,0,imgEdit)[0];
        //alert(iModuleId+"----"+iTransId);
        sURL+="&moduleId="+iModuleId;
        //alert(sURL)
        detailedHandler.editModule(sURL,iTransId,false,iBaseModuleId,iBaseModuleTransId,0,iBaseExtraIds);
        //relModuleHandler.editModuleinOverlay(sURL,iTransId,false,iBaseModuleId,iBaseModuleTransId,null,Constants.OPEN_ACTIVITIES,imgEdit);
    };

    this.getCallStatusId=function()
    {
        return document.getElementById("callStatusId").value;
    };

    this.getCallStateId=function()
    {
        return document.getElementById("callStateId").value;
    };

    this.getBaseTransIdAndExtraId=function(iBaseModuleId)
    {
        var iBaseTransId=0;
        var iBaseExtraId=0;

        //TODO: commented on 23/03/2022 memeberId changes in Lead/TeleLead
        /*if (iBaseModuleId == Constants.LEADS || iBaseModuleId == Constants.TELELEADS)
        {
            if(document.getElementById("isViewAll"))
            {
                iBaseExtraId = document.getElementById("baseTransId").value;
                iBaseTransId = document.getElementById("extraIds[0]").value;
            }
            else
            {
                iBaseExtraId = detailedHandler.getTransId();
                iBaseTransId = detailedHandler.getExtraId();
            }
        }
        else*/
        {
            iBaseTransId = relModuleHandler.getBaseTransId();
        }

        return [iBaseTransId,iBaseExtraId];
    };

    function handleInfo(iModuleId,objParent,byActionId)
    {
        //       me.iModuleId=iModuleId;  // var is specific for the ajax request
        function onResponse(sResponse) // Closure
        {
            listView.refreshRelatedView(iModuleId,byActionId);
            var sTableId = "listReportTab_"+Constants.ESTIMATION;
            if(iModuleId == Constants.PARTS_REQUESTED) {
                if(document.getElementById(sTableId))
                    listView.refreshRelatedView(Constants.ESTIMATION);
            }
            else if(iModuleId == Constants.PARTS_REPLACED) {
                sTableId = "listReportTab_"+Constants.PARTS_REQUESTED;
                if(document.getElementById(sTableId))
                    listView.refreshRelatedView(Constants.PARTS_REQUESTED);
            }
        }
        return onResponse;

    }

};


