var listView = new function()
{
    var me = this;
    this.clLookInDialog = null;
    this.clCustomDialog = null;
    this.iCount = 0;
    this.iLayoutId = 0;
    this.bChecked = false;
    this.iViewEventType=0;
    this.iModuleId = 0;
    this.iReportHandle = 0;
    //    this.sTableId = null;
    this.iRowsPerPage = 0;
    this.sSetUpListViewPageUrl=null;
    this.sListViewPageUrl=null;
    this.sLayoutUrl=null;
    this.sColWidthUrl=null;
    this.sPrevOnclick="";
    this.sPrevClass="";
    this.bChkBoxExist=false;
    this.isIgnoreRowAction=false;
    this.iRowIndex=-1;
    this.sTableId=null;
    this.fnSortCallBack=null;
    this.iUserId=0;
    this.iRefreshId=0;
    this.sSearchParams="";
    this.sSortParams="";
    this.sReportId=null;
    this.bIsLayoutSearch=false;
    this.iSearchType=false;
    this.isRefreshRelatedView=false;
    this.fnListviewActionCallBack = null;
    this.isClearFilter=false;
    this.bCurrentSummaryLayoutId=true;
    this.iCurrentSummaryLayoutId=0;
    this.isClearCustomFilter = false;
    this.bIsNewRecordSort=false;
    this.bIsSearch=false;
    this.isSearchTxt=false;
    this.sScrollTop=0;
    this.iNewCountClk=0;

    this.clearState=function()
    {
        this.clLookInDialog = null;
        this.clCustomDialog = null;
        this.isClearCustomFilter = false;
        this.iCount = 0;
        this.iLayoutId = 0;
        this.bChecked = false;
        this.iViewEventType=0;
        this.iModuleId = 0;
        this.iReportHandle = 0;
        this.sTableId = null;
        this.iRowsPerPage = 0;
        this.sSetUpListViewPageUrl=null;
        this.sListViewPageUrl=null;
        this.sLayoutUrl=null;
        this.sColWidthUrl=null;
        this.sPrevOnclick="";
        this.sPrevClass="";
        this.bChkBoxExist=false;
        this.isIgnoreRowAction=false;
        this.iRowIndex=-1;
        //        this.sTableId=null;
        this.fnSortCallBack=null;
        this.iUserId=0;
        this.iRefreshId=0;
        this.sSearchParams="";
        this.sSortParams="";
        this.isClearFilter=false;
        this.bCurrentSummaryLayoutId=true;
        this.iCurrentSummaryLayoutId=0;
        this.bIsNewRecordSort=false;
        this.bIsSearch=false;
        this.isSearchTxt=false;
        this.sScrollTop=0;
        this.iNewCountClk=0;
        //        this.g_sFilterData="";
        if(document.getElementById("dvFilter"))
            document.getElementById("dvFilter").style.visibility="hidden";//cross.setVisible(document.getElementById("dvFilter"),false);
    };


    var me = this;
    app.registerInstance("listView",this,Constants.SCOPE_APP);

    this.setListViewDimensions = function (bNavMenuShow,iContainerWidth,iMenuWidth) {
        if(iMenuWidth==undefined)
            iMenuWidth=170;

        var iEffectWidth = iMenuWidth;
        var objListCustom = document.getElementById("listCustom");
        var iTableId = document.getElementById("iTableId").value;
        var dvContainer = document.getElementById("containerDiv_" + iTableId);
        var iWidth=0;

        if (dvContainer) {
            if(!bNavMenuShow && objListCustom!=null) {
                iWidth = (objListCustom.offsetWidth)+iEffectWidth;
                dvContainer.style.width = (dvContainer.offsetWidth)+iEffectWidth;
                dvContainer.setAttribute("iTableWidth", dvContainer.offsetWidth);
                dvContainer.children[0].setAttribute("width", iWidth);
                if(window["clSummaryBar"]!=undefined)
                    clSummaryBar.setSummaryBarDimensions(iEffectWidth);
            }
            else
            {
                if (dvContainer.getAttribute("iTableWidth") == null && objListCustom!=null) {
                    dvContainer.style.width = (dvContainer.offsetWidth) - iEffectWidth;
                    dvContainer.children[0].setAttribute("width", parseInt(objListCustom.offsetWidth) - iEffectWidth);
                    if(window["clSummaryBar"]!=undefined)
                        clSummaryBar.setSummaryBarDimensions(-iEffectWidth);
                }
                else {
                    iWidth=(dvContainer.getAttribute("iTableWidth"))-iEffectWidth;
                    dvContainer.style.width = iWidth;
                    dvContainer.setAttribute("iTableWidth",iWidth);
                    dvContainer.children[0].setAttribute("width", dvContainer.getAttribute("iTableWidth"));
                    if(window["clSummaryBar"]!=undefined)
                        clSummaryBar.setSummaryBarDimensions(-iEffectWidth);
                }
            }
        }
    };

    this.onWLoadSetUrl= function(sSetUpListViewPageUrl,sListViewPageUrl,sLayoutUrl,sColWidthUrl,sEventCallBack,sFilterCallBack,sDeleteCallBack,byListViewType,iColLen,bTablet,iWidth)
    {
        if(window["clNavMenu"]!=undefined)
            clNavMenu.setCallback(me.setListViewDimensions);
        var iTableId=document.getElementById("iTableId").value;
        if(iTableId>0)
        {
            util.setWindowResizeCB(me.resizeListview);

            if(window["clCloudSetup"]!=undefined)
                clCloudSetup.onresizeHandler(iTableId);
            else if (byListViewType != Constants.IMODULE_WINDOW.SPLIT_PANE
                && byListViewType != Constants.IMODULE_WINDOW.SPLIT_PANE_WITH_TABBED_PANE) {
                if ((document.getElementById("listCustom") && document.getElementById("listCustom").offsetWidth > 0))
                {//listview table width setting
                    document.getElementById("containerDiv_" + iTableId).style.width = document.getElementById("listCustom").offsetWidth;
                    document.getElementById("containerDiv_" + iTableId).children[0].setAttribute("width", parseInt(document.getElementById("listCustom").offsetWidth));
                }
                /*else if ((document.getElementById("dvDetailedView") && document.getElementById("iListHeaderId").offsetWidth > 0)) {
                 if (detailedView.arrRelatedModuleIds != null) {
                 for (var i = 0; i < detailedView.arrRelatedModuleIds.length; i++) {
                 var dvContainer = document.getElementById("containerDiv_" + detailedView.arrRelatedModuleIds[i]);
                 if (dvContainer) {
                 dvContainer.style.width = parseInt(document.getElementById("iListHeaderId").offsetWidth) - 30;
                 dvContainer.children[0].setAttribute("width", parseInt(document.getElementById("iListHeaderId").offsetWidth) - 30);
                 }
                 }
                 } else {
                 document.getElementById("containerDiv_" + iTableId).style.width = document.getElementById("iListHeaderId").offsetWidth;
                 document.getElementById("containerDiv_" + iTableId).children[0].setAttribute("width", parseInt(document.getElementById("iListHeaderId").offsetWidth));
                 }
                 }*/
            }
            else if (document.getElementById("dvMultipane1"))
                document.getElementById("containerDiv_" + iTableId).style.width = document.getElementById("dvMultipane1").style.width;
        }

        me.sSetUpListViewPageUrl = sSetUpListViewPageUrl;
        me.sListViewPageUrl = sListViewPageUrl;
        me.sLayoutUrl = sLayoutUrl;
        me.sColWidthUrl = sColWidthUrl;
        me.sEventCallBack = sEventCallBack;
        me.sFilterCallBack = sFilterCallBack;
        me.sDeleteCallBack = sDeleteCallBack;
        var sTableId="listReportTab_"+iTableId;
        var clTable = new sTable(sTableId);
        if(clTable)
        {
            var objRow=null,iRowIndex=-1,iColIndex=0,iModuleId=0;
            iModuleId=this.getModuleId();
            /*  var arrIndexes= eval(app.getFromBuffer("lstclick_"+iModuleId));
             if(arrIndexes!=undefined)
             {
             iRowIndex=arrIndexes[0];
             iColIndex=arrIndexes[1];
             objRow=clTable.getRow(iRowIndex);
             }
             if(objRow!=undefined)
             {
             if(iColIndex>0)
             clTable.setSelectedCell(iRowIndex,iColIndex);
             else clTable.setCurrentRow(iRowIndex);
             }*/
            var sSelectedRowDets = me.getSelectedRowDetails(iModuleId);
            iRowIndex = sSelectedRowDets[0];
            iColIndex = sSelectedRowDets[1];
            objRow = clTable.getRow(iRowIndex);
            if(objRow!=undefined)
            {
                if(iColIndex>0)
                    clTable.setSelectedCell(iRowIndex,iColIndex);
                else clTable.setCurrentRow(iRowIndex);
            }
            if(bTablet)
            {
//                clResponsiveTable.responsiveTable(sTableId,2 ,iColLen,1,iWidth);//(sTableId,iFromColIndex,iToColIndex,iAppendColIndex, iWidthToFit)
            }
//            else
//                clResponsiveTable.windowResizeHandler(sTableId,2 ,iColLen,1,iWidth);//(sTableId,iFromColIndex,iToColIndex,iAppendColIndex, iWidthToFit)
        }
        /*  var byWindowType = clAppBuffer.getWindowType();
         if(byWindowType == Constants.IMODULE_WINDOW.SPLIT_PANE
         || byWindowType == Constants.IMODULE_WINDOW.SPLIT_PANE_WITH_TABBED_PANE){
         if(clTable && document.getElementById("iTotalRows_1"))
         clSplit.toggleListActions(document.getElementById("iTotalRows_1").value);
         }*/

    };
    this.getSelectedRowDetails = function(iModuleId){
        var arrIndexes= eval(app.getFromBuffer("selectedIndexes_"+iModuleId));
        var iRowIndex = -1,iColIndex = -1,objRow = null;
        if(arrIndexes!=undefined)
        {
            iRowIndex = arrIndexes[0];
            iColIndex = arrIndexes[1];
        }
        return [iRowIndex,iColIndex];
    };
    /**
     * hide and show the alphabetical and texual search in listview
     * @param sFilter
     */

    this.hideFilter = function(bAlpha)
    {
        var isFilterLayout=parseInt(document.getElementById("bLayoutFilterExist").value);
        if (bAlpha)
        {
            cross.setVisible(document.getElementById("tdTxtFilter"),true);
            cross.setVisible(document.getElementById("tdalphaFilter"),false);
        }
        else
        {
            cross.setVisible(document.getElementById("tdTxtFilter"),false);
            cross.setVisible(document.getElementById("tdalphaFilter"),true);
        }
    };

    this.hideFilter_old = function(bAlpha)
    {
        var iTableHeight=document.getElementById("listviewTabHeight").value;
        var objFilterLayout=document.getElementById("bLayoutFilterExist").value;
        //var objtdAlfhaFilter=document.getElementById("tdalphaFilter");
        var iTxtFilterht=document.getElementById("txtFilter").offsetHeight;
        var iTxtFilterwidth=parseInt(document.getElementById("txtFilter").getAttribute("OriginalTxtWidth"));
        var ialphaFilterht=document.getElementById("alphaFilter").offsetHeight;
        document.getElementById("txtFilter").setAttribute("OriginalTxtHeight",iTxtFilterht);
        if(!iTxtFilterwidth)
        {
            iTxtFilterwidth=555;
            document.getElementById("txtFilter").setAttribute("OriginalTxtWidth",iTxtFilterwidth);
        }

        //document.getElementById("alphaFilter").style.height="";
        document.getElementById("txtFilter").style.height="iTxtFilter";
        if (bAlpha)
        {
            //document.getElementById("alphaFilter").style.visibility = "hidden";
            document.getElementById("txtFilter").style.visibility = "visible";

            document.getElementById("txtFilter").style.transition="height 0.5s ";
            //document.getElementById("alphaFilter").style.transition="height 0.5s ";
            document.getElementById("containerDiv_1").style.transition='height 1.5s';
            if(objFilterLayout==1)
            {
                // document.getElementById("alphaFilter").style.height=iTxtFilterht;
                document.getElementById("alphaFilter").setAttribute("OriginalHeight",ialphaFilterht);
                document.getElementById("containerDiv_1").style.height=iTableHeight;
            }
            //document.getElementById("alphaFilter").style.width = "0px";
            //document.getElementById("alphaFilter").style.height = "0px";

            document.getElementById("txtFilter").style.width = iTxtFilterwidth;
            //objtdAlfhaFilter.style.width="0px";
            cross.setVisible(document.getElementById("tdalphaFilter"),false);

        }
        else
        {
            document.getElementById("txtFilter").style.visibility = "hidden";
            //document.getElementById("alphaFilter").style.visibility = "visible";
            document.getElementById("txtFilter").style.transition="height 0.3s ";
            //document.getElementById("alphaFilter").style.transition="height 0.3s";
            document.getElementById("containerDiv_1").style.transition='height 1.5s';

            if(objFilterLayout==1)
            {
                var iAlphaHt=  document.getElementById("alphaFilter").getAttribute("OriginalHeight");
                iTableHeight=iTableHeight-iAlphaHt;
                document.getElementById("containerDiv_1").style.height=iTableHeight;
                //document.getElementById("alphaFilter").style.height=iAlphaHt;
            }
            //document.getElementById("alphaFilter").style.width ="740px";
            document.getElementById("txtFilter").style.height =iTxtFilterht;
            //document.getElementById("txtFilter").setAttribute("OriginalTxtWidth",document.getElementById("txtFilter").style.width);
            document.getElementById("txtFilter").style.width = "0px";
            //objtdAlfhaFilter.style.width="100%";
            cross.setVisible(document.getElementById("tdalphaFilter"),true);
        }
    };

    /**
     * get the lookin dialogbox in listview
     * @param sUrl
     */
    this.getLookInDlg = function (sUrl)
    {
        var arrActions = new Array();
        /*arrActions[0] = "Ok|clLookin.getSelectedValues";//3rd param onwards===attributes
         arrActions[1] = "Cancel|clLookin.closeDlg";*/
        arrActions[0] = MsgHandler.getMsg(MsgConstants.OK,0,0)+"|clLookin.getSelectedValues";//3rd param onwards===attributes
        arrActions[1] = MsgHandler.getMsg(MsgConstants.CANCEL,0,0)+"|clLookin.closeDlg";
        //        this.clLookInDialog = new DialogBox("lookin", ":: Look In ::", 280, 400, 290, 400, sUrl, true, null, true, true, arrActions);
        this.clLookInDialog = new DialogBox("lookin", MsgHandler.getMsg(MsgConstants.LOOK_IN), 280, 400, 290, 400, sUrl, true, null, true, true, arrActions);
        me.clLookInDialog.callFn("clLookin.getCallBack",[parent.listView.setLookInValue],"clLookin");
        this.clLookInDialog.setCenter();
        this.clLookInDialog.show();
    };

    /**
     * set look in textbox with selected value in look in dialog box
     * @param iNodeId
     * @param sNodeName
     */
    this.setLookInValue = function(sParam)
    {
        me.iUserId = sParam[0];
        listView.clLookInDialog.hide();
        document.getElementById("hdUserId").value = me.iUserId;
        document.getElementById("lookin").innerHTML = sParam[1];
        me.callSearchAction("module/moduleView!getListView.do", null, null, false, false,true);
    };

    this.clearLookInControl = function()
    {
        if(document.getElementById("hdUserId"))
        {
            document.getElementById("hdUserId").value = 0;
            document.getElementById("lookin").innerHTML = "&nbsp;";
            document.getElementById("lookin").style = "border:1px solid #CCCCCC;width: 190px; " +
                "display: inline-block;background-color:#E9E8E8;padding-top:3px";
            me.iUserId=0;
        }
    };


    /**
     *   Check With RAGHU --srikanth
     * @param chkbx
     * @param isSelectAll
     * @param iRowIndex
     * @param sTableId
     */
    this.isChecked = function(chkbx, isSelectAll, iRowIndex,sTableId)
    {
        var iExtraIdsLength=0,sFnName,iColumnCnt,pagingInstance=null,iHiddenColCnt,iTransId,iExtraHiddenCol=0;//,iRowIndex;
        var arrValueIndexes = new Array();
        var arrSelValues = new Array();
        var clTable = new sTable(sTableId);

        var iTableId = listView.getTableId(sTableId);
        if(document.getElementById("extraIdsLength_"+iTableId))
            iExtraIdsLength = document.getElementById("extraIdsLength_"+iTableId).value;
        //if(document.getElementById("hiddenColCnt_"+iTableId)) TODO: Commented on 18-04-2017,right no no usage of hidden cols
        //    iHiddenColCnt = parseInt(document.getElementById("hiddenColCnt_"+iTableId).value);
        if(document.getElementById("extraHiddenCol_"+iTableId))
            iExtraHiddenCol = document.getElementById("extraHiddenCol_"+iTableId).value;

        if(document.getElementById("bAdvPagingExist_"+iTableId).value>0)  // srikanth Check with raghu
            pagingInstance = AdvPaging.getInstance(sTableId.substring(sTableId.indexOf("_")+1));

        iColumnCnt = parseInt(document.getElementById("iColumnCnt_"+iTableId).value) + 1;
        if(document.getElementById("sViewEvent"))
            sFnName = document.getElementById("sViewEvent").value;
        //for (var i = 0; i < iHiddenColCnt; i++)
        //{
        //    arrValueIndexes[i] = ++iColumnCnt;
        //}
        if (isSelectAll == undefined)
        {
            iRowIndex = chkbx.parentNode.parentNode.parentNode.rowIndex-1;
        }
        else
            iRowIndex = iRowIndex-1;

        var iColCnt = clTable.getColCount(iRowIndex) - 3;//1 for authstatus,1 for empty col and 1 for extraidslength;
        var iColIndex = iColCnt -iExtraIdsLength;//- iHiddenColCnt-iExtraHiddenCol;
        iTransId = clTable.getValueAt(iRowIndex , iColIndex,true,iRowIndex);


        var iExtraId = listView.getSelectedExtraId(sTableId,iRowIndex,null,false);
        if (chkbx.checked || isSelectAll)
        {
            if(pagingInstance!=null)    // srikanth Check with raghu
            {
                pagingInstance.setTransIds(iTransId,iRowIndex);
                if(iExtraId.length>0)
                    pagingInstance.setExtraIds(iExtraId,iRowIndex);

                /*
                 if (iHiddenColCnt > 0)
                 {
                 arrSelValues = checkboxcol.getSelRowMultiValues(document.getElementById(sTableId), 0, arrValueIndexes, iRowIndex)
                 pagingInstance.setHiddenValues(iTransId, arrSelValues[0]);
                 }
                 */
            }
            if(sFnName)
            {
                if(isSelectAll)
                    cross.callFunction(null,eval(sFnName),[Constants.VIEW_EVENT_SELECTALL,iRowIndex]);
                else cross.callFunction(null,eval(sFnName),[Constants.VIEW_EVENT_SELECT,iRowIndex]);
            }
        }
        else
        {
            if(pagingInstance!=null)
            {
                if(iExtraId.length>0)
                    pagingInstance.removeExtraIds(iExtraId);
                pagingInstance.removeTransIds(iTransId);
                //if (iHiddenColCnt > 0)
                //    pagingInstance.removeHiddenValues(iTransId);
            }
        }
        //show record count notification on listview

        if(pagingInstance)
        {
            if(!isSelectAll )
            {
                me.hideRecordsNotification();
                pagingInstance.setSelectionPageType(0);
            }
            else if(pagingInstance.getSelectionPageType()==1)//1==select all pages in paging
            {
                pagingInstance.onClkPageSelection(1);
            }
            else if(pagingInstance.getTransIds().length==0 || pagingInstance.getSelectionPageType()==4)//4==clear  selection in paging
            {
                me.hideRecordsNotification();
                pagingInstance.onClkPageSelection(4);
            }
            else if(isSelectAll || pagingInstance.getSelectionPageType()==2)//|| pagingInstance.getTransIds().length>1)
            {
                pagingInstance.onClkPageSelection(2);
            }
            else if(pagingInstance.getSelectionPageType()==3 || pagingInstance.getTransIds().length==0)
            {
                pagingInstance.onClkPageSelection(3);
            }
            else
            {
                if(document.getElementById("iNoofRecords"))
                    document.getElementById("iNoofRecords").innerHTML=pagingInstance.getTransIds().length;
            }
        }
    };

    this.getTableId = function(sTableId)
    {
        var iTableId;
        if(sTableId!=undefined && sTableId.indexOf("_")>-1)
            iTableId = sTableId.substring(sTableId.indexOf("_")+1);
        else iTableId=1;

        return util.encodeURI(iTableId);
    };

    this.hideRecordsNotification=function()
    {
        if(document.getElementById("iSelectedRecords"))
            document.getElementById("iSelectedRecords").style.display="none";
        if(document.getElementById("iAllRecords"))
            document.getElementById("iAllRecords").style.display="none";
    };
    /**
     * setting the selected checkboxes previously selected in advance paging
     */
    this.setCheckBoxes = function()
    {
        var iSelectedRowCnt=0;
        var pagingInstance = AdvPaging.getInstance();
        var iRowIndex,clTable,iRowCnt,iTransId,aSelectedTransIds,objChkBox,tdChk;
        clTable = new sTable(me.sTableId);
        iRowCnt = clTable.getRowCount();

        aSelectedTransIds = pagingInstance.getTransIds();
        for (var i = 0; i < iRowCnt; i++)
        {
            tdChk = clTable.getElementAt(i, 0).parentNode;
            objChkBox = cross.getFirstElement(tdChk.childNodes);
            iRowIndex = objChkBox.parentNode.parentNode.parentNode.rowIndex;
            if(iRowIndex>=0)
                iTransId = document.getElementById("iTransId"+(iRowIndex-1)).innerHTML;
            for (var j = 0; j < aSelectedTransIds.length; j++)
            {
                if (aSelectedTransIds[j] == iTransId)
                {
                    iSelectedRowCnt++;
                    objChkBox.checked = true;
                }
            }
        }
        checkboxcol.gHeaderChkBox.checked = iRowCnt <= iSelectedRowCnt;
    };

    this.checkList = function(objTab, isChecked)
    {
        var totalCheckbox = 0;
        var allCheckBoxs = document.getElementById("listForm");
        var objTable = document.getElementById(objTab);
        var clAdvPading=AdvPaging.getInstance();//// @changed@
        for (var i = 0,j = 1; i < allCheckBoxs.length; i++)
        {
            if (allCheckBoxs[i].type == "checkbox")
            {
                if (isChecked == 1)
                {
                    if (i != 0)
                    {
                        clAdvPading.setTransIds(objTable.rows[j].cells[0].children[1].innerHTML,i);
                        clAdvPading.setSelectHeaderChkBx(objTable.rows[j].cells[0].children[1].innerHTML);
                        j++;
                    }
                    allCheckBoxs[i].checked = true;
                }
                else
                {
                    if (i != 0)
                        clAdvPading.removeTransIds(0);
                    allCheckBoxs[i].checked = false;
                }
            }
        }
        return totalCheckbox;
    };

    this.checkedAll = function(objTab, isChecked)
    {
        var totalCheckbox = this.checkList(objTab, isChecked);
        if (this.bChecked)
            this.iCount = totalCheckbox - 1;
        else
            this.iCount = 0;
    };

    this.getSelectedCnt = function()
    {
        return this.iCount;
    };

    this.getCustomFilter = function(sUrl, iModuleId)
    {
        var iReportHandle = 0,iLayoutId,arrActions;
        iReportHandle = listView.getReportHandle();
        //        if (me.iLayoutId > 0)
        //            iLayoutId = me.iLayoutId;
        //        else iLayoutId = document.getElementById("iLayoutId").value;
        iLayoutId = me.getLayoutId();
        arrActions = new Array();
        /*arrActions[0] = "Ok|customFilter.save|";//3rd param onwards===attributes
         arrActions[1] = "Cancel|customFilter.closeCustomDialog";*/
        arrActions[0] = MsgHandler.getMsg(MsgConstants.OK,0,0)+"|customFilter.save(3)";//3rd param onwards===attributes
        arrActions[1] = MsgHandler.getMsg(MsgConstants.CANCEL,0,0)+"|customFilter.closeCustomDialog";
        //        var arrValues=me.getFilterValues();

        if(sUrl.indexOf("?")==-1)
            sUrl+="?";
        else
            sUrl+="&";

        sUrl += "moduleId=" + iModuleId + "&iLayoutId=" + iLayoutId + "&repHandle=" + iReportHandle;
        if( this.clCustomDialog==null || this.isClearCustomFilter )
        //        this.clCustomDialog = new DialogBox("CustomFilter", "Custom Filter", 100, 100, 500, 300, sUrl, true, null, true, true, arrActions,null,null,null,null,true,null,true);
            this.clCustomDialog = new DialogBox("CustomFilter", MsgHandler.getMsg(MsgConstants.CUST_FILTER), 100, 100, 500, 300, sUrl, true, null, true, true, arrActions,null,null,null,null,true,null,true);
        else CLButtonUtil.enableButton(document.getElementById("btn_0"));
        this.clCustomDialog.setCenter();
        this.clCustomDialog.show();
        this.clCustomDialog.callFn("customFilter.setFilterCriteria",['custFilter[0].'],'CustomFilter');
        cross.cancelBubble(cross.getEvent());
    };

    this.setHiddenIds = function(iTransId, iRowIndex)
    {
        var objTable,tBody,objCol;
        var aHiddenVal = new Array();
        objTable = document.getElementById("listReportTab");
        tBody = objTable.tBodies[0];
        objCol = objTable.rows[0].cells;
        for (var i = 0,j = 0; i < objCol.length; i++)
        {
            if (tBody.rows[iRowIndex].cells[i] != null && tBody.rows[iRowIndex].cells[i].style.display == "none")
            {
                aHiddenVal[j] = tBody.rows[iRowIndex].cells[i].innerHTML;
                j++;
            }
        }
        if (aHiddenVal.length > 0)
            AdvPaging.getInstance().setHiddenValues(iTransId, aHiddenVal);
    };

    this.callRefreshAction=function(sUrl,isSummaryBar,isClearFilter)
    {
        me.callListviewActions(null, sUrl, null, null, null, null, null, null, null, null, null
            , null, isSummaryBar, null, null, null, Constants.IListView_Actions.REFRESH,isClearFilter);
    };

    this.callSearchAction=function(sUrl, objAlpha, isPreferences, isTxtSearch
        , isAllOrNumaric, isLookIn,sAdvParams,bIsNewRecordSort,sSearchFldValue)
    {
        me.callListviewActions(null, sUrl, null, null, objAlpha, isPreferences, isTxtSearch
            , isAllOrNumaric, isLookIn, sAdvParams,bIsNewRecordSort,sSearchFldValue, null, null, null, null
            , Constants.IListView_Actions.SEARCH,false);
    };

    this.callLayoutChangeAction=function(objLink,sUrl,isHomeview)
    {
        me.callListviewActions(objLink, sUrl, isHomeview, null, null, null, null, null, null
            , null, null, null, null, null, null, null, Constants.IListView_Actions.LAYOUT_CHANGE,false);
    };

    //this.callDeleteAction=function(objLink,sUrl,sTableId,iModuleId,isPreferences,iIgnoreDelete)
    //{
    //    me.callListviewActions(objLink, sUrl, null, null, null, isPreferences,null, null, null, null, null, null, null, sTableId
    //        , iModuleId,iIgnoreDelete, null, Constants.IListView_Actions.DELETE);
    //};

    this.callListviewActions=function(objLink,sUrl,isHomeview,isUsers,objAlpha, isPreferences, isTxtSearch
        , isAllOrNumaric, isLookIn,sAdvParams,bIsNewRecordSort,sSearchFldValue,isSummaryBar
        ,sTableId,iModuleId,iIgnoreDelete,iActionType,isClearFilter)
    {
        var sReturnVals=null;
        if(iActionType==Constants.IListView_Actions.SEARCH)
        {
            sReturnVals=me.searchHandler(sUrl, objAlpha, isPreferences, isTxtSearch
                , isAllOrNumaric, isLookIn,sAdvParams,bIsNewRecordSort,sSearchFldValue);
            util.toggleElementBackground(sReturnVals[2],true,false);
        }
        else if(iActionType==Constants.IListView_Actions.LAYOUT_CHANGE)
        {
            sReturnVals=me.viewActionHandler(objLink,sUrl,isHomeview);
        }
        else if(iActionType==Constants.IListView_Actions.REFRESH)
        {
            sReturnVals=me.getRefresh(sUrl,isSummaryBar,isClearFilter);

            //sReturnVals[1]=callListviewActions.resHandler;
        }

        /*function resHandler(sResponse)
         {
         listView.arhRefreshHandler(sResponse,isClearFilter);
         }*/

        if(sReturnVals!=null && sReturnVals.length>0)
        {
            if(iActionType!=Constants.IListView_Actions.LAYOUT_CHANGE && parseInt(document.getElementById("isSummaryLayoutExists_"+me.getTableId()).value)>0)
                sReturnVals[0]+="&summaryLayoutId="+me.getSummaryLayoutId();

            con.sendPostRequest(sReturnVals[3], sReturnVals[0], null, sReturnVals[1], false,sReturnVals[2]);
            if(iActionType!=Constants.IListView_Actions.LAYOUT_CHANGE)
                me.getSummaryBar(sReturnVals[0]);
        }

    };

    this.viewActionHandler = function(objView, sUrl,isHomeview,isUsers)
    {
        me.setSplitPaneType();
        me.removeAllTabbedPanes();
//        clFrame.removeAll();
//        clFieldsFilter.resetFilter("custFilter",1);
        this.clCustomDialog=null;//for custom filter dialog should be null
        this.isClearCustomFilter = false;
        me.isClearFilter=false;
        me.sSearchParams="";
        me.sSortParams="";
        this.clearLookInControl();
        var cbView,iReportHandle = 0,iModuleId = 0,iLayoutPrevId,sParams;
        iModuleId = me.getModuleId();
        app.removefromBuffer("selectedIndexes_"+iModuleId);

        if (cbView = document.getElementById("view"))
            me.iLayoutId = cbView.options[cbView.selectedIndex].value;
        me.doEmptyCustFilterParams();

        if (isHomeview)
        {
            me.iRowsPerPage = 10;
            sParams = "shRowsPerPage=" + util.encodeURI(me.iRowsPerPage) + "&isViewChange=true&iLayoutId=" + util.encodeURI(me.iLayoutId) + "&moduleId=" + iModuleId;
            sUrl += "?" + sParams;
            home.setCenterUI(sUrl);
        }
        else
        {
            if(document.getElementById("searchByLayout"))
                me.iSearchByLayout=document.getElementById("searchByLayout").value;
            if(isUsers==undefined && !isUsers)
                listView.disableViewLink(objView.getAttribute("access"));
            iLayoutPrevId = document.getElementById("iLayoutId_1").value;
            iReportHandle = me.getReportHandle();
            var sConfigGrpId= document.getElementById("sConfigGrpId").value;
            me.iRowsPerPage = AdvPaging.getInstance(0,iModuleId,iReportHandle).iRecordsPerPage;
            sParams = "shRowsPerPage=" + util.encodeURI(me.iRowsPerPage) + "&isViewChange=false&iLayoutId=" + util.encodeURI(me.iLayoutId)
                + "&moduleId=" + iModuleId + "&repHandle=" + iReportHandle+"&isViewAction=true";
            sParams+=sConfigGrpId;

            if(me.sEventCallBack!=null && me.sEventCallBack!="") //Condition for MailAll
            {
                var arrParams =eval(me.sEventCallBack)(iModuleId);
                if(arrParams[0].length>0)
                    sUrl = arrParams[0];
                if(arrParams[1]!=undefined)
                    sParams+=arrParams[1];
            }
            else if(me.iUserId>0)//for Lookin
                sParams+= "&userId="+util.encodeURI(me.iUserId);
            //            sParams+=me.sSearchParams;
            //sParams+=me.sSortParams;
            if (iLayoutPrevId == me.iLayoutId)
                return;
            var objTable=null;
            if(parseInt(document.getElementById("iNodataFound").value)>0)
                objTable = document.getElementById("iNodataFound");
            else objTable = document.getElementById("listReportTab_1");
            me.setSummaryLayoutId(0);
            var sReturnVals= new Array();
            sReturnVals[0]=sParams;
            sReturnVals[1]="listView.arhViewActionHandler";
            sReturnVals[2]=objTable.parentNode;
            sReturnVals[3]=sUrl;
            return sReturnVals;

            //con.sendPostRequest(sUrl, sParams, null, "listView.arhViewActionHandler", false,objTable.parentNode);
        }
    };

    this.arhViewActionHandler = function(sResponse)
    {
        if(sResponse!="")
        {
            me.clearListControl();
            //            me.clearFilter();
            me.sCustFilterParams="";
            var objDiv = null;
            objDiv = document.getElementById("filterReport");
            //            else objDiv = document.getElementById("reportData");
            if(objDiv == null)
                objDiv = document.getElementById("tdMultipane1");
            if(objDiv)
                cross.removeChlildren(objDiv);
            objDiv.innerHTML = sResponse;
            if(typeof window["initAllCombos"]=="function")
                initAllCombos=null;
            if (typeof window["removeAllAdvPageInstances"] == "function")
                removeAllAdvPageInstances();
            loadResources(objDiv, util.onScriptsLoad);
            var iReportHandle = listView.getReportHandle();
            AdvPaging.getInstance(0,listView.getModuleId(),iReportHandle).setRecordsPerPage(me.iRowsPerPage);
            var byWindowType = clAppBuffer.getWindowType();
            if(byWindowType == Constants.IMODULE_WINDOW.SPLIT_PANE || byWindowType == Constants.IMODULE_WINDOW.SPLIT_PANE_WITH_TABBED_PANE)
                clSplit.initSrcToIFrame(listView.getTableId(),clSplit.getSelectedRow());
//              clSplit.initSrcToIFrame(listView.getTableId(),me.iRowIndex);
        }
    };

    this.disableViewLink = function(iAccessType)
    {
        if(document.getElementById("iDeleteView"))
        {
            me.sPrevOnclick= document.getElementById("iDeleteView").getAttribute("onclick");
            me.sPrevClass=document.getElementById("iDeleteView").getAttribute("class");
            if(iAccessType!=Constants.IAccessTypes.PUBLIC)
            {
                document.getElementById("iDeleteView").removeAttribute("onclick");
                document.getElementById("iDeleteView").removeAttribute("class");
                document.getElementById("iDeleteView").style.color="#767474";
                document.getElementById("iDeleteView").style.cursor="no-drop";
                document.getElementById("iDeleteView").style.textDecoration="none";
            }
            else
            {
                document.getElementById("iDeleteView").setAttribute("onclick",me.sPrevOnclick);
                document.getElementById("iDeleteView").setAttribute("class",me.sPrevClass );
                document.getElementById("iDeleteView").style.color="";
                document.getElementById("iDeleteView").style.cursor="pointer";
            }
        }
    };

    this.getListViewPage = function (sParams,iViewEventType,sTableId)
    {
        if(clAppBuffer.getWindowType() == Constants.IMODULE_WINDOW.SPLIT_PANE_WITH_TABBED_PANE )
            util.toggleElementBackground(document.getElementById('dvMultipane1'),true,true);
        me.setSplitPaneType();
        if(iViewEventType>-1)
            this.iViewEventType=iViewEventType;
        if(sTableId)
            me.sTableId = sTableId;
        var iTableId = listView.getTableId(sTableId);
        var sUrl,iLayoutId = 0,bReportActionsExist;
        if (document.getElementById("bChkBoxExist_"+iTableId).value>0)
            me.bChkBoxExist = true;//document.getElementById("bChkBoxExist_"+iTableId).value;
        if (document.getElementById("bReportActionsExist_"+iTableId).value>0)
            bReportActionsExist = true;//document.getElementById("bReportActionsExist_"+iTableId).value;
        if (document.getElementById("isPreferences"))
            sUrl = me.sSetUpListViewPageUrl;
        else if (document.getElementById("sCustomPagingURL")!=null)
        {
            sUrl = document.getElementById("sCustomPagingURL").value;
            if(sUrl.indexOf("?")!=-1)
            {
                sParams += "&"+sUrl.substring(sUrl.indexOf("?") + 1);
                sUrl=sUrl.substring(0,sUrl.indexOf("?"));
            }
        }
        else
            sUrl = me.sListViewPageUrl;

        iLayoutId = me.getLayoutId(iTableId);
        var iModuleId = me.getModuleId(iTableId);
        var sValue=null;
        if(document.getElementById("textSearch"))
            sValue=util.encodeURI(util.trim(document.getElementById("textSearch").value));
        me.iRowsPerPage = AdvPaging.getInstance(iTableId).iRecordsPerPage;
        sParams += "&iLayoutId=" + iLayoutId + "&isPaging=true"+"&bChkBoxExist="+util.encodeURI(me.bChkBoxExist)+"&bReportActionsExist="+util.encodeURI(bReportActionsExist)
            +"&iTabId="+util.encodeURI(sTableId.substring(sTableId.indexOf("_")+1))+"&shRowsPerPage=" + util.encodeURI(me.iRowsPerPage)+"&byAction="+util.encodeURI(document.getElementById("byAction").value)+"&textSearch="+sValue;
        if(document.getElementById("sConfigGrpId"))
            sParams+=document.getElementById("sConfigGrpId").value;

        if(iModuleId==Constants.SOLUTIONS)
        {
            sParams+=me.sSortParams;
        }
        sParams+=me.getListConfigParams();

        function resHandler(sResponse)
        {
            listView.arhListViewPage(sResponse,me.sTableId);
        }
        me.removeAllTabbedPanes();

        var objTable = document.getElementById(me.sTableId);
        util.toggleElementBackground(objTable.parentNode,true,false);
        con.sendPostRequest(sUrl, sParams, resHandler, null, true,null,null,false,false);
    };

    this.getListConfigParams=function()
    {
        var sParams="";
        var iTableId=listView.getTableId(me.sTableId);
        var objField=document.getElementById("configActionId_"+iTableId);
        if(objField)
            sParams+="&configActionId="+util.encodeURI(objField.value);

        objField=document.getElementById("prefConfigId_"+iTableId);
        if(objField)
            sParams+="&prefConfigId="+util.encodeURI(objField.value);

        objField=document.getElementById("parentModuleId_"+iTableId);
        if(objField)
            sParams+="&parentModuleId="+util.encodeURI(objField.value);

        objField=document.getElementById("baseModuleId");
        if(objField)
            sParams+="&baseModuleId="+util.encodeURI(objField.value);

        objField=document.getElementById("relModuleId");
        if(objField)
            sParams+="&relModuleId="+util.encodeURI(objField.value);

        objField=document.getElementById("baseLayoutId");
        if(objField)
            sParams+="&baseLayoutId="+util.encodeURI(objField.value);

        objField = document.getElementById("extraIds[0]");
        if(objField)
            sParams+="&extraIds="+util.encodeURI(objField.value);

        return sParams;
    };

    this.arhListViewPage = function(sResponse,sTableId)
    {
        var objDiv,sFnName;
        var iTableId = listView.getTableId(sTableId);
        var objTable = document.getElementById(sTableId);
        util.toggleElementBackground(objTable.parentNode,false);

        objDiv = document.getElementById("listReportDiv_"+iTableId);
        objDiv.innerHTML = sResponse;
        loadResources(objDiv);
        objTable.removeChild(objTable.tBodies[0]);
        var objNewTable;
        for (var i = 0; i < objDiv.childNodes.length; i++)
        {
            if (objDiv.childNodes[i].nodeName == "TABLE")
                objNewTable = objDiv.removeChild(objDiv.childNodes[i]);
        }
        objTable.appendChild(objNewTable.tBodies[0]);

        var containerId=document.getElementById("reportContainer"+iTableId);
        //        var iRowCount=objTable.getRowCount();
        if(containerId.rows[0].cells[0].style.display=="block")//&& objTableId.tBodies[0].rows[0].cells[0].colSpan>1)
        {
            containerId.rows[0].cells[0].style.display="none";
            containerId.rows[1].cells[0].style.display="block";
        }
        //        objTable.replaceChild(objNewTable.tBodies[0], objTable.tBodies[0]);
        if(document.getElementById("sViewEvent"))
        {
            sFnName = document.getElementById("sViewEvent").value;
            if(sFnName!='')
                cross.callFunction(null,eval(sFnName),[this.iViewEventType]);
        }
        if(me.bChkBoxExist)
            listView.setCheckBoxes();

        if(AdvPaging.getInstance(iTableId).getSelectionPageType()==1)
            checkboxcol.selectAll(null,true,me.sTableId,listView.isChecked,"1");

        AdvPaging.getInstance(iTableId).callbackRefreshPage();
        var iWindowType = clAppBuffer.getWindowType();
        if(me.isRefreshRelatedView)
        {
            AdvPaging.getInstance(iTableId).removeAllIds();
            me.isRefreshRelatedView=false;
        }
        else if((iWindowType == Constants.IMODULE_WINDOW.SPLIT_PANE_WITH_TABBED_PANE
            || iWindowType == Constants.IMODULE_WINDOW.SPLIT_PANE)
            && me.getSplitPaneType() == Constants.ISPLIT_PANE_TYPE.LEFT_PANE)
            clSplit.getDetailedView(0); // default 0
//            clSplit.getDetailedView(clSplit.getSelectedRow());

    };

    function isRowAction()// private function
    {
        return listView.isIgnoreRowAction;
    };
    this.setRowAction=function(isIgnore)
    {
        me.isIgnoreRowAction=isIgnore;
    };

    this.getModuleSeqId = function(objLink)
    {
        var objChilds=null,iModseqid=0;
        if(objLink!=null)
            objChilds = cross.getChildren(objLink);
        if(objChilds!=null )
        {
            //            if(objChilds[0]!=null && objChilds[0]!=undefined && objChilds[0].nodeName=="A")TODO: un comment for show master link in new tab
            if(objChilds[0]!=null && objChilds[0]!=undefined && objChilds[0].nodeName=="SPAN" && objChilds[0].getAttribute("modseqid"))
                iModseqid = objChilds[0].getAttribute("modseqid");
            else if(objChilds[1]!=null && objChilds[1]!=undefined)
                iModseqid = objChilds[1].getAttribute("modseqid");
        }
        return iModseqid;
    };

    this.setScrollValue=function()
    {
        if(me.sScrollTop>0)
        {
            var iTableId=me.getTableId(me.sTableId);
            document.getElementById("containerDiv_" + iTableId).scrollTop=me.sScrollTop;
        }
    };

    this.actionHandler = function( sUrl,byAction,objLink,sTableId,iModuleId,iReportHandle,isPreferences,byListviewType,iViewMode)
    {
        me.setSplitPaneType();
        me.removeAllTabbedPanes();
        var sSelectedText=listView.getSelectionText();
        me.isPreferences=isPreferences;
        var iWindowType = clAppBuffer.getWindowType();
        if(clAppBuffer.getSplitPaneType() == Constants.ISPLIT_PANE_TYPE.LEFT_PANE) // && condition for checking is it related view or not
            objLink = cross.getChildren(objLink)[0];
//            objLink = cross.getChildren(cross.getChildren(objLink)[1])[0];

        if(!isRowAction() && (util.trim(sSelectedText).length==0 || byAction==Constants.EDIT_LAYOUT ))//ignore detailed view if user select text for copy
        {
            var isIgnoreURL=false;

            if(sTableId==undefined || sTableId=="")
                sTableId = "listReportTab_1";

            me.sTableId = sTableId;

            var iTableId = listView.getTableId(sTableId);

            if(byAction==Constants.EDIT_LAYOUT || byAction==Constants.DETAILED_LAYOUT)
            {
                var objTable = document.getElementById("containerDiv_"+iTableId);
                me.sScrollTop=objTable.scrollTop;
                //alert(me.sScrollTop)
            }

            var sParams = "", clTable,sTitle="",iTransIds,iModseqid=0;
            iModseqid = me.getModuleSeqId(objLink);
            if(objLink)
                me.iRowIndex = objLink.parentNode.parentNode.rowIndex-1;
            var arrIndexes=new Array();
            var iCellIndex=-1;
            if( iModseqid>0)
            {
                var iIndex = sUrl.indexOf("?");
                iCellIndex=objLink.parentNode.cellIndex;
                var iModuleSeqId=document.getElementById("modSeqId"+iCellIndex+"_"+iTableId).value;
                if(byAction==Constants.DETAILED_LAYOUT && iModuleSeqId==Constants.USERS )
                    return;
                var sModuleParam = "moduleId="+iModuleSeqId;
                sUrl = sUrl.replace(sUrl.substring(iIndex+1,sUrl.indexOf("&")),sModuleParam)
                iIndex = sUrl.indexOf("&");
                sUrl = sUrl.replace(sUrl.substring(iIndex+1,sUrl.lastIndexOf("&")+1),"")
                //                iModseqid = objLink.childNodes[0].getAttribute("modseqid");
                //TODO: commented on 23/03/2022 memeberId changes in Lead/TeleLead
                //sParams ="transId=" + iModseqid+"&calledFrom="+iModuleId+"&";
                sParams ="transId=" + iModseqid;//+"&calledFrom="+iModuleId+"&";
            }
            else
            {
                if(iModuleId==undefined)
                    iModuleId=listView.getModuleId();
                if (byAction != Constants.DETAILED_LAYOUT && ( !isPreferences || (iModuleId==Constants.CATEGORY
                    || iModuleId==Constants.SUBCATEGORY || iModuleId==Constants.ISSUES || iModuleId==Constants.COUNTRIES
                    || iModuleId==Constants.STATE || iModuleId==Constants.CITY )))
                    sParams = "moduleId=" + iModuleId+"&";
            }

            arrIndexes[0]=me.iRowIndex;
            arrIndexes[1]=iCellIndex;
            app.addToBuffer("selectedIndexes_"+iModuleId,arrIndexes);

            if(iReportHandle==undefined)
                iReportHandle = listView.getReportHandle(iTableId);
            //            sParams +="repHandle="+ iReportHandle;

            if(document.getElementById("title"))
                sTitle = document.getElementById("title").value;
            var iLeadStatus = 0;
            if (byAction != Constants.LIST_LAYOUT)
            {
                if(objLink)
                {
                    var iExtraIdsLength =0;
                    clTable = new sTable(sTableId);

                    if(iModseqid<1)
                    {
                        var iColCnt,iExtraHiddenCol=0;
                        iColCnt = clTable.getColCount(me.iRowIndex)-3;//1 for authstatus,1 for empty col and 1 for extraidslength;
                        if(document.getElementById("extraIdsLength_"+iTableId))
                            iExtraIdsLength = parseInt(document.getElementById("extraIdsLength_"+iTableId).value);
                        if(document.getElementById("extraHiddenCol_"+iTableId))
                            iExtraHiddenCol = document.getElementById("extraHiddenCol_"+iTableId).value;
                        var iColIndex = iColCnt - iExtraIdsLength
                        iTransIds = clTable.getValueAt(me.iRowIndex, iColIndex,true,me.iRowIndex);
                        sParams += "&transId=" + util.encodeURI(iTransIds);
                        var sExtraId=null,iSubTypeIdPosition=0;
                        if(iExtraIdsLength>0)
                            for(var j=0; j<iExtraIdsLength;j++)
                            {
                                sExtraId=clTable.getValueAt(me.iRowIndex,((iColIndex)+(j+1)),true,me.iRowIndex);
                                if(listView.isInt(sExtraId))
                                {
                                    if( iModuleId!=Constants.DOCUMENTS )
                                    {
                                        //iSubTypeIdPosition=iExtraIdsLength-3;//ignore extraid's are subtypeId,AssignedTo,bRead
                                        iSubTypeIdPosition=iExtraIdsLength-4;//ignore extraid's are subtypeId,AssignedTo,bRead,iStatus(draft record status)
                                        if(iSubTypeIdPosition>=0 && j==iSubTypeIdPosition)
                                            sParams+="&subTypeId="+util.encodeURI(parseInt(sExtraId));

                                        sParams += "&extraIds=" +util.encodeURI(parseInt(sExtraId));
                                        if(j == 1 && iModuleId==Constants.LEADS)
                                            iLeadStatus = util.encodeURI(parseInt(sExtraId));
                                    }
                                    else
                                    {
                                        iSubTypeIdPosition=iExtraIdsLength-2;
                                        if(iSubTypeIdPosition>0 && j==iSubTypeIdPosition )
                                            sParams+="&subTypeId="+util.encodeURI(parseInt(sExtraId));
                                        sParams += "&extraIds=" +util.encodeURI(parseInt(sExtraId));
                                    }

                                }
                            }
                    }
                }
                else
                {
                    iTransIds = listView.getTransIds(sTableId);
                    var iExtraIds = listView.getAllExtraIds(sTableId);
                    for(var k=0; k<iTransIds.length;k++)
                    {
                        sParams += "&transIds=" + util.encodeURI(iTransIds[k]);
                    }
                    if(iExtraIds!=null &&iExtraIds.length>0)
                        for(var k=0; k<iExtraIds.length;k++)
                        {
                            if(listView.isInt(iExtraIds[k]))
                                sParams += "&extraIds=" +util.encodeURI(parseInt(sExtraId));
                        }
                }

                if (byAction == Constants.EDIT_LAYOUT)    //Edit
                {
                    //isIgnoreURL=true;

                    if(document.getElementById("title")!=null)
                        sParams += "&title="+util.encodeURI(document.getElementById("title").value);
                }
            }

            if(!isPreferences)
            {
                var iLayoutId = 0,cbView ;
                iLayoutId = me.getLayoutId(iTableId);
                sParams += "&iLayoutId=" + iLayoutId;
            }

            me.iRowsPerPage = util.encodeURI(AdvPaging.getInstance().iRecordsPerPage);
            sParams += "&shRowsPerPage=" + me.iRowsPerPage+"&rowIndex="+util.encodeURI(me.iRowIndex)+"&cellIndex="+util.encodeURI(iCellIndex);
            if (sUrl.indexOf("?") == -1)
                sUrl += "?" + sParams;
            else sUrl += "&" + sParams;

            /*if(objLink!=null && iModseqid>0)//TODO:module link in listview open in a new tab
             {
             window.open("crmhome.do?url="+sUrl);
             return;
             }*/
//            util.writeToLog(sParams)
            if(iWindowType == Constants.IMODULE_WINDOW.SPLIT_PANE && document.getElementById("detailImgEnablePrev") == null)
                sUrl += "&sName="+clSplit.getDetailedViewTitle(clTable,me.iRowIndex)+"&isSaveUrl=true";
            if(iModuleId==Constants.LEADS)
            {
                if(iLeadStatus==Constants.LEAD_STATUS_CONVERTED)
                    sUrl += "&isDetailedviewConvrtdLead=false";
                else
                    sUrl += "&isDetailedviewConvrtdLead=true";
            }
            //else
            /*if(clAppBuffer.getWindowType() == Constants.IMODULE_WINDOW.SPLIT_PANE)
             clAppBuffer.setSplitWithTabbedPane(true);*/

            if(clAppBuffer.getSplitPaneType() == Constants.ISPLIT_PANE_TYPE.LEFT_PANE){//me.iRowIndex >= 0 custom  module edit in detailed view
                clSplit.getDetailedView(me.iRowIndex,true);// isRemovePreTab
            }
            else
            {
                var iSrcviewtype=0;
                var arrEvtSrcDetails=new Array();
                if ((byAction == Constants.DETAILED_LAYOUT && iViewMode==Constants.LIST_LAYOUT) || byAction == Constants.EDIT_LAYOUT)
                {
                    sUrl+="&srcViewType="+Constants.LIST_LAYOUT;
                    //iSrcviewtype=Constants.LIST_LAYOUT;
                    arrEvtSrcDetails[0]=Constants.LIST_LAYOUT;
                }
                if(byAction==Constants.EDIT_LAYOUT || byAction==Constants.DETAILED_LAYOUT)
                    arrEvtSrcDetails[1]=listView.setScrollValue;
                /*if(true)
                {
                    var arrActions = new Array();
                    arrActions[0] = MsgHandler.getMsg(MsgConstants.SAVE)+"|clPaymentMethod.onClkSavePaymentMethod";
                    arrActions[1] = MsgHandler.getMsg(MsgConstants.CANCEL);
                    sUrl+="&typeId="+clTable.getValueAt(me.iRowIndex,5);
                    var clDialogBox = new DialogBox("dlgPaymentMethod", sTitle, 0, 0, 620, 450,sUrl, true, null, null, null, arrActions);

                    clDialogBox.setCenter();
                    clDialogBox.setTitle(sTitle);
                    clDialogBox.show();
                }
                else */
                /*if(document.getElementById("configId"))
                {
                    var iConfigId = parseInt(document.getElementById("configId").value);
                    if(iConfigId==1804)
                    {
                        sUrl+="&sPaymentMethodTitle="+clTable.getValueAt(me.iRowIndex,1);
                        sUrl+="&typeId="+clTable.getValueAt(me.iRowIndex,4);
                    }

                }*/
                if(document.getElementById("hfTabIndex")!=null)
                    home.setCenterUI(sUrl,null,isIgnoreURL,false,"clModuleTabbedPane.handleResponse",false,null,false,false,false,arrEvtSrcDetails);
                else
                    home.setCenterUI(sUrl,null,isIgnoreURL,false,null,false,null,false,false,false,arrEvtSrcDetails);
            }

        }
        else
            me.setRowAction(false);
    };

    /*this.resCloseDlg=function(iRowIndex,iTransId)
    {
        getDialogBox("dlgPaymentMethod").hide();
        listView.clearCheckBoxes(0,false);
        listView.refreshListView();
        /!*var clTable,objEnable,objButton,objTransId;
        clTable=new sTable("tblPaymentMethod");
        objEnable=clTable.getElementAt(iRowIndex,2);
        objButton=clTable.getElementAt(iRowIndex,4);
        objTransId=clTable.getElementAt(iRowIndex,5);
        objEnable.setAttribute("checked",true);
        cross.setInnerText(objButton,"Manage");
        objTransId.value=iTransId;*!/

    };*/

    this.deleteHandler = function(objLink,sUrl,sTableId,iModuleId,isPreferences,iIgnoreDelete)
    {
        var sParams = "",sTitle,clTable,iTransIds,iReportHandle=0;
        me.isPreferences = isPreferences;
        if (document.getElementById("title"))
            sTitle = util.encodeURI(document.getElementById("title").value);

        sParams = "title=" + sTitle + "&moduleId=" + util.encodeURI(iModuleId);
        var iTableId = listView.getTableId(sTableId);
        me.sTableId = sTableId;

        if (objLink != null)
        {
            //            if (window.confirm("Are you sure want to delete ?"))
            if (window.confirm(MsgHandler.getMsg(MsgConstants.WANT_TO_DELETE,0,0)))
            {
                var iColIndex = 0,iColCnt = 0;
                var iExtraIdsLength = 0;

                clTable = new sTable(sTableId);
                me.iRowIndex = objLink.parentNode.parentNode.rowIndex - 1;
                iColCnt = clTable.getColCount(me.iRowIndex) - 3;//1 for authstatus,1 for empty col and 1 for extraidslength;
                if (document.getElementById("extraIdsLength_" + iTableId))
                    iExtraIdsLength = parseInt(document.getElementById("extraIdsLength_" + iTableId).value);
                iColIndex = iColCnt - iExtraIdsLength;
                iTransIds = clTable.getValueAt(me.iRowIndex, iColIndex, true, me.iRowIndex);

                if (isPreferences && iTransIds <= iIgnoreDelete)
                {
                    //                    msg.showMessage(0, "Default " + sTitle + " cannot be deleted");
                    sTitle = document.getElementById("title").value;
                    msg.showMessage(0, MsgHandler.getMsg(MsgConstants.CAN_NOT_DELETE_DEFAULT,0,0,sTitle));
                    return false;
                }

                var iExtraHiddenCol = 0;
                if (document.getElementById("extraHiddenCol_" + iTableId))
                    iExtraHiddenCol = document.getElementById("extraHiddenCol_" + iTableId).value;

                sParams += "&transId=" + util.encodeURI(iTransIds);
                //TODO: commented on 23/03/2022 memeberId changes in Lead/TeleLead
                /*var sExtraId=null;
                if(iModuleId==Constants.LEADS || iModuleId==Constants.TELELEADS) {
                    for (var j = 0; j < iExtraIdsLength; j++) {
                        sExtraId = clTable.getValueAt(me.iRowIndex, ((iColIndex) + (j + 1)), true, me.iRowIndex);
                        if (listView.isInt(sExtraId))
                            sParams += "&delRow[" + j + "].extraIds=" + util.encodeURI(parseInt(sExtraId));
                    }
                }*/
            }
            else
                return false;
        }
        else
        {
            if(AdvPaging.getInstance().getSelectionPageType()!=1)
            {
                iTransIds = listView.getTransIds(sTableId);
                if (iTransIds && iTransIds.length > 0)
                {
                    if (window.confirm(MsgHandler.getMsg(MsgConstants.WANT_TO_DELETE, 0, 0)))
                    {
                        var iExtraIds =null;
                        //TODO: commented on 23/03/2022 memeberId changes in Lead/TeleLead
                        //if(iModuleId==Constants.LEADS || iModuleId==Constants.TELELEADS )
                        //    iExtraIds = listView.getAllExtraIds(sTableId);
                        //var iExtraIds = listView.getExtraIds(sTableId);
                        var k = 0;
                        for (; k < iTransIds.length; k++)
                        {
                            sParams += "&transIds=" + util.encodeURI(iTransIds[k]);
                        }
                        //TODO: commented on 23/03/2022 memeberId changes in Lead/TeleLead
                        /*if (iExtraIds != null)
                        {
                            for (k = 0; k < iExtraIds.length; k++)
                            {
                                if(listView.isInt(iExtraIds[k][0]))
                                    sParams += "&delRow[" + k + "].extraIds=" + util.encodeURI(parseInt(iExtraIds[k][0]));
                            }
                        }*/
                    }
                    else
                        return false;
                }
                else
                {
                    //                msg.showMessage(0, "Select atleast one record");
                    msg.showMessage(0, MsgHandler.getMsg(MsgConstants.SELECT_RECORD,0,0));
                    return false;
                }
            }
            else
            {
                sParams+="&repHandle="+listView.getReportHandle()
            }

        }
        app.removefromBuffer("selectedIndexes_"+iModuleId)
        if (sUrl.indexOf("?") == -1)
            sUrl += "?" + sParams;
        else sUrl += "&" + sParams;
        con.sendPostRequest(sUrl, "", null, "listView.arhDeleteHandler", false, null, null, false, true, ACTION_DELETE);
    };

    this.arhDeleteHandler = function(sResponse)
    {
        sResponse = parseInt(sResponse);
        if(sResponse>0)
        {
            AdvPaging.getInstance().nullifyTransIds();
            var iTableId = listView.getTableId(me.sTableId);
            if(document.getElementById("sRefreshDelUrl_"+iTableId)!=null)
            {
                if(parent.listView.getModuleId()  == listView.getModuleId(document.getElementById("iTableId").value)
                    && clAppBuffer.getWindowType() == Constants.IMODULE_WINDOW.SPLIT_PANE_WITH_TABBED_PANE   ){
//                   parent.listView.getRefresh(parent.document.getElementById("sUrl").value);
                    parent.listView.getToggleView(false);
                }
                else
                {
                    util.toggleBackground(false);
                    listView.callRefreshAction(document.getElementById("sRefreshDelUrl_" + iTableId).value);
                }
            }
            else if(me.isPreferences)
                listView.callRefreshAction("common/setup!getPrefListView.do");
            else
                listView.callRefreshAction("module/moduleView!getListView.do");

            if(sResponse==2)//successfully deleted and refresh notifications
                clNotifyMessage.refreshNotifyCount();

            if(me.sDeleteCallBack!=null && me.sDeleteCallBack!="") //call back after deletion
            {
                eval(me.sDeleteCallBack)();
            }

        }
    };

    this.listLayoutHandler = function(sUrl,isDelete)
    {
        var iLayoutId,sParams;
        //        if (me.iLayoutId > 0)
        //            iLayoutId = me.iLayoutId;
        //        else iLayoutId = document.getElementById("iLayoutId").value;
        iLayoutId = me.getLayoutId();
        sParams= "transId=" + iLayoutId;
        //          sUrl += "&transId=" + iLayoutId;
        if(isDelete)
        {
            //            if(window.confirm("Are you sure want to delete?"))
            if(window.confirm(MsgHandler.getMsg(MsgConstants.WANT_TO_DELETE,0,0)))
            {
                if(iLayoutId<=Constants.CUST_LAYOUT)
                {
                    //                    msg.showMessage(0,"Default layout cannot be deleted");
                    msg.showMessage(0,MsgHandler.getMsg(MsgConstants.CAN_NOT_DELETE_DEFAULT,0,0,MsgHandler.getMsg(MsgConstants.LAYOUT,0,0)));
                    return false;
                }
                con.sendPostRequest(sUrl, sParams, null, "listView.arhLayoutHandler", false,null, null, false, true, ACTION_DELETE);
            }
        }
        else
        {
            home.setCenterUI(sUrl+"&"+sParams,null,null,null,null,null,null,false,false);
        }
    };

    this.arhLayoutHandler = function(sResponse)
    {
        if(sResponse>0)
        {
            var iModuleId = me.getModuleId();
            var sUrl = me.sLayoutUrl+"?";
            sUrl+="moduleId="+iModuleId;
            home.setCenterUI(sUrl);
        }
    };

    this.onKeyUpSearch=function(sUrl, objAlpha, isPreferences, isTxtSearch, isAllOrNumaric, isLookIn,evt)
    {
        if (!evt && window.event)
            evt = window.event;
        if (evt.keyCode == 13) // Enter event
        {
            listView.callSearchAction(sUrl, objAlpha, isPreferences, isTxtSearch, isAllOrNumaric, isLookIn)
        }
        cross.cancelBubble(evt);
    };

    this.setAdvSearchParams=function(sAdvParams)
    {
        var sUrl = con.getStruts2Url("module","moduleView","getListView");
        //        this.g_sFilterData=sAdvParams;
        if(util.trim(sAdvParams).length>0)
        {
            util.toggleBackground(true);
            listView.callSearchAction(sUrl, null, false, false, false, false, sAdvParams);
        }
        else
        {
            if (me.clCustomDialog != null)
                me.clCustomDialog.hide();
        }
    };

    this.sSearchAlpha =null;
    this.searchHandler = function(sUrl, objAlpha, isPreferences, isTxtSearch
        , isAllOrNumaric, isLookIn,sAdvParams,bIsNewRecordSort,sSearchFldValue)
    {

//        clFrame.removeAll();
        me.setSplitPaneType();
        me.sSearchParams="";
        //me.isSearchTxt = isLookIn;
        //var bIsSearch=false;
        if(con.getActiveCount()>0)   // to cancel ajax request in case request is in progress already
            return;
        var iReportHandle = 0,iModuleId = 0,iLayoutId,sParams = "",sValue="",iLayoutGroupId=0;

        iReportHandle = me.getReportHandle();
        iModuleId = me.getModuleId();
        iLayoutId = me.getLayoutId();
        app.removefromBuffer("selectedIndexes_"+iModuleId);

        if(document.getElementById("iLayoutGroupId") && document.getElementById("iLayoutGroupId").value>0)
            iLayoutGroupId=util.encodeURI(document.getElementById("iLayoutGroupId").value);
        sParams= "shRowsPerPage=" + util.encodeURI(AdvPaging.getInstance().iRecordsPerPage) + "&iLayoutId=" + iLayoutId + "&moduleId=" + iModuleId+
            "&repHandle=" + iReportHandle+"&isViewChange=false&layoutGroupId="+iLayoutGroupId;

        if(me.sEventCallBack!=null && me.sEventCallBack!="") //Condition for MailAll
        {
            var arrParams =eval(me.sEventCallBack)(iModuleId);
            if(arrParams[0].length>0)
                sUrl = arrParams[0];
            sParams+=arrParams[1];
        }
        if (isPreferences)
        {
            me.sSearchParams = "&configId=" + document.getElementById("configId").value + "&groupId=" + document.getElementById("groupId").value;
            //            sParams += me.sSearchParams;//"&configId=" + document.getElementById("configId").value + "&groupId=" + document.getElementById("groupId").value;
        }
        if (objAlpha )
        {
            me.bIsSearch=true;
            if(bIsNewRecordSort)
                me.sSearchParams+="&bReadSort=true";

            me.clearFilter();
            me.isSearchTxt = true;
            sValue=objAlpha.innerHTML;
            var objAlphaSearch = document.getElementsByClassName("alphasrch");
            for(var i=0;i<objAlphaSearch.length;i++)
            {
                if(objAlphaSearch[i].innerHTML == sValue)
                    util.addClass(objAlphaSearch[i],"selectedAlpha");
                else
                {
                    if(util.hasClass(objAlphaSearch[i],"selectedAlpha"))
                        util.removeClass(objAlphaSearch[i],"selectedAlpha");
                }
            }
            me.sSearchAlpha=sValue;
            me.sSearchParams+="&isAlphaSearch=true";
            if(isAllOrNumaric!=undefined && !isAllOrNumaric)
                me.sSearchParams += "&isNumaric=true";
            else
            {
                if (isAllOrNumaric)
                    me.sSearchParams += "&isAll=true";
                else
                    me.sSearchParams += "&alpha=" + util.encodeURI(sValue);
            }
        }
        else if(isTxtSearch)   //textual search in filter
        {
            var sValue=null;
            me.bIsSearch=true;
            if(bIsNewRecordSort)
                me.sSearchParams+="&bReadSort=true";
            if((sValue=me.getTextSearchData(iModuleId)))
                me.sSearchParams +=sValue;
            else return false;

        }
        else if(sAdvParams)
        {
            me.bIsSearch=true;
            me.sSearchParams+="&"+sAdvParams;
            if(bIsNewRecordSort)
                me.sSearchParams+="&bReadSort=true";

        }
        else if(bIsNewRecordSort)
        {
            me.sSearchParams+="&bReadSort=true";
        }
        else if(!isLookIn)
        {
            me.bIsSearch=true;
            var bReturn = me.validateFilter();
            if(bReturn)
            {
                if(me.sSearchParams.indexOf("isAlphaSearch")==-1)
                    me.sSearchParams += "&isAlphaSearch=true";
                me.sSearchParams += me.getFieldsFilterData();
                /*
                 me.sSearchParams += "&custFilter[0].operator=" + util.encodeURI(getComboInstance("combo_operator").getSelectedId())
                 + "&custFilter[0].value=" +util.encodeURI(sValue)+"&custFilter[0].fieldId="+util.encodeURI(getComboInstance("combo_Fields").getSelectedId())
                 +"&custFilter[0].type=7";
                 */
            }
            else return bReturn;
        }
        else if(sSearchFldValue)  //search-layout search
        {
            me.bIsSearch=true;
            me.bIsLayoutSearch=true;
            me.sSearchParams+="&"+sSearchFldValue;
        }


        if(document.getElementById("categoryId").value>0)
            me.sSearchParams+= "&categoryId="+document.getElementById("categoryId").value;
        if(me.iUserId>0)//for Lookin
        {
            me.bIsSearch=true;
            me.sSearchParams+= "&userId="+util.encodeURI(me.iUserId);
        }
        sParams += me.sSearchParams;
        sParams += me.sSortParams;
        me.sTableId = "listReportTab_1";
        sParams += me.getListConfigParams();

        document.getElementById("dvFilter").style.visibility="visible";//cross.setVisible(document.getElementById("dvFilter"),true);
        var spFilter = document.getElementById("spFilter");
        if(sAdvParams)
            spFilter.innerHTML="<a href='#'  onclick='listView.getCustomFilter(\""+document.getElementById('custFilterUrl').value+"\","+me.getModuleId()+")'>" +
                " <font color='#B31D1D'> Filtered </font> </a>";
        else if(!bIsNewRecordSort && !me.bIsSearch)
        {
            cross.setVisible(document.getElementById("dvFilter"),false);
            document.getElementById("dvFilter").style.visibility="hidden";
            spFilter.innerHTML="";
        }
        else
        {
            cross.setVisible(document.getElementById("dvFilter"),true);
            document.getElementById("dvFilter").style.visibility="visible";
            spFilter.innerHTML="Filtered";
        }
        var objTable;
        if(parseInt(document.getElementById("iNodataFound").value)>0)
            objTable = document.getElementById("iNodataFound");
        else objTable = document.getElementById(me.sTableId);


        if(document.getElementById("sExtendedWhere_1")!=null)
        {
            sParams+="&sExtendedWhere="+document.getElementById("sExtendedWhere_1").value;
        }

        /*   var byListViewType = Constants.IMODULE_WINDOW.DEFAULT;
         if(clAppBuffer.getWindowType() == Constants.IMODULE_WINDOW.SPLIT_PANE)
         byListViewType = clSplit.getListViewType(iModuleId);
         sParams += "&windowType="+byListViewType;*/
        me.removeAllTabbedPanes();
        var sReturnVals= new Array();
        sReturnVals[0]=sParams;
        sReturnVals[1]="listView.arhSearchHandler";
        sReturnVals[2]=objTable.parentNode;
        sReturnVals[3]=sUrl;
        return sReturnVals;
        //con.sendPostRequest(sUrl, sParams, null, "listView.arhSearchHandler", false,objStatusId);
    };

    this.arhSearchHandler = function(sResponse,isRefresh)
    {
        var iListViewHeight = 0;

        var objTable = null;
        if(parseInt(document.getElementById("iNodataFound").value)>0)
            objTable = document.getElementById("iNodataFound");
        else objTable = document.getElementById(me.sTableId);
        if(objTable)
            util.toggleElementBackground(objTable.parentNode,false);
        if(document.getElementById("listviewTabHeight"))
            iListViewHeight = document.getElementById("listviewTabHeight").value;
        var ialphaFilterht = 0,objFilterLayout = null;
        if(document.getElementById("alphaFilter"))
            ialphaFilterht = document.getElementById("alphaFilter").offsetHeight;
        var iTableHeight=iListViewHeight-ialphaFilterht;
        if(document.getElementById("bLayoutFilterExist"))
            objFilterLayout = document.getElementById("bLayoutFilterExist").value;
        /*var ialphaFilterht=document.getElementById("alphaFilter").offsetHeight;  // commented by nagababu
         var iTableHeight=iListViewHeight-ialphaFilterht;
         var objFilterLayout=document.getElementById("bLayoutFilterExist").value;*/
        //if(parent.getDialogBox("rcrds"))
        //    parent.getDialogBox("rcrds").hide();

        var objDiv;
        if(sResponse!=null && sResponse!="")
        {
            if(me.isSearchTxt)
                me.clearListControl();
            var iTableId=me.getTableId(me.sTableId);
            if(iTableId>1)
                objDiv = document.getElementById("reportData_"+iTableId);
            if(objDiv==null)
                objDiv = document.getElementById("reportData");
            if(objDiv == null)
                objDiv = document.getElementById("tdMultipane1");
            if(objDiv == null)
                objDiv = document.getElementById("containerDiv_"+iTableId);

            cross.removeChlildren(objDiv);
            objDiv.innerHTML = sResponse;
            if(typeof window["initAllCombos"]=="function")
                initAllCombos=null;
            if (typeof window["removeAllAdvPageInstances"] == "function")
                removeAllAdvPageInstances();
            loadResources(objDiv, util.onScriptsLoad);
            if (me.clCustomDialog != null)
                me.clCustomDialog.hide();
            if(document.getElementById("dvMessage")!=null)
                msg.hideMsgDlg("dvMessage",false,undefined,event);
            me.isSearchTxt = false;
            me.sReportId=null;

            if(objFilterLayout) {
                if(iTableHeight>0)
                    document.getElementById("containerDiv_" + iTableId).style.height = iTableHeight;
            }
            else
            {
                document.getElementById("containerDiv_"+iTableId).style.transition='height 1.5s';
                document.getElementById("containerDiv_"+iTableId).style.height=iTableHeight;
            }
            var byWindowType = clAppBuffer.getWindowType();
            var iActionId = clAppBuffer.getActionId();
            /*if((byWindowType == Constants.IMODULE_WINDOW.SPLIT_PANE || byWindowType == Constants.IMODULE_WINDOW.SPLIT_PANE_WITH_TABBED_PANE)
             && iActionId != Constants.IActions.SAVE
             && iActionId != Constants.IActions.SAVE_AND_NEW
             && iActionId != Constants.IActions.CANCEL
             && iActionId != -1){
             clSplit.initSrcToIFrame(listView.getTableId(),me.iRowIndex);
             }
             else
             clAppBuffer.setActionId(0);*/
            me.setNewRecordCnt();

            if((byWindowType == Constants.IMODULE_WINDOW.SPLIT_PANE
                || byWindowType == Constants.IMODULE_WINDOW.SPLIT_PANE_WITH_TABBED_PANE)
                && me.getSplitPaneType() == Constants.ISPLIT_PANE_TYPE.LEFT_PANE)
            {
//                parent.clSplit.initSrcToIFrame(listView.getTableId(),me.iRowIndex);
                clSplit.initSrcToIFrame(listView.getTableId(),isRefresh ? clSplit.getSelectedRow():0); // by default 0
//                clSplit.initSrcToIFrame(listView.getTableId(),clSplit.getSelectedRow());
                var sTableId = "listReportTab_"+iTableId;
                var clTable = new sTable(sTableId);
//            var objRow = clTable.getRow(clSplit.getSelectedRow());
                var objRow = clTable.getRow(me.iRowIndex);
                objRow.style.background = "";
                util.addClass(objRow,"sSelectedRow");
            }
            if(me.fnListviewActionCallBack != null)
                eval(me.fnListviewActionCallBack)(Constants.IListView_Actions.SEARCH);
        }
        //me.isSearchOnProcess=true;
    };

    this.getFieldsFilterData=function()
    {
        var sValue;
        if(getComboInstance("value"))
        {
            var objFldCombo = getComboInstance("combo_Fields");
            var iDataTypeId = objFldCombo.getSelectedAttr("dtype");

            if(iDataTypeId == Constants.DATATYPE_STRINGLIST)//iDataTypeId == Constants.DATATYPE_NUMBERLIST ||
                sValue = getComboInstance("value").getSelectedItem();
            else sValue = getComboInstance("value").getSelectedId();
        }
        else if(document.getElementById("dDate") && document.getElementById("sDate").style.display=="block")
            sValue = document.getElementById("dDate").value;
        else
            sValue = document.getElementById("value").value;
        var iOperator = util.encodeURI(getComboInstance("combo_operator").getSelectedId());
        if(util.trim(sValue).length>0)
            return  "&custFilter[0].operator=" + iOperator
                + "&custFilter[0].value=" +util.encodeURI(sValue)+"&custFilter[0].fieldId="+util.encodeURI(getComboInstance("combo_Fields").getSelectedId())
                +"&custFilter[0].type=7";
        else if((iOperator==Constants.IOPERATOR_ISBLANK || iOperator==Constants.IOPERATOR_ISNOTBLANK))
            return "&custFilter[0].operator=" + util.encodeURI(getComboInstance("combo_operator").getSelectedId())
                + "&custFilter[0].fieldId="+util.encodeURI(getComboInstance("combo_Fields").getSelectedId())+"&custFilter[0].type=7";

        return "";
    };

    this.getTextSearchData=function(iModuleId)
    {
        var sParam=null;
        me.clearFilter();
        var sValue=util.trim(document.getElementById("textSearch").value);
        /*if(sValue.indexOf("$")!=-1)
            sParam= "&globalSearch=" + sValue.substring(sValue.indexOf("$")+1);
        else if(sValue.indexOf("#")!=-1)
            sParam= "&tagSearch=" + sValue.substring(sValue.indexOf("#")+1);
        else*/
        if(sValue.length>0)
            sParam= "&textSearch=" + util.encodeURI(sValue);
        else
        {
            msg.showMessage(0,MsgHandler.getMsg(MsgConstants.REQUIRED,0,0,MsgHandler.getMsg(MsgConstants.SEARCH_TEXT,0,0)));
            document.getElementById("textSearch").focus();
            return false;
        }
        if(iModuleId==Constants.SOLUTIONS && document.getElementById("topicId"))
        {
            if(util.trim(sParam).length>0)
                sParam+="&topicId="+util.encodeURI(document.getElementById("topicId").value);
            else sParam="&topicId="+util.encodeURI(document.getElementById("topicId").value);
        }
        return sParam;
        //sParams+="&topicId="+util.encodeURI(document.getElementById("topicId").value);
    };

    this.validateFilter = function()
    {
        var sValue="";
        if(document.getElementById("sDate") && document.getElementById("sDate").style.display=="block")
            sValue=document.getElementById("dDate").value;
        else sValue=document.getElementById("value").value;
        //if(util.trim(document.getElementById("value").value).length==0)

        var iOperator=getComboInstance("combo_operator").getSelectedId();
        if(getComboInstance("combo_Fields").getSelectedId()==0 || getComboInstance("combo_Fields").getSelectedId()==-1) // Alias fieldIds from -101
        {
            //            msg.showMessage(0,"Select a field ");
            msg.showMessage(0,MsgHandler.getMsg(MsgConstants.SELECT_FIELD,0,0));
            getComboInstance("combo_Fields").setFocus();
            return false;
        }
        else if(iOperator<0)
        {
            //            msg.showMessage(0,"Select a operator ");
            msg.showMessage(0,MsgHandler.getMsg(MsgConstants.SELECT_OPERATOR,0,0));
            getComboInstance("combo_operator").setFocus();
            return false;
        }
        else if(util.trim(sValue).length==0 && (iOperator!=Constants.IOPERATOR_ISBLANK && iOperator!=Constants.IOPERATOR_ISNOTBLANK))
        {
            //            msg.showMessage(0,"Search text is required");
            msg.showMessage(0,MsgHandler.getMsg(MsgConstants.REQUIRED,0,0,MsgHandler.getMsg(MsgConstants.SEARCH_TEXT,0,0)));
            document.getElementById("value").focus();
            return false;
        }
        return true;
    };

    this.clearFilter = function()
    {
        if(getComboInstance("combo_Fields"))
            getComboInstance("combo_Fields").setSelectedIndex(-1);
        if(getComboInstance("combo_operator"))
            getComboInstance("combo_operator").setSelectedIndex(-1);
        if(getComboInstance("value"))
        {
            UnInstallAC(document.getElementById("value"));
        }
        else if(document.getElementById("dDate") )
            document.getElementById("dDate").value="";
        else
            (document.getElementById("value")?document.getElementById("value").value = "":"");
    };

    this.saveListColWidth = function(objTd)
    {
        var iTableId = listView.getTableId(objTd.parentNode.parentNode.parentNode.id);
        var iLayoutId = me.getSummaryLayoutId();
        iLayoutId = (iLayoutId > 0 ? iLayoutId : me.getLayoutId());
        if(iLayoutId>0) {
            var iWidth = 0, iFieldId = 0, iModuleId, sParams;
            iModuleId = me.getModuleId();
            iWidth = parseInt(objTd.width);//objTd.offsetWidth;
            if (iTableId != 1)        //For related layout
                iModuleId = iTableId;
            if (document.getElementById("FieldId" + objTd.cellIndex + "_" + iTableId))
            {
                iFieldId = document.getElementById("FieldId" + objTd.cellIndex + "_" + iTableId).value;
                sParams = "iWidth=" + util.encodeURI(iWidth) + "&iFieldId=" + util.encodeURI(iFieldId) + "&moduleId=" + iModuleId + "&iLayoutId=" + iLayoutId;
                var sUrl = con.getStruts2Url("module", "moduleView", "saveListColWidth", null);//me.sColWidthUrl;
                con.sendPostRequest(sUrl, sParams, null, null, false);
            }
        }
    };

    this.eventHandler = function(handler)
    {
        if (handler.indexOf(".do") == -1)
        {
            var sFnName,sParams = "";
            if (handler.indexOf('(') != -1)
            {
                sFnName = handler.substring(0, handler.indexOf('('));
                sParams = handler.substring(handler.indexOf('(') + 1, handler.lastIndexOf(')'));
            }
            else
                sFnName = handler;
            var objFn = eval(sFnName);
            if (sParams != "")
            {
                objFn.apply(null, eval(sParams));
            }
            else objFn.apply(null, []);
        }
        else
            home.setCenterUI(handler);
    };

    this.customize = function(sUrl)
    {
        if(document.getElementById("viewmode").value!=Constants.DETAILED_LAYOUT)
            sUrl+="&transId="+util.encodeURI(document.getElementById("transId").value);
        else sUrl+="&viewmode="+util.encodeURI(document.getElementById("viewmode").value);
        home.setCenterUI(sUrl,null,false);
    };

    this.getTransId = function(sTableId)
    {
        var iTransId = 0,iColIndex,iHiddenColCnt,iColCnt,iExtraIdsLength=0,clTable,iRowIndex,iRowCnt,tdChk,objChkBox,iExtraHiddenCol=0,iColCurrentRow=0;
        if(sTableId==undefined || sTableId=="")
            sTableId = "listReportTab_1";
        clTable = new sTable(sTableId);
        var iTableId = listView.getTableId(sTableId);
        iRowCnt = clTable.getRowCount();
        if(iRowCnt>1)
            iColCurrentRow=1;
        if(document.getElementById("extraIdsLength_"+iTableId)!=null)
            iExtraIdsLength = document.getElementById("extraIdsLength_"+iTableId).value;
        iColCnt = clTable.getColCount(iColCurrentRow) - 3;//1 for authstatus,1 for empty col and 1 for extraidslength;
        //iHiddenColCnt = parseInt(document.getElementById("hiddenColCnt_"+iTableId).value);TODO: Commented on 18-04-2017,right no no usage of hidden cols
        if(document.getElementById("extraHiddenCol_"+iTableId))
            iExtraHiddenCol = document.getElementById("extraHiddenCol_"+iTableId).value;

        iColIndex = parseInt(iColCnt - iExtraIdsLength);//iHiddenColCnt-iExtraHiddenCol);
        for (var i = 0; i < iRowCnt; i++)
        {
            tdChk = clTable.getElementAt(i,0).parentNode;
            objChkBox = cross.getFirstElement(tdChk.childNodes);
            if(objChkBox.checked)
            {
                iRowIndex = objChkBox.parentNode.parentNode.parentNode.rowIndex-1;
                me.iRowIndex=iRowIndex;
                iTransId = clTable.getValueAt(iRowIndex, iColIndex,true,iColCurrentRow);
            }
        }

        if(iTransId==null)
            return 0;

        return iTransId;
    };

    this.getTransIds = function(sTableId)
    {
        var iTableId =0 ;
        if(sTableId!=undefined && sTableId.indexOf("_")>-1)
            iTableId = sTableId.substring(sTableId.indexOf("_")+1);
        else iTableId=1;
        if(document.getElementById("bAdvPagingExist_"+iTableId) && document.getElementById("bAdvPagingExist_"+iTableId).value>0)
            return AdvPaging.getInstance(iTableId).getTransIds();
        else return listView.getSelTransIds(sTableId);
    };


    /**
     * getting multiple page selected extraIds
     * @param sTableId
     */
    this.getAllExtraIds = function(sTableId)
    {
        var iTableId =0 ;
        if(sTableId!=undefined && sTableId.indexOf("_")>-1)
            iTableId = sTableId.substring(sTableId.indexOf("_")+1);
        else iTableId=1;
        if(document.getElementById("bAdvPagingExist_"+iTableId) && document.getElementById("bAdvPagingExist_"+iTableId).value>0)
            return AdvPaging.getInstance(iTableId).getExtraIds();
        else return listView.getExtraIds(sTableId);

    };

    this.getExtraIds = function(sTableId,isIgnoreMultiExtraIds)
    {
        var iColIndex=0,iHiddenColCnt=0,iColCnt=0,iExtraIdsLength=0,clTable,iRowIndex=0,iRowCnt=0,tdChk,objChkBox,iCheckedCnt=0,iExtraHiddenCol=0,iColCurrentRow=0;
        var iTransIds = null;
        var iExtraIds = new Array();
        if(sTableId==undefined || sTableId=="")
            sTableId = "listReportTab_1";
        clTable = new sTable(sTableId);
        var iTableId = listView.getTableId(sTableId);
        iRowCnt = clTable.getRowCount();
        if(iRowCnt>1)
            iColCurrentRow=1;
        if(document.getElementById("extraIdsLength_"+iTableId)!=null)
            iExtraIdsLength = document.getElementById("extraIdsLength_"+iTableId).value;
        //iHiddenColCnt = parseInt(document.getElementById("hiddenColCnt_"+iTableId).value);TODO: Commented on 18-04-2017,right now no usage of hidden cols
        if(document.getElementById("extraHiddenCol_"+iTableId))
            iExtraHiddenCol = document.getElementById("extraHiddenCol_"+iTableId).value;

        iColCnt = clTable.getColCount(iColCurrentRow)-2 ;//1 for authstatus and 1 for extraidslength;
        iColIndex = parseInt(iColCnt - iExtraIdsLength);//iHiddenColCnt-iExtraHiddenCol);
        if(isIgnoreMultiExtraIds && iExtraIdsLength>1)//ignore the multiple extra ids
            iExtraIdsLength=1;
        if(iExtraIdsLength>0)
            for (var i = 0; i < iRowCnt; i++)
            {
                tdChk = clTable.getElementAt(i,0).parentNode;
                objChkBox = cross.getFirstElement(tdChk.childNodes);
                if(objChkBox.checked)
                {
                    iRowIndex = objChkBox.parentNode.parentNode.parentNode.rowIndex-1;
                    iTransIds = new Array();
                    for(var j=0; j<iExtraIdsLength;j++)
                    {
                        iTransIds[j] = clTable.getValueAt(iRowIndex, (iColIndex+j),true,iRowIndex);
                    }
                    iExtraIds[iCheckedCnt]=iTransIds;
                    iCheckedCnt++;
                }
            }
        return iExtraIds.length>0?iExtraIds:null;
    };

    this.getSelTransIds = function(sTableId)
    {
        var iColIndex,iHiddenColCnt,iColCnt,iExtraIdsLength=0,clTable,iRowIndex,iRowCnt,tdChk,objChkBox,iExtraHiddenCol=0,iColCurrentRow=0;
        var iTransIds = new Array();
        if(sTableId==undefined || sTableId=="")
            sTableId = "listReportTab_1";
        clTable = new sTable(sTableId);
        var iTableId = listView.getTableId(sTableId);
        iRowCnt = clTable.getRowCount();
        if(iRowCnt>1)
            iColCurrentRow=1;
        if(document.getElementById("extraIdsLength_"+iTableId)!=null)
            iExtraIdsLength = document.getElementById("extraIdsLength_"+iTableId).value;
        iColCnt = clTable.getColCount(iColCurrentRow) - 3;//1 for authstatus,1 for empty col and 1 for extraidslength;
        //iHiddenColCnt = parseInt(document.getElementById("hiddenColCnt_"+iTableId).value);TODO: Commented on 18-04-2017,right no no usage of hidden cols
        if(document.getElementById("extraHiddenCol_"+iTableId))
            iExtraHiddenCol = document.getElementById("extraHiddenCol_"+iTableId).value;

        iColIndex = parseInt(iColCnt - iExtraIdsLength);//iHiddenColCnt-iExtraHiddenCol);
        for (var i = 0,j=0; i < iRowCnt; i++)
        {
            tdChk = clTable.getElementAt(i,0).parentNode;
            objChkBox = cross.getFirstElement(tdChk.childNodes);
            if(objChkBox.checked)
            {
                iRowIndex = objChkBox.parentNode.parentNode.parentNode.rowIndex-1;
                me.iRowIndex=iRowIndex;
                iTransIds[j++] = clTable.getValueAt(iRowIndex, iColIndex,true,iColCurrentRow);
            }
        }

        return iTransIds;
    };

    this.getSelectedTransId = function(sTableId,iRowIndex,objEditLink)
    {
        var iRowCnt,clTable,iColCnt,iColIndex,iTransId,iHiddenColCnt=0,iExtraIdsLength=0,iExtraHiddenCol=0,iColCurrentRow=0;

        if(sTableId==undefined || sTableId=="")
            sTableId = "listReportTab_1";
        clTable = new sTable(sTableId);
        var iTableId = listView.getTableId(sTableId);
        iRowCnt = clTable.getRowCount();
        if(iRowCnt>1)
            iColCurrentRow=1;
        if(document.getElementById("extraHiddenCol_"+iTableId))
            iExtraHiddenCol = document.getElementById("extraHiddenCol_"+iTableId).value;
        //iHiddenColCnt = parseInt(document.getElementById("hiddenColCnt_"+iTableId).value);TODO: Commented on 18-04-2017,right no no usage of hidden cols
        if(document.getElementById("extraIdsLength_"+iTableId))
            iExtraIdsLength = document.getElementById("extraIdsLength_"+iTableId).value;
        iColCnt = clTable.getColCount(iColCurrentRow)-3 ;//1 for authstatus,1 for empty col and 1 for extraidslength;
        //iColIndex = parseInt(iColCnt - iHiddenColCnt-iExtraIdsLength);    //iHiddenColCnt-
        iColIndex = parseInt(iColCnt - iExtraIdsLength);    //iHiddenColCnt-
        if(objEditLink)
        {
            iRowIndex = objEditLink.parentNode.parentNode.rowIndex-1;
        }
        else if(iRowIndex==undefined )
            iRowIndex = clTable.getCurrentRow();

        me.iRowIndex=iRowIndex;
        iTransId = clTable.getValueAt(iRowIndex, (iColIndex),true,iColCurrentRow);
        return iTransId;
    };

    this.getSelectedExtraId = function(sTableId,iRowIndex,objEditLink,isIgnoreMultiExtraIds)
    {
        var clTable,iColCnt,iColIndex,iExtraIds,iHiddenColCnt=0,iExtraIdsLength=0,iExtraHiddenCol=0,iColCurrentRow=0,iRowCnt;
        if(sTableId==undefined || sTableId=="")
            sTableId = "listReportTab_1";
        clTable = new sTable(sTableId);
        var iTableId = listView.getTableId(sTableId);

        iRowCnt = clTable.getRowCount();
        if(iRowCnt>1)
            iColCurrentRow=1;

        //iHiddenColCnt = parseInt(document.getElementById("hiddenColCnt_"+iTableId).value);TODO: Commented on 18-04-2017,right no no usage of hidden cols
        if(document.getElementById("extraIdsLength_"+iTableId))
            iExtraIdsLength = document.getElementById("extraIdsLength_"+iTableId).value;
        if(document.getElementById("extraHiddenCol_"+iTableId))
            iExtraHiddenCol = document.getElementById("extraHiddenCol_"+iTableId).value;

        iColCnt = clTable.getColCount(iColCurrentRow)-2 ;//1 for authstatus and 1 for extraidslength;
        //        iColIndex = parseInt(iColCnt - iHiddenColCnt-iExtraHiddenCol);
        iColIndex = parseInt(iColCnt - iExtraIdsLength);
        iExtraIds = new Array();
        if(objEditLink || iRowIndex!=undefined)
        {
            if(objEditLink)
                iRowIndex = objEditLink.parentNode.parentNode.rowIndex-1;
            if(isIgnoreMultiExtraIds && iExtraIdsLength>1)//ignore the multiple extra ids
                iExtraIdsLength=1;
            for(var j=0; j<iExtraIdsLength;j++)
            {
                iExtraIds[j] = clTable.getValueAt(iRowIndex, (iColIndex+j),true,iColCurrentRow);
            }
        }
        else if(iRowIndex==undefined )
        {
            //iRowIndex = clTable.getCurrentRow();
            iExtraIds=AdvPaging.getInstance(iTableId).getExtraIds();
            if(iExtraIds.length>0)
                iExtraIds=iExtraIds[0];
            //alert(iExtraIds)
        }
        return iExtraIds;
    };

    this.getReportHandle = function(iTableId)
    {
        var iReportHandle=0;
        if(iTableId==undefined || iTableId==0 )
            iTableId=1;
        if(document.getElementById("iReportHandle_"+iTableId))
            iReportHandle = util.encodeURI(document.getElementById("iReportHandle_"+iTableId).value);
        if((iReportHandle==undefined || iReportHandle<=0) && document.getElementById("bAdvPagingExist_"+iTableId)!=null && document.getElementById("bAdvPagingExist_"+iTableId).value>0)
            iReportHandle = util.encodeURI(AdvPaging.getInstance(iTableId).getReportHandle());
        return iReportHandle;
    };

    this.getModuleId = function(iTableId)
    {
        var iModuleId=0;
        if(iTableId==undefined || iTableId==0)
            iTableId=1;
        if(document.getElementById("iModuleId_"+iTableId))
            iModuleId = util.encodeURI(document.getElementById("iModuleId_"+iTableId).value);

        return iModuleId;
    };

    this.getConfigId = function()
    {
        var iConfigId=0;
        if(document.getElementById("configId"))
            iConfigId= document.getElementById("configId").value;

        return iConfigId;
    };

    this.getConfigGroupId = function()
    {
        var iGroupId=0;
        if(document.getElementById("groupId"))
            iGroupId= document.getElementById("groupId").value;

        return iGroupId;
    };

    /**
     * This function is used for UnCheck the checked checkBoxes where TransIds are null  or clear checkboxes
     */
    this.clearCheckBoxes = function(iModuleId , isValidate)
    {
        var iextraIdsLength,clTable,iRowIndex,iRowCnt,tdChk,objChkBox;
        clTable = new sTable("listReportTab_1");
        var iTableId = listView.getTableId("listReportTab_1");
        iRowCnt = clTable.getRowCount();
        for (var i = 0; i < iRowCnt; i++)
        {
            tdChk = clTable.getElementAt(i,0).parentNode;
            objChkBox = cross.getFirstElement(tdChk.childNodes);
            if(!isValidate)
            {
                objChkBox.checked = false;
                AdvPaging.getInstance().removeAllIds();
            }
            else
            {
                if(objChkBox.checked)
                {
                    iRowIndex = objChkBox.parentNode.parentNode.rowIndex;
                    //TODO: commented on 23/03/2022 memeberId changes in Lead/TeleLead
                    /*if(iModuleId == Constants.TELELEADS)
                    {
                        iextraIdsLength = document.getElementById("extraIdsLength_"+iTableId).value;

                        for(var j=0; j<iextraIdsLength;j++)                         //todo: need to check for multiple extraIds
                        {
                            var iTransId = document.getElementById("iExtraId"+(iRowIndex-1)+j).innerHTML;
                            if(iTransId==null || iTransId=="")
                                objChkBox.checked = false;
                        }
                    }
                    else*/
                    {
                        var iTransId = document.getElementById("iTransId"+(iRowIndex-1)).innerHTML;
                        if(iTransId==null || iTransId=="")
                            objChkBox.checked = false;
                    }
                    AdvPaging.getInstance().nullifyTransIds();
                }
            }
        }
    };


    this.getTreeView = function(sUrl)
    {
        home.setCenterUI(sUrl,null,null,true,null,false,null,false,true);
    };

    this.arhTreeView = function(sResponse)
    {
        var objDiv = document.getElementById("reportData");
        if(objDiv)
            cross.removeChlildren(objDiv);
        objDiv.innerHTML = sResponse;
        if(typeof window["initAllCombos"]=="function")
            initAllCombos=null;
        loadResources(objDiv, util.onScriptsLoad);
    };

    this.getRefresh = function(sUrl,isSummaryBar,isClearFilter)
    {
        if(clAppBuffer.getWindowType() == Constants.IMODULE_WINDOW.SPLIT_PANE_WITH_TABBED_PANE){
            me.removeAllTabbedPanes();
            me.setSplitPaneType();
        }
        /*if(!isClearFilter)
         clAppBuffer.setActionId(-1); // donot open new tab while refreshing listview*/
        //        me.sSearchParams="";
        /*if(clAppBuffer.getWindowType() == Constants.IMODULE_WINDOW.SPLIT_PANE_WITH_TABBED_PANE){
         clFrame.DeleteFrameLength();
         clFrame.removeAll();
         }*/
        if(sUrl==undefined || sUrl==null)
            sUrl = document.getElementById("sUrl").value;
        if(con.getActiveCount()>0)   // to cancel ajax request in case request is in progress already
            return;
        if(me.sTableId==undefined || me.sTableId=="")
            me.sTableId = "listReportTab_1";


        var iTableId = listView.getTableId(me.sTableId);
        var iReportHandle,iLayoutId,sParams,iModuleId,iLayoutGroupId= 0,iSearchType=0;
        iModuleId = me.getModuleId(iTableId);
        iLayoutId = me.getLayoutId(iTableId);


        iReportHandle = me.getReportHandle(iTableId);
        me.iRowsPerPage = util.encodeURI(AdvPaging.getInstance().iRecordsPerPage);

        if(document.getElementById("searchType"))
            iSearchType=document.getElementById("searchType").value;
        if(document.getElementById("iLayoutGroupId") && document.getElementById("iLayoutGroupId").value>0 && (iSearchType != Constants.IListviewFilters.ADVANCE_SEARCH || isClearFilter))
            iLayoutGroupId=util.encodeURI(document.getElementById("iLayoutGroupId").value);
        sParams = "shRowsPerPage=" + me.iRowsPerPage + "&iLayoutId=" + iLayoutId + "&moduleId=" + iModuleId + "&repHandle=" + iReportHandle
            +"&isViewChange=false&layoutGroupId="+iLayoutGroupId+"&isClearFilter="+(isClearFilter?isClearFilter:false);
        /*if(document.getElementById("configActionId_"+iTableId))
         sParams+="&configActionId="+document.getElementById("configActionId_"+iTableId).value;*/
        var iSummaryLayoutId = me.getSummaryLayoutId();
        if(iSummaryLayoutId>0)
            sParams += "&summaryLayoutId=" + iSummaryLayoutId;
        sParams+=me.getListConfigParams();

        if(me.isPreferences)
        {
            var iConfigId,iConfGrpId;
            iConfigId=me.getConfigId();
            iConfGrpId=me.getConfigGroupId();
            sParams+="&configId="+iConfigId+"&groupId="+iConfGrpId;
        }
        if(me.sEventCallBack!=null && me.sEventCallBack!="") //Condition for MailAll
        {
            var arrParams =eval(me.sEventCallBack)(iModuleId);
            if(arrParams[0].length>0)
                sUrl = arrParams[0];
            sParams+=arrParams[1]+"&isRefresh=true";
        }
        if(document.getElementById("categoryId") && document.getElementById("categoryId").value>0)
            me.sSearchParams+= "&categoryId="+document.getElementById("categoryId").value;

        sParams+=me.sSearchParams;
        sParams+=me.sSortParams;
        var sColParams="";
        if(util.trim(me.sSortParams).length<=0)
        {
            if(document.getElementById("iSortIndex"+iTableId)!=null)
            {
                //sColParams+="&colIndex="+document.getElementById("iSortIndex"+iTableId).value;
                if (document.getElementById("bChkBoxExist_"+iTableId).value>0)
                    sColParams+="&bChkBoxExist="+util.encodeURI(true);
                if (document.getElementById("bReportActionsExist_"+iTableId).value>0)
                    sColParams+="&bReportActionsExist="+util.encodeURI(true);//document.getElementById("bReportActionsExist_"+iTableId).value;

            }
            //if(document.getElementById("iSortOrder"+iTableId)!=null)
            //{
            //sColParams+="&sortOrder="+document.getElementById("iSortOrder"+iTableId).value;
            //}

        }
        //var iLayoutFilter=-1;
        //if(document.getElementById("bLayoutFilterExist"))
        //    iLayoutFilter=document.getElementById("bLayoutFilterExist").value;
        if((util.trim(me.sSearchParams).length==0) && !me.isClearFilter)
        {
            if(iSearchType == Constants.IListviewFilters.LAYOUT_SEARCH)
                sParams += "&" + clSearch.getSearchInputData();
            else if (iSearchType == Constants.IListviewFilters.FIELD_SEARCH)
                sParams += me.getFieldsFilterData();
            else if (iSearchType == Constants.IListviewFilters.TEXT_SEARCH)
                sParams += me.getTextSearchData(me.getModuleId());
            else if (iSearchType == Constants.IListviewFilters.ALPHA_SEARCH)
            {
                sParams +="&isAlphaSearch=true";
                sParams  += "&alpha=" + util.encodeURI(document.getElementById("alphaVal").value);
            }
            else if (iSearchType == Constants.IListviewFilters.NUMARIC_SEARCH)
            {
                sParams +="&isAlphaSearch=true";
                sParams +="&isNumaric=true";
            }
            else if (iSearchType == Constants.IListviewFilters.LOOKIN_SEARCH && me.iUserId>0)
            {
                sParams+= "&userId="+util.encodeURI(me.iUserId);
            }
        }

        var objTable = null;
        if(parseInt(document.getElementById("iNodataFound").value)>0)
            objTable = document.getElementById("iNodataFound");
        else objTable = document.getElementById(me.sTableId);
        util.toggleElementBackground(objTable.parentNode,true,false);
        //        var objTable = document.getElementById(me.sTableId);
        /*var byListViewType = Constants.IMODULE_WINDOW.DEFAULT;
         if(app.getWindowType() == Constants.IMODULE_WINDOW.SPLIT_PANE)
         byListViewType = clSplit.getListViewType(iModuleId);
         sParams +="&windowType="+byListViewType;*/

        /* if(typeof(clSplit) == 'object'
         && byListViewType == Constants.ILIST_VIEWS.SNAP_VIEW)
         clSplit.initSrcToIFrame(listView.getTableId(),me.iRowIndex);
         else*/
        //function resHandler(sResponse)
        //{
        //    listView.arhRefreshHandler(sResponse,isClearFilter);
        //}
        //con.sendPostRequest(sUrl, sParams, null, resHandler, false,objTable.parentNode);
        if(isSummaryBar)
        {
            var sReturnVals = new Array();
            sReturnVals[0] = sParams+sColParams;
            sReturnVals[1] = "listView.arhRefreshHandler";
            sReturnVals[2] = objTable.parentNode;
            sReturnVals[3]=sUrl;
            return sReturnVals;
        }
        else con.sendPostRequest(sUrl, sParams, null, "listView.arhRefreshHandler", false,objTable.parentNode);
    };

    this.arhRefreshHandler = function(sResponse,isClearFilter)
    {
        var objTable = null;
        if(parseInt(document.getElementById("iNodataFound").value)>0)
            objTable = document.getElementById("iNodataFound");
        else objTable = document.getElementById(me.sTableId);
        util.toggleElementBackground(objTable.parentNode,false);
        if(sResponse!="")
        {
            me.setNewRecordCnt();
            if(me.sEventCallBack!=null && me.sEventCallBack!="") //Condition for MailAll
            {
                var dvListView;
                util.toggleBackground(false);
                if(document.getElementById("dvListViewContainer")!=null)
                    dvListView=document.getElementById("dvListViewContainer");
                else dvListView=document.getElementById("reportData");
                if(dvListView!=null)
                {
                    dvListView.innerHTML=sResponse;
                    if(typeof window["initAllCombos"]=="function")
                        initAllCombos=null;
                    if (typeof window["removeAllAdvPageInstances"] == "function")
                        removeAllAdvPageInstances();
                    loadResources(dvListView,util.onScriptsLoad);
                    if(document.getElementById("dvHr")!=null)
                        cross.setVisible(document.getElementById("dvHr"),true);
                }
            }
            else
                listView.arhSearchHandler(sResponse,!isClearFilter);

            if(document.getElementById("iSelectedRecords"))
            {
                document.getElementById("iSelectedRecords").style.display="none";
                document.getElementById("iAllRecords").style.display="none";
            }
            if(document.getElementById("bSimplePaging")==null)
                AdvPaging.getInstance().setRecordsPerPage(me.iRowsPerPage);
        }
    };

    this.reportSorting = function(isSortOrder,iColIndex,fnSortCallBack,arrArgs,sTableId)
    {
        me.sSortParams = "";
        var iTotalRows,clTable,isEmptyTD,iConfigActionId=0;
        clTable = new sTable(sTableId);
        var iTableId = listView.getTableId(sTableId);
        iTotalRows = document.getElementById("iTotalRows_"+iTableId).value;
        isEmptyTD = clTable.getHeaderElementAt(iColIndex).parentNode.getAttribute("emptytd");
        if(iTotalRows > 1 && isEmptyTD != 1)
        {
            me.fnSortCallBack=fnSortCallBack;
            me.arrArgs=arrArgs;
            me.sTableId=sTableId;
            var iReportHandle,iLayoutId,sParams,iModuleId,iExtraIdsLength=0,sUrl,sConfigGrpId=null,bReportActionsExist,bChkBoxExist;

            if(document.getElementById("sSortingURL_"+iTableId)!=null)
                sUrl = document.getElementById("sSortingURL_"+iTableId).value;
            else if(document.getElementById("isPreferences")==null)
                sUrl = "module/moduleView!getListView.do";
            else
            {
                sUrl = "common/setup!getPrefListView.do";
                sConfigGrpId= document.getElementById("sConfigGrpId").value;
            }

            iModuleId = me.getModuleId(iTableId);
            if(document.getElementById("extraIdsLength_"+iTableId))
                iExtraIdsLength = parseInt(document.getElementById("extraIdsLength_"+iTableId).value);

            if (document.getElementById("bChkBoxExist_"+iTableId).value>0)
                bChkBoxExist = true;//document.getElementById("bChkBoxExist_"+iTableId).value;
            if (document.getElementById("bReportActionsExist_"+iTableId).value>0)
                bReportActionsExist = true;//document.getElementById("bReportActionsExist_"+iTableId).value;
            //Column index starts from 0, so 1==first two columns

            if (bChkBoxExist && bReportActionsExist)
                iColIndex = parseInt(iColIndex-2);
            else if(bChkBoxExist || bReportActionsExist)
                iColIndex = parseInt(iColIndex-1);
            else iColIndex = parseInt(iColIndex);

            iLayoutId = me.getLayoutId(iTableId);
            iReportHandle = me.getReportHandle(iTableId);
            me.iRowsPerPage = util.encodeURI(AdvPaging.getInstance(iTableId,iModuleId,iReportHandle).iRecordsPerPage);
            if(document.getElementById("configActionId_"+iTableId))
                iConfigActionId =document.getElementById("configActionId_"+iTableId).value;

            sParams = "shRowsPerPage=" + me.iRowsPerPage + "&iLayoutId=" + iLayoutId + "&moduleId=" + iModuleId
                + "&repHandle=" + iReportHandle+"&isSorting=true&layoutType="+listView.getLayoutType(iTableId)
                +"&configActionId="+iConfigActionId+"&summaryLayoutId="+me.getSummaryLayoutId();
            //related to related module view all
            var iTransId=0,iExtraIds=0;
            var iBaseModuleId= 0;
            if(typeof window["relModuleHandler"] == 'object')
                iBaseModuleId= relModuleHandler.getBaseModuleId();

            //if(document.getElementById("baseModuleId")!=null)
            if(iBaseModuleId>0)
            {
                //iBaseModuleId=document.getElementById("baseModuleId").value;
                sParams += "&baseModuleId="+iBaseModuleId;

                if(document.getElementById("baseTransId")!=null)
                {
                    var iBaseTransId=document.getElementById("baseTransId").value;
                    sParams += "&baseTransId="+util.encodeURI(iBaseTransId);
                }
                if(document.getElementById("baseLayoutId")!=null)
                {
                    var iBaseLayoutId=document.getElementById("baseLayoutId").value;
                    sParams += "&baseLayoutId="+util.encodeURI(iBaseLayoutId);
                }
                if(document.getElementById("relLayoutId")!=null)
                {
                    var iRelLayoutId=document.getElementById("relLayoutId").value;
                    sParams += "&layoutId="+util.encodeURI(iRelLayoutId);
                }
                if(document.getElementById("isViewAll")!=null)
                {
                    var isViewAll=document.getElementById("isViewAll").value;
                    sParams += "&isViewAll="+util.encodeURI(isViewAll);
                }
                if(document.getElementById("transId")!=null)
                {
                    iTransId=document.getElementById("transId").value;
                    sParams += "&transId="+util.encodeURI(iTransId);
                }
                if(document.getElementById("extraIds[0]")!=null)
                {
                    iExtraIds=document.getElementById("extraIds[0]").value;
                    sParams += "&extraIds="+util.encodeURI(iExtraIds);
                }
                //Handling related module sorting
                if(document.getElementById("layoutId")!=null)
                    iRelLayoutId = document.getElementById("layoutId").value;
                if(iRelLayoutId>0)
                {
                    sParams += "&layoutId=" + iRelLayoutId +"&baseTransId="+iTransId+"&relLayoutId="+iLayoutId+"&relModuleId="+iModuleId;
                }
            }

            //related to related module view all
            var iLayoutGroupId = document.getElementById("iLayoutGroupId").value;
            me.sSortParams+="&sortOrder="+util.encodeURI((isSortOrder?2:1))+"&extraIdsLength="+util.encodeURI(iExtraIdsLength)
                +"&bChkBoxExist="+util.encodeURI(bChkBoxExist)
                +"&bReportActionsExist="+util.encodeURI(bReportActionsExist)+"&layoutGroupId="+util.encodeURI(iLayoutGroupId);
            sParams+="&colIndex="+util.encodeURI(iColIndex)

            if(sConfigGrpId!=null)
                sParams+=sConfigGrpId;
            var objTable,sCustFileterParams="";
            objTable = document.getElementById(sTableId);
            if((sCustFileterParams=me.getCustFilterParams())!="")
            {
                sParams+="&"+sCustFileterParams;
                sParams+=me.sSortParams;  // @changed@
            }
            else
            {
                sParams+=me.sSearchParams;
                sParams+=me.sSortParams;
            }

            sParams+=me.getListConfigParams();

            if(me.sEventCallBack!=null && me.sEventCallBack!="")
            {
                var arrParams =eval(me.sEventCallBack)(iModuleId);
                if(arrParams[0].length>0)
                    sUrl = arrParams[0];
                if(arrParams[1]!=undefined)
                    sParams+=arrParams[1];
            }

            var sSortCallBack;
            if(document.getElementById("sSortCallBack")!=null)
            {
                sSortCallBack = document.getElementById("sSortCallBack").value;
                //                sParams+=eval(sSortCallBack)();
                var arrParams =eval(sSortCallBack)();
                if(arrParams[0].length>0)
                    sUrl = arrParams[0];
                sParams+=arrParams[1]+"&isRefresh=true";
            }
            /*if(app.getWindowType() == Constants.IMODULE_WINDOW.SPLIT_PANE)
             sParams += "&windowType="+clSplit.getListViewType(iModuleId);*/
            con.sendPostRequest(sUrl, sParams, null, "listView.arhSortingHandler", null,objTable.parentNode,null,false,false,ACTION_SORT);
        }
    };

    this.arhSortingHandler = function(sResponse,iStatusCode,sStatusMsg,iReportHandle)//iAppValue
    {
        if(sResponse!="")
        {
            var objDiv;
            var iTableId = listView.getTableId(me.sTableId);
            objDiv = document.getElementById("listReportDiv_"+iTableId);
            objDiv.innerHTML = sResponse;
            loadResources(objDiv);

            var objTable = document.getElementById(me.sTableId);
            var objNewTable;
            var isHeader=false;
            for (var i = 0; i < objDiv.childNodes.length; i++)
            {
                if (objDiv.childNodes[i].nodeName == "TABLE")
                    objNewTable = objDiv.removeChild(objDiv.childNodes[i]);
            }

            objTable.removeChild(objTable.tBodies[0]);
            objTable.appendChild(objNewTable.tBodies[0]);

            var iModuleId = me.getModuleId();
            document.getElementById("iReportHandle_"+iTableId).value = iReportHandle;
            var clAdvPaging=AdvPaging .getInstance(iTableId,iModuleId,iReportHandle);
            clAdvPaging.setReportHandle(iReportHandle);
            clAdvPaging.setRecordsPerPage(me.iRowsPerPage);
            cross.callFunction(null,me.fnSortCallBack,me.arrArgs);
        }
    };

    this.evtShowImage = function(objLink,iTableId)
    {
        var objImg=document.getElementById("inLineEdit_"+iTableId);
        if(objImg)
        {
            if(objImg.parentNode!=objLink)
            {
                objImg=objImg.parentNode.removeChild(objImg);
                //        objLink.parentNode.appendChild(objImg);
                /*objLink.insertBefore(objImg,objLink.childNodes[0])*/
                objLink.appendChild(objImg);
                objImg.style.margin='1px'
                objImg.style.display='inline';
                objImg.style.position='relative';
            }
        }
    };

    this.getCardView = function(objLink,sUrl,isEditable,e,sTableId)
    {

        if(sTableId==undefined || sTableId=="")
            sTableId = "listReportTab_1";
        var iTableId = listView.getTableId(sTableId);
        if(isEditable)
            me.evtShowImage(objLink,iTableId);
        if(!isRowAction() )//&& !isEditable)
        {
            var sParams = "", iModseqid=0;
            iModseqid = me.getModuleSeqId(objLink);
            if( iModseqid>0)
            {
                var iIndex = sUrl.indexOf("?");
                var iModuleSeqId=parseInt(document.getElementById("modSeqId"+objLink.parentNode.cellIndex+"_"+iTableId).value);
                var sModuleId = "moduleId="+iModuleSeqId;
                if(iModuleSeqId>Constants.TRANS_MODULE)
                {
                    sUrl = sUrl.replace(sUrl.substring(iIndex + 1, sUrl.indexOf("&")), sModuleId);
                    var iCellIndex = objLink.parentNode.cellIndex;
                    var iFieldId = document.getElementById("FieldId" + iCellIndex + "_" + iTableId).value;
                    iIndex = sUrl.indexOf("&");
                    sUrl = sUrl.replace(sUrl.substring(iIndex + 1, sUrl.lastIndexOf("&") + 1), "");

                    //TODO: commented on 23/03/2022 memeberId changes in Lead/TeleLead
                    //var iCalledFromModuleId=listView.getModuleId(iTableId);
                    //sParams = "transId=" + iModseqid + "&" + sModuleId + "&fieldId=" + iFieldId+"&calledFrom="+iCalledFromModuleId;
                    sParams = "transId=" + iModseqid + "&" + sModuleId + "&fieldId=" + iFieldId;//+"&calledFrom="+iCalledFromModuleId;
                    //                sUrl = con.getStruts2Url("security","home.do","getRecentItemDetails",null);
                    //                sUrl += sParams;
                    app.evOverShowDetails(objLink, sModuleId + "_" + iModseqid, Constants.PRONG_LEFT, sParams, null, null, document.getElementById("containerDiv_1"), e);
                }
            }
        }
    };

    this.inlineFieldEdit = function(objLink,e,sTableId)
    {
        app.isHideCardView();
        var iModuleId=0,iFieldId=0,sParams="",iRowIndex=-1,sTable;
        iRowIndex = objLink.parentNode.parentNode.parentNode.rowIndex;
        sTable = objLink.parentNode.parentNode.parentNode.parentNode.parentNode.id;
        var iTableId = listView.getTableId(sTableId);
        me.iRowIndex = iRowIndex;
        me.iCellIndex = objLink.parentNode.parentNode.cellIndex;
        iFieldId = document.getElementById("FieldId"+me.iCellIndex+"_"+iTableId).value;
        var sModuleCaption = document.getElementById("sModuleCaption").value;
        sParams = "fieldId="+iFieldId+"&viewIn="+Constants.MODULE_IN_DLG;
        iModuleId = listView.getModuleId(iTableId);
        sParams += "&moduleId="+iModuleId+"&repHandle="+me.getReportHandle();
        //TODO: commented on 23/03/2022 memeberId changes in Lead/TeleLead
        /*if(iModuleId==Constants.LEADS || iModuleId==Constants.TELELEADS )
        {
            sParams += "&transId="+util.encodeURI(listView.getSelectedTransId(null,(iRowIndex-1)));
            sParams += "&extraIds="+listView.getSelectedExtraId(null,(iRowIndex-1),null,true);
        }
        else*/ sParams += "&transId="+util.encodeURI(listView.getSelectedTransId(null,(iRowIndex-1)));
        sParams +="&sFnSaveCallback=parent.listView.onSaveOnlineEdit";
        var sUrl = "module/moduleView!getOnlineEdit.do?"+sParams;
        if(iModuleId==Constants.OPPORTUNITIES)
            sUrl += "&isIgnoreRules=true";
        sUrl += "&isInlineEdit=true";
        var arrActions = new Array();
        arrActions[0] = MsgHandler.getMsg(MsgConstants.OK,0,0)+"|moduleView.saveModuleDetails";
        arrActions[1] = MsgHandler.getMsg(MsgConstants.CANCEL,0,0)+"|parent.listView.onCancelOnlineEdit";
        // util.toggleBackground(true);
        //        this.clOnlineEditDialog = new DialogBox("dlg", ":: Edit Value ::", 200, 80, 360, 190, sUrl, true, null, true, true,arrActions);
        this.clOnlineEditDialog = new DialogBox("dlg", MsgHandler.getMsg(MsgConstants.EDIT_VAL)+" "+sModuleCaption, 200, 80, 360, 370, sUrl, true, null, true, true,arrActions);
        this.clOnlineEditDialog.setCenter();
        this.clOnlineEditDialog.isHide(true);
        cross.cancelBubble(e);
        return false;
    };

    this.onSaveOnlineEdit=function(sUpdatedValue)
    {
        me.getRefresh();
        //        listView.setInlineEditValue(me.iRowIndex,me.iCellIndex,sUpdatedValue);
        me.clOnlineEditDialog.hide();
    };

    this.onCancelOnlineEdit=function()
    {
        me.clOnlineEditDialog.hide();
    };


    this.setInlineEditValue=function(iRowIndex,iCellIndex,sUpdatedValue,sTableId)
    {
        if(sTableId==undefined || sTableId==null|| sTableId=="")
            sTableId = "listReportTab_1";

        var clTable = new sTable(sTableId);
        var objTblCol = clTable.getElementAt(iRowIndex,iCellIndex);
        var objChildren =  cross.getChildren(objTblCol);
        var objImg =null;
        if(objChildren.length>0 &&  (objChildren[0].nodeName=='SPAN' || objChildren[0].nodeName=='A'))
        {
            objChildren[0].innerHTML=sUpdatedValue;
            objImg =objChildren[1];
            objTblCol.appendChild(objImg);
        }
        else
        {
            objTblCol.innerHTML=sUpdatedValue;
            objImg =objChildren[0];
            objTblCol.appendChild(objImg);
        }
        me.iRowIndex=-1;
        me.iCellIndex=-1;
    };

    this.setCurrentRow=function(iModuleId,arrValues)
    {
        var sTableId="listReportTab_"+iModuleId;
        if(document.getElementById(sTableId))
        {
            var objTable=new sTable(sTableId);
            var iValuesLength = arrValues.length;
            var isSetInnerHTML=false;
            if(iModuleId==Constants.NOTES)
                isSetInnerHTML=true;
            var arrActions = listView.getListActions(iModuleId);
            var iColIndex=arrActions[0];

            for(var i=0;i<iValuesLength;i++,iColIndex++)
            {
                objTable.setValueAt(me.iRowIndex,iColIndex,arrValues[i],null,null,isSetInnerHTML);
            }
        }
    };

    this.addRow=function(iModuleId,arrValues)
    {
        var sTableId="listReportTab_"+iModuleId;
        if(document.getElementById(sTableId))
        {
            var objTable=new sTable(sTableId);
            //            var objTableId=document.getElementById("listReportTab_"+iModuleId);
            var containerId=document.getElementById("reportContainer"+iModuleId);
            var iRowCount=objTable.getRowCount();
            var iValuesLength = arrValues.length;
            if(iRowCount==1 && containerId.rows[0].cells[0].style.display=="block")//&& objTableId.tBodies[0].rows[0].cells[0].colSpan>1)
            {
                containerId.rows[0].cells[0].style.display="none";
                containerId.rows[1].cells[0].style.display="block";
                //objTable.createDisplayRow(0,iValuesLength,arrValues);
            }
            else
            {
                objTable.addRow();
                iRowCount++;
            }
            var isSetInnerHTML=false;
            if(iModuleId==Constants.NOTES)
                isSetInnerHTML=true;

            var arrActions = listView.getListActions(iModuleId);
            var iColIndex=arrActions[0];
            for(var i=0;i<iValuesLength;i++,iColIndex++)
                objTable.setValueAt((iRowCount-1),iColIndex,arrValues[i],null,null,isSetInnerHTML);
        }
    };

    this.getListActions=function(iTableId)
    {
        var iColIndex=0,bChkBoxExist=false,bReportActionsExist=false;
        if (document.getElementById("bChkBoxExist_"+iTableId).value>0)
        {
            bChkBoxExist = true;//document.getElementById("bChkBoxExist_"+iTableId).value;
            iColIndex++;
        }
        if (document.getElementById("bReportActionsExist_"+iTableId).value>0)
        {
            bReportActionsExist = true;//document.getElementById("bReportActionsExist_"+iTableId).value;
            iColIndex++;
        }

        return [iColIndex,bChkBoxExist,bReportActionsExist];
    };

    this.deleteRow=function(iTableId,iRowIndex)
    {
        if(document.getElementById("listReportTab_"+iTableId))
        {
            var objTable=new sTable("listReportTab_"+iTableId);
            objTable.deleteRow(iRowIndex);
        }
    };

    this.getSelectedRowIndex = function()
    {
        return me.iRowIndex;
    };

    this.getSelectedRowIndexes = function(iTableId)
    {
        return AdvPaging.getInstance(iTableId).getRowIndexes();
    };
    this.showActions = function()
    {
        var tdActions;
        tdActions = document.getElementById("actions");
        if(tdActions)
            cross.setVisible(tdActions,true);
    };
    this.hideActions = function()
    {
        var tdActions;
        tdActions = document.getElementById("actions");
        if(tdActions)
            cross.setVisible(tdActions,false);
    };

    this.printListReport = function(sUrl, isPreferences)
    {
        var iReportHandle = 0,iModuleId = 0,iLayoutId,sParams="";

        iLayoutId = me.getLayoutId();

        iReportHandle = me.getReportHandle();
        iModuleId = me.getModuleId();
        iLayoutId = me.getLayoutId();
        sParams= "shRowsPerPage=" + util.encodeURI(AdvPaging.getInstance().iRecordsPerPage) + "&iLayoutId=" + iLayoutId + "&moduleId=" + iModuleId+ "&repHandle=" + iReportHandle+"&isPrint=true";
        if (isPreferences)
            sParams += "&configId=" + document.getElementById("configId").value + "&groupId=" + document.getElementById("groupId").value;
        util.printView(sUrl,sParams);
    };

    this.clearListControl= function()
    {
        var tfSearch=document.getElementById("textSearch");
        if(tfSearch)
            tfSearch.value="";
    };

    this.getLayoutId=function(iTableId)
    {
        var iLayoutId=0;
        if(iTableId==undefined || iTableId==0)
            iTableId=1;
        if(document.getElementById("iLayoutId_"+iTableId)!=null)
            iLayoutId = util.encodeURI(document.getElementById("iLayoutId_"+iTableId).value);
        else if (me.iLayoutId > 0)
            iLayoutId = util.encodeURI(me.iLayoutId);

        /*
                if (me.iLayoutId > 0)
                    iLayoutId = util.encodeURI(me.iLayoutId);
                else if(document.getElementById("iLayoutId_"+iTableId)!=null)
                    iLayoutId = util.encodeURI(document.getElementById("iLayoutId_"+iTableId).value);
        */
        return iLayoutId;
    };

    this.getLayoutType = function(iTableId)
    {
        if(iTableId==undefined || iTableId==0)
            iTableId=1;

        return util.encodeURI(document.getElementById("iLayoutType_"+iTableId).value);
    };

    this.refreshListView = function(sUrl,iTableId,isCenterRefresh,sReportId)
    {
        if(getDialogBox("dlg"))
            getDialogBox("dlg").hide();

        if(!iTableId)
            iTableId=listView.getTableId();

        if(sUrl==undefined)
        {
            var sParams="",iModuleId=0,sUrl="";;
            iModuleId = listView.getModuleId();
            sParams="?moduleId="+iModuleId;
            sUrl="module/moduleView!getModuleView.do"+sParams;
        }
        if(!isCenterRefresh)
        {
            me.sTableId="listReportTab_"+iTableId;
            var objTable = document.getElementById("listReportTab_"+iTableId);
            con.sendPostRequest(sUrl, null, null, "listView.arhSearchHandler", false,objTable.parentNode,null,false,false);
        }
        else home.setCenterUI(sUrl);
    };

    this.refreshRelatedView = function(iTableId)
    {
        if(!document.getElementById("moduleViewMode") && !document.getElementById("isViewAll"))
            return;

        me.isRefreshRelatedView=true;
        var sParams="",sUrl="";
        //var iModuleId = document.getElementById("moduleId").value;
        var iModuleId = relModuleHandler.getBaseModuleId();
        var iLayoutId = relModuleHandler.getBaseLayoutId();//document.getElementById("layoutId").value;

        var iTransId = relModuleHandler.getBaseTransId();//document.getElementById("transId").value;

        var iReportHandle = listView.getReportHandle(iTableId);
        var iRelLayoutId = listView.getLayoutId(iTableId);
        sParams= "layoutType="+Constants.RELATEDMODULE_LAYOUT+"&layoutId=" + iRelLayoutId + "&moduleId=" + iTableId+ "&repHandle=" + iReportHandle
            +"&baseModuleId="+iModuleId+"&baseTransId="+iTransId+"&baseLayoutId="+iLayoutId;

        if(document.getElementById("extraIds[0]"))
            sParams+="&baseExtraIds="+document.getElementById("extraIds[0]").value;

        if(document.getElementById("isViewAll"))
            sParams += "&isViewAll=1";
        sParams += "&isReloadListReport=1";
        sUrl="module/moduleView!refreshRelModule.do";
        var sTableId = "listReportTab_"+iTableId;
        /*function resHandler(sResponse)
         {
         listView.arhListViewPage(sResponse,sTableId);
         }*/


        function resHandler(sResponse)
        {
            if(document.getElementById("isViewAll")) // list view refresh from view all
                listView.arhSearchHandler(sResponse,false);
            else //from detailed view related module
            {
                me.sTableId=sTableId;
                listView.arhListViewPage(sResponse,sTableId);
                me.sTableId="";
            }
            //rowcount value is greate than 0 toggle open
            var objRowCount=document.getElementById("hfGridRowCount_"+iTableId);
            if(objRowCount!=null && objRowCount.value>0 && document.getElementById("actImg1_rm"+iTableId+"_"))
                detailedView.hideToggle(iTableId,false);
            if(objRowCount!=null && objRowCount.value>5)
                document.getElementById("actBar_"+iTableId+"_"+Constants.VIEW_ALL+"_rm"+iTableId+"_0").style.display = "block";
        }

        var objTable = document.getElementById(sTableId);
        con.sendPostRequest(sUrl, sParams, resHandler,null, true,objTable.parentNode,null,true,false);
        //        con.sendPostRequest(sUrl, sParams, null, "listView.arhSearchHandler", false);
    };

    this.viewAllRelatedModule=function(iRelModuleId,sUrl)
    {
        //var iModuleId = document.getElementById("moduleId").value;
        var iModuleId = relModuleHandler.getBaseModuleId();
        var iLayoutId = document.getElementById("layoutId").value;
        var iTransId = document.getElementById("transId").value; //relModuleHandler.getBaseTransId();
        var iReportHandle = listView.getReportHandle(iRelModuleId);
        var iRelLayoutId = listView.getLayoutId(iRelModuleId);
        var iApprovalId = document.getElementById("approvalId").value;

        if(sUrl.indexOf("?")!=-1)
            sUrl+="&";
        else
            sUrl+="?";

        sUrl+= "isViewAll=1&layoutId=" + iRelLayoutId + "&moduleId=" + iRelModuleId+ "&repHandle=" + iReportHandle
            +"&baseModuleId="+iModuleId+"&baseTransId="+iTransId+"&baseLayoutId="+iLayoutId+"&baseApprovalId="+iApprovalId;

        if(document.getElementById("extraIds[0]"))
            sUrl+="&baseExtraIds="+document.getElementById("extraIds[0]").value;

        home.setCenterUI(sUrl);
    };

    this.setAutoRefresh = function(iTimeInterval)
    {
        if(me.iRefreshId>0)
            clearInterval(me.iRefreshId);
        if( iTimeInterval > 0 )
        {
            var iInterval = (1000 * (60 * iTimeInterval));
            //me.getRefresh(null,true,false);
            var isSummaryBar=false;
            if((document.getElementById("isSummaryLayoutExists_"+me.getTableId()).value)>0)
                isSummaryBar=true;
            me.callRefreshAction(null,isSummaryBar,false);
            //var iRefreshId = setInterval(me.getRefresh, iInterval);
            var iRefreshId = setInterval(function()
            {
                me.callRefreshAction(null,isSummaryBar,false);
            }, iInterval);
            me.iRefreshId = iRefreshId;
            cross.registerWindowEvent(me.iRefreshId, cross.EVENT_INTERVAL);
        }
    };

    this.getCustFilterParams=function()
    {
        me.sCustFilterParams="";
        var tfCustFilterParams=document.getElementById("custFilterParams");
        if(tfCustFilterParams)
            me.sCustFilterParams = tfCustFilterParams.value;
        return me.sCustFilterParams;
    };

    this.doEmptyCustFilterParams=function()
    {
        var tfCustFilterParams = document.getElementById("custFilterParams");
        if(tfCustFilterParams)
            tfCustFilterParams.value = "";
        me.sCustFilterParams="";
    };

    this.onBlurChgComponentType = function(thisObj,sValue,iDataTypeId)
    {

        var  objValCombo,objFldCombo,objOperCombo,iFieldId,iCurrentRowIndex,clTable,eleValue;
        objFldCombo = getComboInstance(thisObj.id);
        iFieldId = objFldCombo.getSelectedId();
        if(iDataTypeId == undefined)
            iDataTypeId = objFldCombo.getSelectedAttr("dtype");
        objOperCombo = getComboInstance("combo_operator");
        eleValue = document.getElementById("value");//value in filter
        var iModuleTypeId = me.getModuleId();


        if(iDataTypeId == Constants.DATATYPE_NUMBERLIST || iDataTypeId == Constants.DATATYPE_STRINGLIST)
        {
            document.getElementById("value").style.display="block";
            if(document.getElementById("sDate") && document.getElementById("sDate").style.display=="block")
            {
                document.getElementById("sDate").style.display = "none";
                document.getElementById("dDate").value = "";
            }

            eleValue.name = "value1";
            InstallAC("filterFrm",document.getElementById(eleValue.id),"value",null,null,null,null,null,null,null,null,
                null,null,null,null,null,null);
            objValCombo = getComboInstance(eleValue.id);
            objValCombo.setWidth(Constants.iPopupWidth);

            objValCombo.setMasterType2(Genernal_SERVER_VALUES,0,Constants.TYPE_ALL,iFieldId,iModuleTypeId,true);
            if(sValue)
                objValCombo.checkAndAddItem(sValue,true);
        }
        else if(iDataTypeId >= Constants.LEADS)
        {
            document.getElementById("value").style.display="block";
            if(document.getElementById("sDate") && document.getElementById("sDate").style.display=="block")
            {
                document.getElementById("sDate").style.display = "none";
                document.getElementById("dDate").value = "";
            }
            eleValue.value = "";
            eleValue.name = "value1";
            if(sValue==undefined)
                objOperCombo.setSelectedIndex(0);
            /*InstallAC("filterFrm",document.getElementById(eleValue.id),"value",null,null,null,null,null,null,
                null,null,null,null,null,null,null,null,null,null);*/
            var iSearchBy = objFldCombo.getSelectedAttr("searchby");

            simpleInstallAC("filterFrm",document.getElementById(eleValue.id),"value",iSearchBy > 0 ? iSearchBy:null,iFieldId,null,null,null,null,null,Constants.COMBO_RENDER_MODE_ADV_FILTER);

            objValCombo = getComboInstance(eleValue.id);
            objValCombo.setWidth(Constants.iPopupWidth);
            objValCombo.setMasterType2(iDataTypeId,iSearchBy > 0 ? iSearchBy:null,Constants.TYPE_ALL,0,iModuleTypeId,true);
            objValCombo.setRenderMode(-1);
            if(me.sFilterCallBack!=null && me.sFilterCallBack!="")
            {
                var arrParams =eval(me.sFilterCallBack)();
                objValCombo.setCondition(arrParams[0]);
            }

            if(sValue)
                objValCombo.checkAndAddItem(sValue,true);
        }
        else if(iDataTypeId == Constants.DATATYPE_DATETIME || iDataTypeId == Constants.DATATYPE_DATE)
        {
            if(document.getElementById("value"))
            {
                document.getElementById("value").style.display="none";
                document.getElementById("value").value="";
            }
            if(document.getElementById("sDate"))
                document.getElementById("sDate").style.display="block";
        }
        else
        {
            document.getElementById("value").style.display="block";
            document.getElementById("sDate").style.display="none";
            if(document.getElementById("dDate"))
                document.getElementById("dDate").value="";
            //                objOperCombo.setSelectedIndex(-1);
            eleValue.name = "value";
            UnInstallAC(eleValue);
            if(sValue)
                eleValue.value=sValue;
            if(iDataTypeId == Constants.DATATYPE_FRACTION)
            {
                var TYPE_FLOAT = 3;
                eleValue.setAttribute("onkeyup","checkInput(this,"+TYPE_FLOAT+",false,event)");
            }
            else if(eleValue.getAttribute("onkeyup"))
                eleValue.removeAttribute("onkeyup");
        }
        /*if(objValCombo)
         objValCombo.setAttribute("placeholder","Value");*/
        //        }
    };

    this.toggleValue=function()
    {
        var iOperator=0;
        var sValue = "";//document.getElementById("value");
        if(document.getElementById("sDate") && document.getElementById("sDate").style.display=="block")
            sValue=document.getElementById("dDate");
        else
        {
            sValue=document.getElementById("value").style.display=="block";
            sValue=document.getElementById("value");
        }

        iOperator=getComboInstance("combo_operator").getSelectedId();
        if( iOperator == Constants.IOPERATOR_ISBLANK || iOperator == Constants.IOPERATOR_ISNOTBLANK)
        {
            sValue.disabled=true;
            /*if(getComboInstance(clTable.getElementAt(i,3).id))
             {
             getComboInstance(clTable.getElementAt(i,3).id).setSelectedIndex(-1);
             }
             else
             clTable.setValueAt(i,3,'');*/
        }
        else
            sValue.disabled=false;
    };

    this.setListviewWidth=function(sLeftPanelWidth)
    {
        var iContainerWidth=document.getElementById("containerDiv_1").style.width;
        iContainerWidth = parseInt(iContainerWidth.substring(0,iContainerWidth.indexOf("px")));
        if(sLeftPanelWidth>0)
            iContainerWidth=parseInt(iContainerWidth+sLeftPanelWidth);
        else
            iContainerWidth=parseInt(iContainerWidth-me.sLeftPanelWidth);
        document.getElementById("containerDiv_1").style.width =iContainerWidth;
        me.sLeftPanelWidth = sLeftPanelWidth;
    };

    this.getSortParams=function()
    {
        return me.sSortParams;
    };

    this.getFilterValues=function()
    {
        var arrValues = new Array();
        var sValue="";
        if(getComboInstance("value")){
            var cbValue;
            cbValue=getComboInstance("value");
            sValue =cbValue.getSelectedItem()+"|"+ cbValue.getSelectedId();
        }
        else
        {
            if(document.getElementById("value")!=null)
                sValue = document.getElementById("value").value;
        }
        var cbField,cbOperator;
        cbField=getComboInstance("combo_Fields");
        cbOperator=getComboInstance("combo_operator");
        //        arrValues[0]=document.getElementById('combo_Fields').getAttribute("dtype");
        if(getComboInstance('combo_Fields').getSelectedAttr("dtype"))
            arrValues[0]=getComboInstance('combo_Fields').getSelectedAttr("dtype");
        else
            arrValues[0]=document.getElementById('combo_Fields').getAttribute("dtype");

        arrValues[1]=cbField.getSelectedItem()+"|"+cbField.getSelectedId();
        arrValues[2]=cbOperator.getSelectedItem()+"|"+cbOperator.getSelectedId();
        arrValues[3]=sValue;
        return arrValues;
    };
    this.setFilterValues=function(sField,sOperator,sValue,iDataType)
    {
        var cbField,cbOperator;
        cbField=getComboInstance("combo_Fields");
        document.getElementById("combo_Fields").setAttribute("dtype",iDataType);
        cbOperator=getComboInstance("combo_operator");

        cbField.checkAndAddItem(sField,true);
        me.onBlurChgComponentType(document.getElementById("combo_Fields"),null,iDataType);
        if(getComboInstance("value")){
            var cbValue;
            cbValue=getComboInstance("value");
            cbValue.checkAndAddItem(sValue,true);
        }
        else
            document.getElementById("value").value=sValue;

        cbOperator.checkAndAddItem(sOperator,true);
    };
    this.resetFilter=function()
    {
        if(getComboInstance("value")){
            var cbValue;
            cbValue=getComboInstance("value");
            cbValue.setSelectedIndex(-1);
        }
        else
            document.getElementById("value").value="";
        var cbField,cbOperator;
        cbField=getComboInstance("combo_Fields");
        cbOperator=getComboInstance("combo_operator");
        cbField.setSelectedIndex(-1);
        cbOperator.setSelectedIndex(-1);
    };
    this.clearFilterCriteria=function(searchUrl)
    {
        me.isClearFilter=true;
        me.setSplitPaneType();
        me.removeAllTabbedPanes();
//        clFrame.removeAll();
        this.clCustomDialog=null;
        this.isClearCustomFilter = false;
        this.sSearchParams="";
        this.sSortParams="";
        me.bIsSearch=false;
        document.getElementById("dvFilter").style.visibility="hidden";//cross.setVisible(document.getElementById('dvFilter'),false);
        me.clearLookInControl();
        me.clearListControl();
        me.clearFilter();
        //var iTableId=me.getTableId();
        if(document.getElementById("searchType")!=null)
            document.getElementById("searchType").value=null;
        //if(document.getElementById("iSortOrder"+iTableId)!=null)
        //    document.getElementById("iSortOrder"+iTableId).value=null;
        document.getElementById("alphaVal").value="";

        if(document.getElementById("iSelectedRecords"))
        {
            document.getElementById("iSelectedRecords").style.display="none";
            document.getElementById("iAllRecords").style.display="none";
        }
        if(document.getElementById("isSearchExist") && document.getElementById("isSearchExist").value>0)
            clSearch.onClkClearSearchFlds();
        var objAlphaSearch = document.getElementsByClassName("alphasrch");
        for(var i=0;i<objAlphaSearch.length;i++)
        {
            if(util.hasClass(objAlphaSearch[i],"selectedAlpha"))
                util.removeClass(objAlphaSearch[i],"selectedAlpha");
        }
        if(me.bIsNewRecordSort)
        {
            document.getElementById("tblNewCount").style.backgroundColor = "#16A765";
            me.bIsNewRecordSort=false;
            me.iNewCountClk=0;
        }

        me.sSearchAlpha="";
        if (document.getElementById("isPreferences"))
        {
            me.isPreferences=true;
            me.callRefreshAction("common/setup!getPrefListView.do",true,true);
        }
        else{
            /*var byListViewType = Constants.IMODULE_WINDOW.DEFAULT;
             if(app.getWindowType() == Constants.IMODULE_WINDOW.SPLIT_PANE)
             byListViewType = clSplit.getListViewType(listView.getModuleId());
             listView.getRefresh("module/moduleView!getListView.do?windowType="+byListViewType,true);*/
            //me.callRefreshAction("module/moduleView!getListView.do",true,true);
            if(searchUrl==null || searchUrl==undefined)
                searchUrl = "module/moduleView!getListView.do";
            me.callRefreshAction(searchUrl,true,true);
        }
    };
    this.showFilterImage=function(){
        cross.setVisible(document.getElementById("imgDelete"),true);
    };
    this.hideFilterImage=function(){
        cross.setVisible(document.getElementById("imgDelete"),false);
    };

    this.isInt=function(iVal)
    {
        var bIsInt=true;
        var MIN=-2147483648;
        var MAX=2147483647;
        if(!isNaN(iVal) && parseFloat(iVal) == parseInt(iVal, 10) )//util.trim(iVal).length>0
        {
            var iValue=parseInt(iVal,10);
            if(iValue < MIN || iValue > MAX)
                bIsInt=false;
            return bIsInt;
        }
    };

    this.getRowsPerPage=function()
    {
        return document.getElementById("iRowsPerPage").value;
    };

    /*
     this.getCompleteTransIds=function()
     {
     var sParams="repHandle="+listView.getReportHandle();
     var sUrl = con.getStruts2Url("module","moduleView","getAllTransIds");
     con.sendPostRequest(sUrl, sParams, null, "listView.arhCompleteTransIds");//, false,null,null,false,false);
     };

     this.arhCompleteTransIds=function(sResponse)
     {
     sResponse=eval(sResponse);
     sResponse=sResponse[0];
     document.getElementById("allTransIds"+me.getTableId()).value=sResponse;
     document.getElementById('spSelected'+me.getTableId()).innerHTML=sResponse.length;
     };

     this.getAllTransIds=function()
     {
     return document.getElementById("allTransIds"+me.getTableId()).value;
     };
     */

    this.onClkNew = function(sUrl, objAlpha, isPreferences, isTxtSearch
        , isAllOrNumaric, isLookIn,sAdvParams)
    {
        //if(me.isSearchOnProcess)
        {
            //me.isSearchOnProcess = false;
            var objTblNewCount = document.getElementById("tblNewCount");
            var objSpNewCount = document.getElementById("spUnredCount");
            var objSpNew = document.getElementById("spNew");
            me.iNewCountClk = me.iNewCountClk + 1;
            var bClkCount = me.iNewCountClk % 2;
            var bIsNewRecordSort = (bClkCount == 1);
            me.bIsNewRecordSort=bIsNewRecordSort;
            if (bIsNewRecordSort)
            {
                if (objTblNewCount)
                {
                    objTblNewCount.style.backgroundColor = "#28CCA9";
                    objSpNewCount.style.color = "#fff";
                    objSpNew.style.color = "#fff";
                }
            }
            else
            {
                if (objTblNewCount)
                {
                    objTblNewCount.style.backgroundColor = "#16A765";
                    objSpNewCount.style.color = "#fff";
                    objSpNew.style.color = "#fff";
                    isLookIn=true;
                }
            }
            me.callSearchAction(sUrl, objAlpha, isPreferences, isTxtSearch
                , isAllOrNumaric, isLookIn, sAdvParams, bIsNewRecordSort);
        }
    };

    this.onClkSearch = function(sSearchFldValues)
    {
        Validation.reset();
        Validation.clearMessage();

        if(document.getElementById("spOptions"))
            document.getElementById("spOptions").onclick();

        if(util.trim(sSearchFldValues).length>0)
        {
            var sUrl = "module/moduleView!getListView.do";
            //me.searchHandler(sUrl, null, false, false,false, true,null,false,sSearchFldValues);
            me.callSearchAction(sUrl, null, false, false,false, true,null,false,sSearchFldValues);
        }
        else
        {
            me.clearFilterCriteria();
            //Validation.showMessage(MsgHandler.getMsg(MsgConstants.SEARCH_CRITERIA_REQ),Validation.ERROR_MSG);
        }

    };

    this.selectTotRecords = function()
    {
        AdvPaging.getInstance(listView.getTableId(),listView.getModuleId(),listView.getReportHandle()).onClkPageSelection(1);
    };

    this.clearRecordsSelection = function()
    {
        AdvPaging.getInstance(listView.getTableId(),listView.getModuleId(),listView.getReportHandle()).onClkPageSelection(4);
    };

    this.getSearchDetails = function()
    {
        var sUrl = "module/moduleView!getSearchResult.do";
        var sParams="sSearchText="+util.encodeURI(document.getElementById("search").value);
        con.sendPostRequest(sUrl, sParams, null, "listView.arhSearchDetailsHandler", false);
    };

    this.arhSearchDetailsHandler = function(sResponse)
    {
        var objDiv;
        if(sResponse!=null && sResponse!="")
        {
            document.getElementById("resultData").style.display="block";
            objDiv = document.getElementById("resultData");
            objDiv.innerHTML = sResponse;
        }
    };

    this.setLookInData=function(iUserId,sValue)
    {
        me.iUserId=iUserId;
        document.getElementById("hdUserId").value = iUserId;
        document.getElementById("lookin").innerHTML = sValue;
    };

    this.setFilteredTxt=function(iSearchType)
    {
        me.iSearchType=iSearchType;
        me.bIsSearch=true;
        document.getElementById("dvFilter").style.visibility="visible";//cross.setVisible(document.getElementById("dvFilter"),true);
        var spFilter = document.getElementById("spFilter");
        if(iSearchType==Constants.IListviewFilters.ADVANCE_SEARCH)
        {
            spFilter.innerHTML="<a href='#'  onclick='listView.getCustomFilter(\""+document.getElementById('custFilterUrl').value+"\","+me.getModuleId()+")'>" +
                " <font color='#B31D1D'> Filtered </font> </a>";
        }
        else spFilter.innerHTML="Filtered";
    };

    /*
     //used for when new count filter clicks
     this.getFilterwiseData=function()
     {
     if(me.iSearchType==Constants.IListviewFilters.ADVANCE_SEARCH)
     {
     //me.getFilterValues()
     }
     };
     */

    this.setFldFilterCriteria=function(arrValues)
    {
        listView.hideFilter(true);
        var cbField=getComboInstance('combo_Fields');
        var cbOperator=getComboInstance('combo_operator');
        var objValue=document.getElementById('value');
        cbField.checkAndAddItem(arrValues[0],true);
        cbOperator.checkAndAddItem("|"+arrValues[1],true);
        me.onBlurChgComponentType(document.getElementById('combo_Fields'),arrValues[2]);
        var cbValue=getComboInstance('value');
        if(cbValue)
            cbValue.checkAndAddItem(arrValues[2],true);
        else
            objValue.value=arrValues[2];
        //listView.searchHandler("module/moduleView!getListView.do", null, null, false, false,false);
        me.callSearchAction("module/moduleView!getListView.do", null, null, false, false,false);
    };


    this.showRevisionsList=function(objLink,iModuleId,iTransId,e)
    {
        var  sTitle=clAppBuffer.getModuleCaption(iModuleId)+" "+MsgHandler.getMsg(MsgConstants.REVISIONS_LIST);
        var sUrl="module/module!getRevisionsList.do?moduleId="+iModuleId+"&transId="+iTransId;
        var arrActions=[];
        arrActions[0] = MsgHandler.getMsg(MsgConstants.CLOSE,0,0)+"|";

        var clDlg = new DialogBox("RevisionListDlg1","",140,160,550,330,sUrl, false, null, true,true,arrActions,false,null,true,true,false,true,false,true);
        clDlg.setTitle(sTitle);
        clDlg.setCenter();
        clDlg.show();

        cross.cancelBubble(e);
        return false;
    };

    this.showModuleRevisions=function(objThis,iModuleId,iTransId,iRevisionId,e)
    {

        var arrActions=[];
        arrActions[0] = MsgHandler.getMsg(MsgConstants.CLOSE,0,0)+"|";
        //var sTitle=MsgHandler.getMsg(MsgConstants.REVISION)+":"+iRevisionId;
        var sTitle=objThis.innerHTML;
        var sUrl="module/moduleView!getDetailedViewFields.do?moduleId="+iModuleId+"&transId="+iTransId+"&revisionId="+iRevisionId+"&viewIn="+Constants.MODULE_IN_DLG;
        var clDetailedDlg = new DialogBox("RevisionListDlg2",sTitle,140,160,680,380,sUrl, true, null, true,true,arrActions);
        clDetailedDlg.setCenter();
        clDetailedDlg.show();
        cross.cancelBubble(e);
        return false;
    };

    this.setTableHeight=function(iTableId)
    {
        /*if(document.getElementById("tblSearchFlds"))
         {

         var objDiv=document.getElementById("containerDiv_"+iTableId);
         objDiv.style.height=parseInt(document.getElementById("listviewTabHeight").value-(document.getElementById("tdalphaFilter")?document.getElementById("tdalphaFilter").offsetHeight:0));
         }*/
    };

    this.onClkShowExport = function(sModuleCaption,objSrc)
    {
        /*if (listView.isDraftRecordSelected())
         {
         msg.showMessage(0, MsgHandler.getMsg(MsgConstants.DRAFT_RECORD_ACTION, 0, 0));
         return;
         }*/

        var arrActions = new Array();
        var sId = (objSrc.parentNode.parentNode).id;
        sId = sId.substring(0,sId.indexOf("List"));
        dropdownlist.hideDropDownPopup(sId);
        arrActions[0] = "Export|layoutExport.onClkExport("+document.getElementById("iTableId").value+")";
        arrActions[1] = "Cancel|layoutExport.onClkCancel";

        var sUrl = con.getStruts2Url("module","moduleView","getLayoutExport");
        var sLayoutName="",cbView=null;
        if (cbView = document.getElementById("view"))
            sLayoutName = util.encodeURI(cbView.options[cbView.selectedIndex].text);//+"  Export";
        else if(document.getElementById("iTableId").value==Constants.TASKS)
            sLayoutName="Tasks";
        sUrl=sUrl+"layoutName="+sLayoutName;
        sUrl=sUrl+"&moduleCaption="+sModuleCaption;
        var dlgExportLayout = new DialogBox("ExportLayout", decodeURIComponent(sLayoutName), 75, 85, 500, 350, sUrl, true, null, true, true, arrActions);
        dlgExportLayout.setTitle("Export - "+sModuleCaption);
        dlgExportLayout.setCenter();
        dlgExportLayout.show();
    };
    this.saveShortCuts = function(sUrl,iViewMode,iModuleId,e)
    {
        var objSpan,objSpnTarget;
        objSpan = document.getElementById("spnShortCut");
        objSpnTarget = document.getElementById("spshortcut");
        util.animateMove(objSpan,objSpnTarget,{"transition-property":"top,left","transition-duration":"0.7s"},[{'name':'color','value':'#1266e3 '},{'name':'font-size','value':'178%'}],true);
        con.sendPostRequest(sUrl,"&viewMode="+iViewMode+"&moduleId="+iModuleId,null,listView.arhSaveShortcuts);
        cross.cancelBubble(e);
        return false;
    };
    this.arhSaveShortcuts = function(sResponse)
    {
        if(sResponse)
        {
            if(clAppBuffer.getThemeType()==Constants.ITheme.SLATEGREY)
                clNavMenu.getShortCutList();    //Todo
        }
    };
    me.timer = 0;
    this.toggleColWiseFilter = function(objTD,evt,isVisible){
        var event = cross.getEvent(evt);
        var dvColWiseFilter = document.getElementById("dvColWiseFilter");
        if(!dvColWiseFilter){
            dvColWiseFilter =  document.createElement("DIV");
            dvColWiseFilter.id = "dvColWiseFilter";
            // this handler will be executed only once when the cursor moves off the unordered list
            dvColWiseFilter.addEventListener("mouseover", function( event ) {
                clearTimeout(me.timer);
                me.timer = 0;
                cross.setVisible(dvColWiseFilter,true);
            }, false);
            dvColWiseFilter.addEventListener("mouseout", function( event ) {
                cross.setVisible(dvColWiseFilter,false);
            }, false);
            dvColWiseFilter.style.cssText="background:#e0e0e0;" +
                "border:1px solid #D5D9BA;" +
                "position:absolute";
            document.body.appendChild(dvColWiseFilter);
        }
        if(isVisible){
            var sColName = cross.getInnerText(objTD);
            var iFieldId = cross.getChildren(cross.getChildren(objTD)[0])[0].value;
            dvColWiseFilter.innerHTML="<span onclick='listView.onClkFilterRecords(\""+sColName+"\","+iFieldId+")' style='float:right;padding-top:2px'class='crm crm-filter'></span>"  ;
            var iPositions = cross.getPosition(objTD);
            dvColWiseFilter.style.left = iPositions[0];
            dvColWiseFilter.style.top = iPositions[1]-20;
            dvColWiseFilter.style.width = objTD.width;
            dvColWiseFilter.style.height = "20px";
            cross.setVisible(dvColWiseFilter,isVisible);
            clearTimeout(me.timer);
            me.timer = 0;

        }
        else{
            me.timer =  setTimeout(function() {
                cross.setVisible(dvColWiseFilter,false);
            }, 500);
        }

    };
    this.onClkGetRcrdsUsngSpanText = function() {
        parent.getDialogBox("rcrds").hide();
    };


    this.onBlurEnableField = function()
    {

        var objCbOp = getComboInstance("cbCompareOp");
        var sCbSelectedOp = objCbOp.getSelectedItem();
        if (sCbSelectedOp == "Between")
        {
            document.getElementById("dvHiddenData").style.display = "";
            document.getElementById("dvHiddenDiv").style.display = "";
            document.getElementById("cbDays").style.display = "none";
            document.getElementById("rbDayBase").style.display = "none";
            document.getElementById("rbCalBase").style.display = "none";
            document.getElementById("elemFrom").disabled = false;
            document.getElementById("cbDays").disabled = true;
            document.getElementById("dvChngVal").style.marginTop = "-10px";

        }
        else
        {
            document.getElementById("dvHiddenData").style.display = "none";
            document.getElementById("dvHiddenDiv").style.display = "none";
            document.getElementById("cbDays").style.display = "";
            document.getElementById("rbDayBase").style.display = "";
            document.getElementById("rbCalBase").style.display = "";
            document.getElementById("elemFrom").disabled = true;
            document.getElementById("cbDays").disabled = false;
            document.getElementById("dvChngVal").style.marginTop = "";

            var arrRb = document.getElementsByName("rbChooseType");
            arrRb[0].checked = true;
        }
    };
    this.onClkDisableField = function()
    {

        var arrRb = document.getElementsByName("rbChooseType");

        if (arrRb[0].checked) {

            document.getElementById("elemFrom").disabled = true;
            document.getElementById("cbDays").disabled = false;
        } else
        {

            document.getElementById("cbDays").disabled = true;
            document.getElementById("elemFrom").disabled = false;
        }
    };
    this.onClkFilterRecords = function(sColumnName,iFieldId){
        var iReportHandle = 0,iModuleId = 0,iLayoutId,iLayoutGroupId=0;
        iReportHandle = me.getReportHandle();
        iModuleId = me.getModuleId();
        iLayoutId = me.getLayoutId();
        app.removefromBuffer("selectedIndexes_"+iModuleId);

        if(document.getElementById("iLayoutGroupId") && document.getElementById("iLayoutGroupId").value>0)
            iLayoutGroupId=util.encodeURI(document.getElementById("iLayoutGroupId").value);
        var shRowsPerPage = util.encodeURI(AdvPaging.getInstance().iRecordsPerPage);



        var arrActions = new Array();
        arrActions[0] = "OK|listView.applyColwiseFilter("+iModuleId+","+iLayoutId+","+iReportHandle+","+shRowsPerPage+","+iLayoutGroupId+","+iFieldId+")";
        arrActions[1] = "Cancel|";

        var sUrl = "common/fieldsFilter!getColumnFilter.do?fieldId=" + iFieldId;

        var dlgGetRcrdsUsngSpanTextScrn = new DialogBox("rcrds", "Filter - "+sColumnName, 75, 85, 420, 300, sUrl, true, null, false, true, arrActions, null, null, null, null, null, true, null, true, true);
        dlgGetRcrdsUsngSpanTextScrn.setCenter();
        dlgGetRcrdsUsngSpanTextScrn.show();

    };

    this.applyColwiseFilter = function(iModuleId, iLayoutId, iReportHandle, shRowsPerPage, iLayoutGroupId, iFieldId) {

        document.getElementById("dvFilter").style.visibility="visible";//cross.setVisible(parent.document.getElementById("dvFilter"), true);
        var spFilter = parent.document.getElementById("spFilter");
        spFilter.innerHTML = "Filtered";

        var sUrl = "module/moduleView!getListView.do";

        var sParams = "shRowsPerPage=" + shRowsPerPage + "&iLayoutId=" + iLayoutId + "&moduleId=" + iModuleId +
            "&repHandle=" + iReportHandle + "&isViewChange=false&layoutGroupId=" + iLayoutGroupId;
        var iOperator = 0,value,value2;

        var objCBOperator = getComboInstance("cbCompareOp");
        if (objCBOperator)
        {
            iOperator = objCBOperator.getSelectedId();

            var objDayValue = getComboInstance("cbDays");
            if (objDayValue && !document.getElementById("cbDays").disabled) {

                //                    value = objDayValue.getSelectedId();
                value = objDayValue.getSelectedItem();
                sParams += "&&custFilter[0].value=" + value;

            } else {
                value = document.getElementById("elemFrom").value;
                sParams += "&custFilter[0].value=" + value;
                if (iOperator == Constants.IOPERATOR_BETWEEN) {
                    value2 = document.getElementById("elemTo").value;
                    sParams += "&custFilter[0].value2=" + value2;
                }
            }
        }
        else {
            var objMasterCB = getComboInstance("cbMstr");
            if (objMasterCB) {
                value = clMultiCombo.getSelectedIds("cbMstr");
                sParams += "&custFilter[0].value=" + value;
            }
            else {
                value = document.getElementById("rbVal").value;
                sParams += "&custFilter[0].value=" + value;

            }
        }

        sParams += "&custFilter[0].fieldId=" + iFieldId + "&custFilter[0].operator=" + iOperator;
        /*  sParams+= "&custFilter[0].operator=" + util.encodeURI(getComboInstance("cbCompareOp").getSelectedId())
         + "&custFilter[0].value=" +util.encodeURI(document.getElementById("elemFrom").value)+"&custFilter[0].fieldId="+iFieldId
         +"&custFilter[0].type=7";*/
        con.sendPostRequest(sUrl, sParams, null, "listView.arhSearchHandler", false);

    };
    this.onClkUpdateChkValue=function(objRb){
        document.getElementById("rbVal").value=objRb.value;
    };

    this.getSelectionText=function()
    {
        var text = "";
        if (window.getSelection) {
            text = window.getSelection().toString();
        } else if (document.selection && document.selection.type != "Control") {
            text = document.selection.createRange().text;
        }
        return text;
    };

    this.getAuthId = function(sTableId)
    {
        var iAuthId = 0,iColIndex,clTable,iRowIndex,iRowCnt,tdChk,objChkBox,iColCurrentRow=0;
        if(sTableId==undefined || sTableId=="")
            sTableId = "listReportTab_1";
        clTable = new sTable(sTableId);
        var iTableId = listView.getTableId(sTableId);
        iRowCnt = clTable.getRowCount();
        if(iRowCnt>1)
            iColCurrentRow=1;

        iColIndex = clTable.getColCount(iColCurrentRow) - 2;//1 for empty col and 1 for extraidslength;

        for (var i = 0; i < iRowCnt; i++)
        {
            tdChk = clTable.getElementAt(i,0).parentNode;
            objChkBox = cross.getFirstElement(tdChk.childNodes);
            if(objChkBox.checked)
            {
                iRowIndex = objChkBox.parentNode.parentNode.parentNode.rowIndex-1;
                me.iRowIndex=iRowIndex;
                iAuthId = clTable.getValueAt(iRowIndex, iColIndex,true,iColCurrentRow);
            }
        }
        if(iAuthId==null)
            return 0;
        return iAuthId;
    };

    this.isDraftRecordSelected = function(sTableId)
    {
        var arrExtraIds = me.getExtraIds(sTableId, false);

        if(arrExtraIds!=null && arrExtraIds.length > 0)
        {
            for (var i = 0; i < arrExtraIds.length; i++)
            {
                if (arrExtraIds[i][arrExtraIds[0].length - 1] == Constants.IRecordStatus.DRAFT)
                    return true;
            }
        }

        return false;
    };

    var g_isListView = false;
    this.getToggleView = function(isListView) {
        var sUrl,iModuleId,dvMdnRecentMenu;
        g_isListView = isListView;
        sUrl = con.getStruts2Url("module", "moduleView", "getModuleView", false, true);
        if (isListView){
            sUrl += "?windowType=" + Constants.IMODULE_WINDOW.DEFAULT;
            clAppBuffer.setSplitPaneType(Constants.ISPLIT_PANE_TYPE.GENERAL_PANE);
        }
        else{
            sUrl += "?windowType=" + Constants.IMODULE_WINDOW.SPLIT_PANE_WITH_TABBED_PANE;
            clAppBuffer.setSplitPaneType(Constants.ISPLIT_PANE_TYPE.LEFT_PANE);
        }
//            sUrl += "?windowType=" + Constants.IMODULE_WINDOW.SPLIT_PANE;

        /*clFrame.DeleteFrameLength();
         clFrame.removeAll();*/
//        clFrame.DeleteFrameLength();
//        me.removeAllTabbedPanes();

        clFrame.DeleteFrameLength();

        iModuleId = me.getModuleId(document.getElementById("iTableId").value);
        sUrl += "&moduleId=" + iModuleId;
        sUrl += "&isSaveUrl=true&saveUrlType="+Constants.ISave_Url_Type.PRIMARY;
        sUrl += "&splitPaneType="+Constants.ISPLIT_PANE_TYPE.LEFT_PANE;
        clAppBuffer.setSplitPaneType(Constants.ISPLIT_PANE_TYPE.LEFT_PANE);
        util.toggleBackground(true);
        clAppBuffer.setWindowType(isListView?Constants.IMODULE_WINDOW.DEFAULT:Constants.IMODULE_WINDOW.SPLIT_PANE_WITH_TABBED_PANE);
        con.sendPostRequest(sUrl, null, null, "listView.arhSetView");
        home.addBackUrl(sUrl);
//        home.setCenterUI(sUrl, null, null,true, "listView.arhSetView",null,null,true,false);
    };
    this.arhSetView = function(sResponse) {
        /*if (!g_isListView)
         home.hideLeftPanel();
         else
         home.showLeftPanel();*/
        util.toggleBackground(false);
        var dvCenter = document.getElementById("dvCenter");
        dvCenter.innerHTML = sResponse;
        if (typeof window["initAllCombos"] == "function")
            initAllCombos = null;
        if (typeof window["removeAllAdvPageInstances"] == "function")
            removeAllAdvPageInstances();
        loadResources(dvCenter, util.onScriptsLoad);
    };
    this.onChangeColWiseSorting=function(rowObject){
        var iColIndex = 0,sTableId;
        me.setSplitPaneType();
        me.removeAllTabbedPanes();

        if(rowObject)
            iColIndex = rowObject.rowIndex+1;   // picking from dropdown list [col index listview == row index in dropdown list]
        sTableId = "listReportTab_"+document.getElementById("iTableId").value;
        me.reportSorting(true,iColIndex,clSplit.getDetailedView,0,sTableId);// default 0
//        me.reportSorting(true,iColIndex,clSplit.getDetailedView,clSplit.getSelectedRow(),sTableId);
    };
    var g_objDiv = null;
    this.toggleCols = function(event,thisImg){
        var objDiv = cross.getNextSibiling(thisImg);
        if(g_objDiv != objDiv)
            cross.setVisible(g_objDiv,false);
        cross.setVisible(objDiv,!cross.isVisible(objDiv));
        g_objDiv = objDiv;
        cross.cancelBubble(event);
    };

    this.closeDialogBox=function(){
        listView.clearCheckBoxes(0,false);
        listView.callRefreshAction();
    };

    /*
     this.CallBackFunc = function()
     {     var objContainer=document.getElementById("listId");
     var objTable=document.getElementById("containerDiv_1");
     objTable.style.width=objContainer.offsetWidth;
     }*/

    this.removeAllTabbedPanes = function(){
        if(clAppBuffer.getWindowType() == Constants.IMODULE_WINDOW.SPLIT_PANE_WITH_TABBED_PANE){
//            clFrame.DeleteFrameLength();
            clFrame.removeAll();
//            setTimeout(function(){clFrame.removeAll();},78);
        }
    };
    this.isDetailedView = function(){
        return document.getElementById("lisTab");
    };
    this.isTagSearch = function(){
        return document.getElementsByClassName("tagFilter");
    };
    this.onClkGetOpportunitiesList =function(){
        var sUrl,arrActions,clFullModeDialog,clTable,iRowIndex,iRowsPerPage,iTransId;
        sUrl =  "module/communication!getListView.do?moduleId="+Constants.OPPORTUNITIES;
        iTransId = util.encodeURI(me.getSelectedTransId());
        sUrl += "&transId="+iTransId;
        sUrl += "&iLayoutId="+listView.getLayoutId();
        iRowsPerPage = util.encodeURI(me.iRowsPerPage);
        if(iRowsPerPage <= 0)
            iRowsPerPage = 20;
        sUrl += "&rowsPerPage="+iRowsPerPage ;

        arrActions=new Array();
        arrActions[0] = MsgHandler.getMsg(MsgConstants.OK)+"|listView.saveEmailData("+iTransId+")";//TODO
        arrActions[1] = MsgHandler.getMsg(MsgConstants.CLOSE)+"|";

        clTable = new sTable("listReportTab_1");
        iRowIndex = clTable.getCurrentRow()-1;

        clFullModeDialog =  createSimpleFullModeDialogWithFrame("opporModuleDlg"," Select "+clAppBuffer.getModuleCaption(Constants.OPPORTUNITIES,true),sUrl, true, true, arrActions,false,false,false,true);
        clFullModeDialog.setCenter();
        clFullModeDialog.show();

    };
    this.saveEmailData = function(iBaseTransId){
        var iTransIds = listHandler.getSelectedTransIds();
        if(listHandler.validateRowSelection(iTransIds,false)){
            var sUrl;
            sUrl = "module/communication!saveEmailData.do";
            sUrl += "?moduleId="+Constants.OPPORTUNITIES;
            sUrl += "&transId="+util.encodeURI(me.getSelectedTransId());
            sUrl += "&baseTransId="+iBaseTransId;
            con.sendPostRequest(sUrl,null,null,"listView.arhEmailData");
        }
    };
    this.arhEmailData = function(sResponse){
        if(sResponse == 1){
            parent.getDialogBox("opporModuleDlg").hide();
            parent.listView.getRefresh("module/moduleView!getListView.do",false);
        }
    };
    this.setSplitPaneType = function(){
        if(document.getElementById("tdMultipane1"))
            clAppBuffer.setSplitPaneType(Constants.ISPLIT_PANE_TYPE.LEFT_PANE);
        else
            clAppBuffer.setSplitPaneType(Constants.ISPLIT_PANE_TYPE.GENERAL_PANE);
    };
    this.getSplitPaneType = function(){
        if(document.getElementById("tdMultipane1"))
            return Constants.ISPLIT_PANE_TYPE.LEFT_PANE;
        else
            return Constants.ISPLIT_PANE_TYPE.GENERAL_PANE;
    };
    this.setCalback=function(fnListviewActionCallBack)
    {
        this.fnListviewActionCallBack = fnListviewActionCallBack ;
    };

    this.getSummaryBar=function(sParams)
    {
        if(document.getElementById("isSummaryLayoutExists_"+me.getTableId()) && parseInt(document.getElementById("isSummaryLayoutExists_"+me.getTableId()).value)>0)
        {
            var sUrl = con.getStruts2Url("module", "moduleView", "getListviewSummaryBar_nrf");
            var objLayout = document.getElementById("view");
            /*var arrOptions = objLayout.options;
             for(var i=0,iLen=arrOptions.length; i<iLen; i++)
             {
             sParams+="&layoutIds="+arrOptions[i].value;
             sParams+="&layoutNames="+arrOptions[i].text;
             }*/
            if (sParams == null) {
                sParams = "iLayoutId=" + me.getLayoutId();
                sParams += "&moduleId=" + me.getModuleId();
            }
            if(objLayout)
                sParams += "&layoutName="+objLayout.options[objLayout.selectedIndex].text;
            sParams += "&selectedTransId=" + (me.getSummaryLayoutId() > 0 ? me.getSummaryLayoutId() : me.getLayoutId());
            sParams += "&isForCount=true";
            if(document.getElementById("sExtendedWhere_"+me.getTableId())!=null)
            {
                sParams+="&sExtendedWhere="+document.getElementById("sExtendedWhere_"+me.getTableId()).value;
            }


            //me.getRefresh(sUrl,false,0,"listView.arhSummaryBar",sParams);
            /*if(document.getElementById("dvSummaryBar"))
             {
             setTimeout(
             function(){
             con.sendPostRequest(sUrl,sParams,null,"listView.arhSummaryBar",false, document.getElementById("dvSummaryBar"));
             }
             ,5000);

             }*/
            cross.setVisible(document.getElementById("dvSummaryBarMsg"), true);
            cross.setVisible(document.getElementById("dvSummaryBar"), false);
            con.sendPostRequest(sUrl, sParams, null, "listView.arhSummaryBar", false, document.getElementById("dvSummaryBarMsg"));
        }
    };

    this.arhSummaryBar = function(sResponse)
    {
        var objDiv=document.getElementById("dvSummaryBar");
        if(objDiv) {
            objDiv.innerHTML = sResponse;
            if(typeof window["initAllCombos"]=="function")
                initAllCombos=null;
            loadResources(objDiv,util.onScriptsLoad);
            cross.setVisible(document.getElementById("dvSummaryBarMsg"),false);
            cross.setVisible(document.getElementById("dvSummaryBar"),true);
        }

    };

    this.onClkSummaryBarItem=function(iSummaryLayoutId)
    {
        me.setSummaryLayoutId(iSummaryLayoutId);
        me.sSortParams="";
        var iModuleId=this.getModuleId();
        app.removefromBuffer("selectedIndexes_"+iModuleId)
        //var sReturn=me.getRefresh(null,true,false);
        var sUrl = document.getElementById("sUrl").value;

        if(me.sTableId==undefined || me.sTableId=="")
            me.sTableId = "listReportTab_1";


        var iTableId = listView.getTableId(me.sTableId);
        var iReportHandle,iLayoutId,iLayoutGroupId= 0,iSearchType=0;
        iModuleId = me.getModuleId(iTableId);
        iLayoutId = me.getLayoutId(iTableId);
        iReportHandle = me.getReportHandle(iTableId);
        me.iRowsPerPage = util.encodeURI(AdvPaging.getInstance().iRecordsPerPage);

        if(document.getElementById("searchType"))
            iSearchType=document.getElementById("searchType").value;
        if(document.getElementById("iLayoutGroupId") && document.getElementById("iLayoutGroupId").value>0 && (iSearchType != Constants.IListviewFilters.ADVANCE_SEARCH ))
            iLayoutGroupId=util.encodeURI(document.getElementById("iLayoutGroupId").value);
        var sParams = "shRowsPerPage=" + me.iRowsPerPage + "&iLayoutId=" + iLayoutId + "&moduleId=" + iModuleId + "&repHandle=" + iReportHandle
            +"&isViewChange=false&layoutGroupId="+iLayoutGroupId+"&isClearFilter=false";
        /*if(document.getElementById("configActionId_"+iTableId))
         sParams+="&configActionId="+document.getElementById("configActionId_"+iTableId).value;*/

        //sParams+=me.getListConfigParams();
        sParams+=me.sSearchParams;

        //var iLayoutFilter=-1;
        //if(document.getElementById("bLayoutFilterExist"))
        //    iLayoutFilter=document.getElementById("bLayoutFilterExist").value;
        if((util.trim(me.sSearchParams).length==0) )
        {
            if(iSearchType == Constants.IListviewFilters.LAYOUT_SEARCH)
                sParams += "&" + clSearch.getSearchInputData();
            else if (iSearchType == Constants.IListviewFilters.FIELD_SEARCH)
                sParams += me.getFieldsFilterData();
            else if (iSearchType == Constants.IListviewFilters.TEXT_SEARCH)
                sParams += me.getTextSearchData(me.getModuleId());
            else if (iSearchType == Constants.IListviewFilters.ALPHA_SEARCH)
            {
                sParams +="&isAlphaSearch=true";
                sParams  += "&alpha=" + util.encodeURI(document.getElementById("alphaVal").value);
            }
            else if (iSearchType == Constants.IListviewFilters.NUMARIC_SEARCH)
            {
                sParams +="&isAlphaSearch=true";
                sParams +="&isNumaric=true";
            }
            else if (iSearchType == Constants.IListviewFilters.LOOKIN_SEARCH && me.iUserId>0)
            {
                sParams+= "&userId="+util.encodeURI(me.iUserId);
            }
        }
        if(me.sEventCallBack!=null && me.sEventCallBack!="") //Condition for MailAll
        {
            var arrParams =eval(me.sEventCallBack)(iModuleId);
            if(arrParams[0].length>0)
                sUrl = arrParams[0];
            if(arrParams[1]!=undefined)
                sParams+=arrParams[1];
        }
        if(document.getElementById("sExtendedWhere_"+me.getTableId())!=null)
        {
            sParams+="&sExtendedWhere="+document.getElementById("sExtendedWhere_"+me.getTableId()).value;
        }
        if(document.getElementById("iSortIndex"+me.getTableId())!=null)
        {
            if (document.getElementById("bChkBoxExist_"+me.getTableId()).value>0)
                sParams+="&bChkBoxExist="+util.encodeURI(true);
            if (document.getElementById("bReportActionsExist_"+me.getTableId()).value>0)
                sParams+="&bReportActionsExist="+util.encodeURI(true);//document.getElementById("bReportActionsExist_"+iTableId).value;
        }

        var objTable = null;
        if(parseInt(document.getElementById("iNodataFound").value)>0)
            objTable = document.getElementById("iNodataFound");
        else objTable = document.getElementById(me.sTableId);

        if(me.bCurrentSummaryLayoutId)
        {
            iSummaryLayoutId=me.getSummaryLayoutId();
            me.iCurrentSummaryLayoutId=iSummaryLayoutId;
            sParams+="&summaryLayoutId="+iSummaryLayoutId;
            me.bCurrentSummaryLayoutId=false;
            util.toggleElementBackground(objTable.parentNode,true,false);
            con.sendPostRequest(sUrl,sParams,null,"listView.arhSummaryBarItem",false);
        }
    };

    this.arhSummaryBarItem=function(sResponse)
    {
        var objTable = document.getElementById(me.sTableId);
        util.toggleElementBackground(objTable.parentNode,false);
        me.arhSearchHandler(sResponse);
        me.hideRecordsNotification();
        me.setNewRecordCnt();
        me.bCurrentSummaryLayoutId=true;
        if(me.iCurrentSummaryLayoutId!=me.getSummaryLayoutId())
        {
            me.onClkSummaryBarItem(me.getSummaryLayoutId());
        }

    };

    this.setNewRecordCnt=function()
    {
        var iNewRecordCnt=document.getElementById("iNewRecrdCnt").value;
        if(document.getElementById("spUnredCount")!=null) {
            if (parseInt(iNewRecordCnt) > 0) {
                document.getElementById("spUnredCount").innerHTML = parseInt(iNewRecordCnt);
                document.getElementById("spNew").innerHTML = "New";
                if(!me.bIsNewRecordSort)
                    document.getElementById("tblNewCount").style.backgroundColor = "#16A765";
                document.getElementById("newCntTblId").style.visibility= "visibility";
                document.getElementById("newCntTblId").style.display= "block";
            }
            else {
                document.getElementById("spUnredCount").innerHTML = "";
                document.getElementById("spNew").innerHTML = "";
                document.getElementById("tblNewCount").style.backgroundColor = "";
            }
        }
    }
    this.setSummaryLayoutId=function(iSummaryLayoutId)
    {
        document.getElementById("iSummaryLayoutId_"+me.getTableId()).setAttribute("summaryLayoutId",iSummaryLayoutId);
    };
    this.getSummaryLayoutId=function()
    {
        return parseInt(document.getElementById("iSummaryLayoutId_"+me.getTableId()).getAttribute("summaryLayoutId"));
    };

    this.getReminderView = function(obj,sValue,iModuleId,iTransId,sHeaderName,evt,iFieldId)
    {
        var sUrl,arrPositions,clDlg,sDlg = "reminderDlg";
        arrPositions = cross.getPosition(obj);
        sUrl = con.getStruts2Url("module","moduleView","getTaskView");
        //sUrl += "date="+util.trim(obj.textContent);
        sUrl += "date="+util.trim(sValue);
        sUrl+="&sFnSaveCallback=listView.afterSaveCallBack";
        sUrl+="&moduleId="+iModuleId+"&baseTransId="+iTransId+"&sHeaderName="+sHeaderName+"&fieldId="+iFieldId;
        clDlg = getDialogBox(sDlg);
        clDlg = new DialogBox(sDlg,MsgHandler.getMsg(MsgConstants.ADD)+" "+MsgHandler.getMsg(MsgConstants.REMINDER)+":"+'<span style="color:#526651;">'+sHeaderName+'</span>',arrPositions[0]-document.body.scrollLeft,(arrPositions[1]+25)-document.body.scrollTop,490,245,sUrl,true,null,true,true,null,false,null,false,false,false,true,true,true,false);
        clDlg.show();
    };

    this.afterSaveCallBack =function()
    {
        getDialogBox("reminderDlg").hide();
    };
    this.hideReminderview = function()
    {
        clearTimeout(cross.timer);
        //          if(getDialogBox("reminderDlg"))
        //          getDialogBox("reminderDlg").hide();
    };

    this.onClkShowBackUrls = function(sUrl,obj)
    {
        msg.removeToastWindowDlg('linkCount');
        msg.showToastWindowFromURL(obj,sUrl,true,'linkCount',Constants.PRONG_TOP,null,null,null,null,null,null,null,null,null,null,null,true);
        document.getElementById("msgBodylinkCount").style.paddingTop = "0";
    };
    me.sBackUrl =null;
    //('module/moduleView!getBackUrlList.do')
    this.onClkSetUrl = function(sUrl,iIndex,isFromMenu360)
    {
        me.sBackUrl = sUrl;
        var backIndex=-1;

        if(iIndex > 0)
        {
//            backIndex="";
//            for(var i=iIndex;i>1;i--)
            {
                backIndex = document.getElementById("tdLink"+iIndex).getAttribute("iValue")  ;

            }
        }
        if(isFromMenu360)
        {
            //clNavMenu.hideReminders();
//             home.setCenterUI('H89QbtdzZT^jX8UUULlsTry9KjPMvKw2LqMJPEKfcediexDhQ1VS0^mHqL8ZbUDP!n?moduleId=2305&title=Account 360 �&byAction=10&menuId=0&typeId=26&type=3');
            home.setCenterUI(sUrl);
        }
        else
            con.sendPostRequest("module/moduleView!deleteBackUrl.do?backIndex="+backIndex, "", null, "listView.arhUrl", false, null, null, false, true, ACTION_CONVERT);

    };

    this.arhUrl = function()
    {
        home.setCenterUI(me.sBackUrl,null,true);
    };

    this.getLeadStatus=function()
    {
        var arrExtraIds = this.getExtraIds();
        return arrExtraIds[0][1];
    };

    this.getLeadState=function()
    {
        var arrExtraIds = this.getExtraIds();
        return arrExtraIds[0][2];
    };

    this.resizeListview=function(iWidth,iHeight)
    {
        var objCenterContent = document.getElementById("navContentAreaDv");
        var objMenuContent = document.getElementById("navDv");
        var sUrl = window.location.href;
        var isHomeView = sUrl.includes("crmhome.do");

        if(isHomeView)
        {
            if(objMenuContent.offsetWidth<220)
                iWidth = iWidth-90;
            else
                iWidth = iWidth-265;

        }
        else
        {
            if(objMenuContent.offsetWidth<220)
                iWidth = iWidth-60;
            else
                iWidth = iWidth-232;

        }
        var iTableId=0;
        if(document.getElementById("iTableId")!=null)
            iTableId= document.getElementById("iTableId").value;
        var dvContainer = document.getElementById("containerDiv_" + iTableId);
        if (dvContainer)
        {
            dvContainer.setAttribute("iTableWidth", iWidth);
            dvContainer.style.width = iWidth;
            dvContainer.style.transition="width 0.5s";
            dvContainer.children[0].setAttribute("width", iWidth);

            setTimeout(function(){
                dvContainer.style.transition="";
            },600);
        }
    };
};

var listHandler=new function()
{
    var me=this;
    this.iModuleId=null;

    this.setModuleId=function(iModuleId)
    {
        this.iModuleId=iModuleId;
    };

    this.getModuleId=function()
    {
        return this.iModuleId;
    };

    /*this.getContractRenewal = function()
     {
     var sUrl = "support/contract!getContractRenewal.do";
     var iTransId=listView.getSelectedTransId();
     var iModuleId= listView.getModuleId();
     con.sendPostRequest(sUrl+"?moduleId="+iModuleId+"&transId="+iTransId,null,null,"listHandler.arhPaymentRequest");
     }*/

    /**
     * This method is used for getting the details for payment gateway.
     * @param byActionId
     */
    this.getPaymentRequest = function(byActionId)
    {
        var sUrl = "payment/gateway!getPaymentGateway.do";
        var arrTransIds=listView.getTransIds();
        var iModuleId= listView.getModuleId();
        var arrExtraIds = listView.getExtraIds();
        var sModuleName =clAppBuffer.getModuleCaption(iModuleId, true);
        var iCount=0;
        //for(var k=0;k<arrTransIds.length;k++) {
        //    var iStatus = arrExtraIds[k][0];
        //    if(iStatus==Constants.IFA_TRANS_STATUS.OPEN ||
        //        iStatus==Constants.IFA_TRANS_STATUS.DUE ||
        //        iStatus==Constants.IFA_TRANS_STATUS.PARTIALLY_ADJUSTED ||
        //        iStatus==Constants.IFA_TRANS_STATUS.PARTIALLY_BILLED ||
        //        iStatus==Constants.IFA_TRANS_STATUS.PARTIALLY_PAID)
        //    {
        //        iCount=iCount+1;
        //    }
        //}
        if (arrTransIds.length > 0) {
            var  sTransIds = null;
            for(var k=0;k<arrTransIds.length;k++) {
                if(sTransIds==null)
                    sTransIds = arrTransIds[k];
                else
                    sTransIds+= ","+arrTransIds[k];
            }
             //if(arrTransIds.length== iCount) {
                con.sendPostRequest(sUrl + "?moduleId=" + iModuleId + "&transId=" + sTransIds + "&actionId=" + byActionId, null, null, "listHandler.arhPaymentRequest", false, null, null, false, false, ACTION_LOADING, false, [byActionId]);
             //}
             //else if(iCount<arrTransIds.length) {
             //   msg.showMessage(0,MsgHandler.getMsg(MsgConstants.PAYMENT_STATUS_RESTRICTION, 0, 0, sModuleName),"Info");
             //}
        } else
            msg.showMessage(0,MsgHandler.getMsg(MsgConstants.SELECT_RECORD_TO_PERFORM_ACTION,null,null));
    };

    this.arhPaymentRequest_old = function(sResponse)
    {
        var iPayStatusComplete = 299;
        var sRes = eval(sResponse);
        if(sRes!=null)
        {
            if(sRes.length>2)
            {
                var iModuleId = sRes[3];
                var iTemplateId = sRes[0];
                var sFromEmailId = sRes[2];
                var sRecordName = sRes[1];
                var iTransId = sRes[6];
                var iGatewayType = sRes[7];
                var sCompanyCode = sRes[8];
                var arrToMailIds = sRes[5];
                if(arrToMailIds==null)
                {
                    msg.showMessage(0,sRecordName+" "+MsgHandler.getMsg(MsgConstants.NO_MAIL_FOUND,null,null),"Info");
                }else if(iGatewayType == Constants.TYPE_EZETAP)
                {
                    /*var arrActions = new Array();
                     arrActions[0] = MsgHandler.getMsg(MsgConstants.CANCEL) + "|clEzetapStatusDlg.onClkCancel";
                     sUrl = "payment/gateway!doRequest.do?moduleId="+iModuleId+"&transId="+iTransId+"&ccode="+sCompanyCode+"&gatewayType="+iGatewayType;
                     var clEazetapDlg = new DialogBox("eazetapStatusDlg", "", 100, 50, 350, 450, sUrl, true, null, true, true, arrActions, null, null, true, null, null, false, true, false, true,null,false,null,true,true);
                     clEazetapDlg.setCenter();
                     clEazetapDlg.show();*/
                    home.showEzeTapPaymentDlg(iModuleId,iTransId,null,sCompanyCode);
                }
                else if(arrToMailIds.length == 1)
                {
                    msg.showConfirm(MsgHandler.getMsg(MsgConstants.PAYMENT_CONFIRMATION,null,null)+" <span style='font-size:12px;color:#666;font-weight: 700;'>"+sRecordName+"</span> ( <span style='color:#0075D2;'>"+arrToMailIds[0]+"</span> )?",
                        "Confirm",listHandler.confirmPaymentRequest,[iModuleId,iTemplateId,sFromEmailId,arrToMailIds[0],sRecordName,iTransId])
                }
                else{
                    var sToMailIds = null;
                    for(var i=0; i<arrToMailIds.length; i++)
                    {
                        if(sToMailIds==null)
                            sToMailIds = arrToMailIds[i];
                        else
                            sToMailIds+=","+arrToMailIds[i];
                    }
                    var sUrl = "payment/gateway!getEmailList.do?moduleId="+iModuleId+"&templateId="+iTemplateId+"&fromMail="+sFromEmailId+"&toMailIds="+sToMailIds+"&recordName="+sRecordName+"&transId="+iTransId;
                    var arrActions = new Array();
                    arrActions[0] = MsgHandler.getMsg(MsgConstants.OK,0,0)+"|clPaymentEmail.sendMail()|";//3rd param onwards===attributes
                    arrActions[1] = MsgHandler.getMsg(MsgConstants.CANCEL,0,0)+"|";

                    var clEmailDialog = new DialogBox("clEmailList", "Email List", 100, 100, 300, 300, sUrl, true, null, true, true, arrActions,null,null,null,null,true,null,true);
                    clEmailDialog.setCenter();
                    clEmailDialog.show();
                }
            }
            else if(sRes[0]==iPayStatusComplete)
            {
                var sRecordName = sRes[1];
                msg.showMessage(0,MsgHandler.getMsg(MsgConstants.PAYMENT_ALREADY_DONE,null,null)+" "+sRecordName,"Info");
            }
            else {
                var sModuleName = sRes[0];
                msg.showMessage(0,sModuleName+" "+MsgHandler.getMsg(MsgConstants.NO_EMAIL_FIELD_FOUND,null,null),"Info");
            }
        }
        else
            msg.showMessage(0,MsgHandler.getMsg(MsgConstants.NO_EMAIL_SETTINGS_DEFINED,null,null),"Info");
    };

    /**
     * This method is used for setting response and get details for gateway and emails.
     * @param sResponse
     * @param iStatusCode
     * @param sMsg
     * @param appValue
     * @param objReqCache
     */
    this.arhPaymentRequest = function(sResponse, iStatusCode, sMsg, appValue, objReqCache)
    {
        var iPayStatusComplete = 299;
        var iMSG_BUSINESS_MESSAGE = 5;
        var sRes = eval(sResponse);
        if( sRes != null )
        {
            if( sRes.length > 2 )
            {
                var iModuleId = sRes[0];
                var sTransId = sRes[1];
                var iPaymentGatewayId = sRes[2];
                var sCompanyCode = sRes[3];
                var iEmailCount = parseInt(sRes[4]);
                var iGatewayCount = parseInt(sRes[5]);
                var sToEmailAddress = sRes[6];// if only one email address exists
                var sRecordName = sRes[7];//we required record name for confirmation alert if only one email address exists
                var iNoOfTransIds = (sTransId.toString()).split(",").length;

                var byActionId = parseInt(objReqCache[0]);

                //[5]= count of mailids
                //[9]= count of gatewaus
                //[10]= actionid, device base / non device based


                if( iGatewayCount == 0  ) //arrToMailIds==null
                {
                    msg.showMessage(0,MsgHandler.getMsg(MsgConstants.PLEASE_ACTIVE_AT_LEAST_ONE)+" "+(MsgHandler.getMsg(MsgConstants.PAYMENT_GATEWAY)).toLowerCase(),"Info");
                }
                else if( byActionId == Constants.IActions.PAYMENT_ON_DEVICE )// iActionid= device based
                {
                    /*var arrActions = new Array();
                     arrActions[0] = MsgHandler.getMsg(MsgConstants.CANCEL) + "|clEzetapStatusDlg.onClkCancel";
                     sUrl = "payment/gateway!doRequest.do?moduleId="+iModuleId+"&transId="+iTransId+"&ccode="+sCompanyCode+"&gatewayType="+iGatewayType;
                     var clEazetapDlg = new DialogBox("eazetapStatusDlg", "", 100, 50, 350, 450, sUrl, true, null, true, true, arrActions, null, null, true, null, null, false, true, false, true,null,false,null,true,true);
                     clEazetapDlg.setCenter();
                     clEazetapDlg.show();*/

                    // if count of gatewaus =0
                    if(iGatewayCount == 1) {
                        home.showEzeTapPaymentDlg(iModuleId, iTransId, null, sCompanyCode,null,null,null,iPaymentGatewayId);
                    }
                     else // case 1: multiple gateways ,
                    {
                        var sUrl = "module/paymentgatewaymodule!getPayGatewaysList.do";
                        var sMethodName =  "clPayOptions.onGatewaySelect()";
                        sUrl += "?moduleId="+iModuleId+"&transId="+iTransId+ "&actionId="+byActionId+"&cCode="+sCompanyCode;

                        var arrActions = new Array();
                        arrActions[0] = MsgHandler.getMsg(MsgConstants.OK,0,0)+"|"+sMethodName+"|";
                        arrActions[1] = MsgHandler.getMsg(MsgConstants.CANCEL,0,0)+"|";

                        var clEmailDialog = new DialogBox("payOptionsGatewayDlg","Gateways List", 100, 100, 430,300, sUrl, true, null, true, true,arrActions,null,null,null,null,true,null,true);
                        clEmailDialog.setCenter();
                        clEmailDialog.show();
                    }
                }
                else if( iEmailCount == 0 && iNoOfTransIds == 1 ) //arrToMailIds==null
                {
                    //msg.showMessage(0,sRecordName+" "+MsgHandler.getMsg(MsgConstants.NO_MAIL_FOUND,null,null),"Info");
                    msg.showMessage(0,"Selected "+ clAppBuffer.getModuleCaption(iModuleId) +" does not have email address and mobile number","Info");
                }
                //else if( iEmailCount == 1 && iGatewayCount == 1 )
                //{
                //    msg.showConfirm(MsgHandler.getMsg(MsgConstants.PAYMENT_CONFIRMATION,null,null)+" <span style='font-size:12px;color:#666;font-weight: 700;'>"+sRecordName+"</span> ( <span style='color:#0075D2;'>"+sToEmailAddress+"</span> )?",
                //        "Confirm",listHandler.confirmPaymentRequest,[iModuleId,sToEmailAddress,sRecordName,iTransId,iPaymentGatewayId])
                //}
                //else if( ( iEmailCount > 1 && iGatewayCount == 1 ) ||
                //    ( iEmailCount == 1 && iGatewayCount > 1 ) ||
                //    ( iEmailCount > 1 && iGatewayCount > 1 ) )
                //{

                    //var sUrl = "module/paymentgatewaymodule!getPayEmailsList.do";
                    //var sDlgTitle =  "Emails List";
                    //var sMethodName =  "clPayOptions.onMailSelect()";
                    //var iWidth=430,iHeight=300,isActions=true,sDlgBoxId="Mail";
                    //if( iEmailCount == 1 && iGatewayCount > 1 )
                    //{
                    //    sUrl = "module/paymentgatewaymodule!getPayGatewaysList.do";
                    //    sDlgTitle =  "Gateways List";
                    //    sMethodName =  "clPayOptions.onGatewaySelect()";
                    //    sDlgBoxId="Gateway";
                    //    //iWidth=550;
                    //    /* iHeight=400;*/
                    //}
                    //else

                    else if( (iEmailCount > 0 || iNoOfTransIds > 1 )&& iGatewayCount > 0 ) {
                        sUrl = "module/paymentgatewaymodule!getPayEmailsAndGatewaysList.do";
                        sDlgTitle =  "Payment options";
                        iWidth=600;
                        iHeight=600;
                        sMethodName =  "clPayOptions.onSelectMailAndGateWay()";
                        sDlgBoxId="Wizard";
                        isActions=false;

                    var iReportHandle = 0;
                    var iAllSelected = document.getElementById("iAllRecords");
                    if(iAllSelected!=null && iAllSelected.style.display!="none")
                        iReportHandle =  parseInt(listView.getReportHandle());

                    sUrl += "?moduleId="+iModuleId+"&transId="+sTransId+ "&actionId="+byActionId+"&toEmailAddress="+sToEmailAddress+"&pType="+iPaymentGatewayId+"&isWizardDisplay="+(!isActions)+"&recordName="+sRecordName+"&reportHandle="+iReportHandle;

                    var arrActions = new Array();
                    if(isActions)
                    {
                        arrActions[0] = MsgHandler.getMsg(MsgConstants.OK, 0, 0) + "|" + sMethodName + "|";//3rd param onwards===attributes
                        arrActions[1] = MsgHandler.getMsg(MsgConstants.CANCEL, 0, 0) + "|";
                    }
                    else
                        arrActions[0] = MsgHandler.getMsg(MsgConstants.CANCEL, 0, 0) + "|";

                    var clEmailDialog = new DialogBox("payOptions"+sDlgBoxId+"Dlg",sDlgTitle, 100, 100, iWidth, iHeight, sUrl, true, null, true, true,(isActions?arrActions:null),null,null,null,null,true,null,true);
                    clEmailDialog.setCenter();
                    clEmailDialog.show();
                }



            }
            else if( sRes[0] == iPayStatusComplete )
            {
                var sRecordName = sRes[1];
                msg.showMessage(0,MsgHandler.getMsg(MsgConstants.PAYMENT_ALREADY_DONE,null,null)+" "+sRecordName,"Info");
            }
            else if(sRes[0] == iMSG_BUSINESS_MESSAGE) {
                msg.showMessage(0,sRes[1],"Info");
            }
            else {
                var sModuleName = sRes[0];
                msg.showMessage(0,sModuleName+" "+MsgHandler.getMsg(MsgConstants.NO_EMAIL_FIELD_FOUND,null,null),"Info");
            }
        }
        else
            msg.showMessage(0,MsgHandler.getMsg(MsgConstants.NO_EMAIL_SETTINGS_DEFINED,null,null),"Info");
    };

    /**
     * Author: Ayyappa
     * this method is called on selecting payment request in SI
     * @param sResponse
     */
    this.arhPayOptions = function(sResponse,iStatusCode,sMsg,appValue,objReqCache)
    {
        sResponse = eval(sResponse);
        if(sResponse!=null) {
            var iStatus = parseInt(sResponse[0]);
            var sInfoMessage = sResponse[1];
            if(sInfoMessage!=null ) {
                setTimeout(function(){
                    msg.showMessage(0,sInfoMessage,"Info");
                },2000)
            }
                if (iStatus == 1) {
                    listView.clearCheckBoxes(0, false);
                    listView.getRefresh();

                    //msg.showToastMsg(MsgHandler.getMsg(MsgConstants.PAYMENT_SEND_SUCCESSFULLY, null, null) + (objReqCache[1] != null ? (" " + objReqCache[1]) : ''));
                    msg.showToastMsg(MsgHandler.getMsg(MsgConstants.PAYMENT_SEND_SUCCESSFULLY, null, null));
                    getDialogBox("payOptions" + objReqCache[0] + "Dlg").hide();
                }
                else {
                    getDialogBox("payOptions" + objReqCache[0] + "Dlg").hide();
                }

        }
    };
    this.confirmPaymentRequest = function(iModuleId,sToEmailAddress,sRecordName,iTransId,byPaymentGatewayId,iStatus) {
        if (iStatus == Constants.YES) {
            var sUrl = "payment/gateway!sendPaymentMail.do?moduleId=" + iModuleId + "&toMailId=" + sToEmailAddress+"&recordName="+sRecordName+"&transId="+iTransId+"&pType="+byPaymentGatewayId  ;
            con.sendPostRequest(sUrl,null,null,"listHandler.arhMailSend"); // show Toast Msg.
        }
        else if(iStatus == Constants.NO) {
            listView.clearCheckBoxes(0,false);
            parent.listView.getRefresh();
        }
    };

    this.arhMailSend = function(sResponse) {
        var sRecordName ="";
        var sRes = eval(sResponse);
        if(sRes!=null && sRes[0]==1) {
            if(sRes[1]!=null)
                sRecordName = sRes[1];
            listView.clearCheckBoxes(0,false);
            parent.listView.getRefresh();
            msg.showToastMsg(MsgHandler.getMsg(MsgConstants.PAYMENT_SEND_CONFIRMATION,null,null)+" "+sRecordName);
        }

    };

    this.validateCMSBookingRowStatus=function(byActionId,byCheckStatus,byCheckStatus1,byCheckStatus2,byCheckStatus3)
    {
        var bCheck=false;
        var iRowStatus=0;
        var clTable,arrRows,arrExtraIds;
        clTable=new sTable("listReportTab_"+listView.getTableId());
        var iRowCount = clTable.getRowCount();
        //arrRows=clTable.getSelectedRowIndexes(1);
        //arrExtraIds=listView.getExtraIds("listReportTab_"+listView.getTableId());
        for(var i=0;i<iRowCount;i++)
        {
            var chkRow=clTable.getElementAt(i,0);
            if(chkRow.checked)
            {
                var trCell = chkRow.parentNode.parentNode.parentNode;
                var iRowIndex =trCell.rowIndex-1;
                var iExtraIdStatus= document.getElementById("iExtraId"+iRowIndex+"0").innerHTML;
                if(byActionId==Constants.ASSIGN || byActionId==Constants.PAYMENT_PROCESSED)
                {
                    if(iExtraIdStatus==byCheckStatus || iExtraIdStatus==byCheckStatus1 || iExtraIdStatus==byCheckStatus2)
                    {
                        bCheck=true;
                    }
                    else
                    {
                        bCheck=false;
                        break;
                    }
                }
                else if(byActionId==Constants.CANCEL)
                {
                    if(iExtraIdStatus==byCheckStatus || iExtraIdStatus==byCheckStatus1 || iExtraIdStatus==byCheckStatus2)//||iExtraIdStatus==byCheckStatus3
                    {
                        bCheck=true;
                    }
                    else
                    {
                        bCheck=false;
                        break;
                    }
                }
                else if(byActionId==Constants.MISSING || byActionId==Constants.VALIDATE
                    || byActionId==Constants.CONFIRM_BOOKING || byActionId==Constants.CONFIRM_BY_CHECKER )
                {
                    if(iExtraIdStatus==byCheckStatus || iExtraIdStatus==byCheckStatus1 || iExtraIdStatus==byCheckStatus2)
                    {
                        bCheck=true;
                    }
                    else
                    {
                        bCheck=false;
                        break;
                    }
                }
                else if(byActionId==Constants.PICKED_UP)
                {
                    if(iExtraIdStatus==byCheckStatus || iExtraIdStatus==byCheckStatus1)
                    {
                        bCheck=true;
                    }
                    else
                    {
                        bCheck=false;
                        break;
                    }
                }
                else if(byActionId==Constants.CMS_HOLD)
                {
                    if(iExtraIdStatus==byCheckStatus || iExtraIdStatus==byCheckStatus1|| iExtraIdStatus==byCheckStatus2)
                    {
                        bCheck=false;
                        break;
                    }
                    else
                    {
                        bCheck=true;
                    }
                }
                else if(byActionId==Constants.CMS_RELEASE)
                {
                    if(iExtraIdStatus==byCheckStatus || iExtraIdStatus==byCheckStatus1)
                    {
                        bCheck=true;
                    }
                    else
                    {
                        bCheck=false;
                        break;
                    }
                }
            }
        }
        return bCheck;
    }

    this.validateCMSDeliveriesRowStatus=function(byActionId,byCheckStatus,byCheckStatus1,byCheckStatus2,byCheckStatus3,
                                                 byCheckStatus4,byCheckStatus5,byCheckStatus6,byCheckStatus7,byCheckStatus8)
    {
        var bCheck=false;
        var iRowStatus=0;
        var clTable,arrRows,arrExtraIds;
        clTable=new sTable("listReportTab_"+listView.getTableId());
        var iRowCount = clTable.getRowCount();
        //arrRows=clTable.getSelectedRowIndexes(1);
        //arrExtraIds=listView.getExtraIds("listReportTab_"+listView.getTableId());

        for(var i=0;i<iRowCount;i++)
        {
            var chkRow=clTable.getElementAt(i,0);
            if(chkRow.checked)
            {
                var trCell = chkRow.parentNode.parentNode.parentNode;
                var iRowIndex =trCell.rowIndex-1;
                var iExtraIdStatus= document.getElementById("iExtraId"+iRowIndex+"0").innerHTML;
                if(byActionId==Constants.ASSIGN || byActionId==Constants.ROUTE_CHANGE)
                {
                    if(iExtraIdStatus==byCheckStatus || iExtraIdStatus==byCheckStatus1 || iExtraIdStatus==byCheckStatus2
                        || iExtraIdStatus==byCheckStatus3 || iExtraIdStatus==byCheckStatus4 || iExtraIdStatus==byCheckStatus5
                        || iExtraIdStatus==byCheckStatus6 || (byActionId==Constants.ASSIGN && iExtraIdStatus==byCheckStatus7))
                    {
                        bCheck=true;
                    }
                    else
                    {
                        bCheck=false;
                        break;
                    }
                }
                else if(byActionId==Constants.RETURN_WAYBILL)
                {
                    if(iExtraIdStatus==byCheckStatus || iExtraIdStatus==byCheckStatus1 || iExtraIdStatus==byCheckStatus2
                        || iExtraIdStatus==byCheckStatus3 || iExtraIdStatus==byCheckStatus4 )
                    {
                        bCheck=true;
                    }
                    else
                    {
                        bCheck=false;
                        break;
                    }
                }
                else if(byActionId==Constants.VALIDATE || byActionId==Constants.REQUESTED_TO_DELIVER)
                {
                    if(iExtraIdStatus==byCheckStatus)
                    {
                        bCheck=true;
                    }
                    else
                    {
                        bCheck=false;
                        break;
                    }
                }
                else if(byActionId==Constants.DAMAGE_SHIPMENT)
                {
                    if(iExtraIdStatus==byCheckStatus || iExtraIdStatus==byCheckStatus1)
                    {
                        bCheck=false;
                        break;
                    }
                    else
                    {
                        bCheck=true;
                    }
                }
                else if( byActionId==Constants.SHIPMENT_RETURN)
                {

                    if(iExtraIdStatus==byCheckStatus || iExtraIdStatus==byCheckStatus1 || iExtraIdStatus==byCheckStatus2)
                    {
                        bCheck=true;
                    }
                    else
                    {
                        bCheck=false;
                        break;
                    }
                }
                else if( byActionId==Constants.DELIVERY_CLOSE)
                {

                    if(iExtraIdStatus==byCheckStatus || iExtraIdStatus==byCheckStatus1 ||
                        iExtraIdStatus==byCheckStatus2 || iExtraIdStatus==byCheckStatus3)
                    {
                        bCheck=true;
                    }
                    else
                    {
                        bCheck=false;
                        break;
                    }
                }
                else if( byActionId==Constants.CONSIGNEE_WILL_COLLECT)
                {
                    if(iExtraIdStatus==byCheckStatus || iExtraIdStatus==byCheckStatus1 || iExtraIdStatus==byCheckStatus2
                        || iExtraIdStatus==byCheckStatus3 || iExtraIdStatus==byCheckStatus4)
                    {
                        bCheck=true;
                    }
                    else
                    {
                        bCheck=false;
                        break;
                    }
                }
                else if( byActionId==Constants.CONFIRM_DELIVERY)
                {
                    if(iExtraIdStatus==byCheckStatus || iExtraIdStatus==byCheckStatus1)
                    {
                        bCheck=true;
                    }
                    else
                    {
                        bCheck=false;
                        break;
                    }
                }
            }
        }
        return bCheck;
    }

    this.arhValidateBooking=function(sResponse)
    {
        if(sResponse==1)
        {
            msg.showToastMsg(MsgHandler.getMsg(MsgConstants.CMS_SHIPMNT_VALIDATED));
            listView.clearCheckBoxes(0,false);
            listView.refreshListView(null,null,true);
        }
    }

    this.arhCancelManifest=function(sResponse)
    {
        if(sResponse==1)
        {
            msg.showToastMsg(MsgHandler.getMsg(MsgConstants.CMS_CANCEL_MANIFEST));
            listView.clearCheckBoxes(0,false);
            listView.refreshListView(null,null,true);
        }
    }

    this.arhConsigneewillcollect=function(sResponse)
    {
        if(sResponse==1)
        {
            msg.showToastMsg(MsgHandler.getMsg(MsgConstants.CMS_CONSIGNEE_COLLECTED));
            listView.clearCheckBoxes(0,false);
            listView.refreshListView(null,null,true);
        }
    }
    this.arhRequestDelivered=function(sResponse)
    {
        if(sResponse==1)
        {
            msg.showToastMsg(MsgHandler.getMsg(MsgConstants.CMS_REQUESTED_TO_DELIVER));
            listView.clearCheckBoxes(0,false);
            listView.refreshListView(null,null,true);
        }
    }

    this.arhreturnWayBill=function(sResponse)
    {
        if(sResponse>0)
        {
            listHandler.onClkOpenActionInDLG(MsgHandler.getMsg(MsgConstants.CMS_RETURN_WAYBILL),"module/moduleView!getEditView.do?viewIn=1&sFnSaveCallback=clCMSBookings.saveReturnWaybill&transId="+sResponse+"&moduleId="+Constants.CMS_BOOKING+"&byFromDeliveries=1&calledFrom="+Constants.CMS_DELIVERIES,900,450,"","clReturnWayBill");
        }
        else
        {
            msg.showMessage(0,MsgHandler.getMsg(MsgConstants.CMS_NO_SHP_DEL));
        }
    }

    this.arhRoutechange=function(sResponse)
    {
        if(sResponse>0)
        {
            listHandler.onClkOpenActionInDLG(MsgHandler.getMsg(MsgConstants.CMS_ROUTE_CHANGE),"module/moduleView!getEditView.do?viewIn=1&sFnSaveCallback=clCMSBookings.saveReturnWaybill&transId="+sResponse+"&moduleId="+Constants.CMS_BOOKING+"&byFromDeliveries=2",900,450,"","clReturnWayBill");
        }
        else
        {
            msg.showMessage(0,MsgHandler.getMsg(MsgConstants.CMS_NO_SHP_DEL));
        }
    }

    this.arhPickedUpBooking=function(sResponse)
    {
        if(sResponse==1)
        {
            msg.showToastMsg(MsgHandler.getMsg(MsgConstants.CMS_SHIPMNT_PICKD_UP));
            listView.clearCheckBoxes(0,false);
            listView.refreshListView(null,null,true);
        }
    }
    this.validateRowSelection=function(iTransIds,isAllowMultiple)
    {
        if(!iTransIds)
            iTransIds=me.getSelectedTransIds();

        if(!iTransIds || iTransIds.length==0)
        {
            msg.showMessage(0,MsgHandler.getMsg(MsgConstants.SELECT_RECORD));
            return false;
        }
        else if(iTransIds.length > 1 && !isAllowMultiple)
        {
            msg.showMessage(0,MsgHandler.getMsg(MsgConstants.MULTI_SELECT_NOT_ALLOWED));
            return false;
        }
        return true;
    };

    this.getSelectedTransIds=function()
    {
        var iModuleId=listView.getModuleId();
        return me.getSelectedTransIds(iModuleId);
    };
    this.getSelectedTransIds=function(iModuleId)
    {
        var iTransIds=null;
        /*if(iModuleId==Constants.TELELEADS ||iModuleId==Constants.LEADS )
            iTransIds = listView.getExtraIds("",true);
        else*/
            iTransIds = listView.getTransIds();
        return iTransIds;
    };

    this.getConvertLead = function(sUrl)
    {
        var iTransIds = null,iExtraIds=null;
        var iModuleId = listView.getModuleId();
        /*if(iModuleId==Constants.SUSPECTS)
         {
         sUrl=con.getStruts2Url("marketing","suspect","getSuspectDetails");
         //            sUrl=con.getStruts2Url(null,"marketing/suspect!getSuspectDetails.do","getConvertLead");//,null,true);
         sUrl += "moduleId=" + iModuleId;
         }
         else*/
        //if(iModuleId==Constants.INCIDENTS || iModuleId==Constants.SUSPECTS )
        if(iModuleId==Constants.SUSPECTS )
            sUrl += "&moduleId=" + iModuleId;
        else if(iModuleId==Constants.PMS_ENQUIRY)
            sUrl += "&moduleId=" + Constants.PMS_CONTRACTS;
        else if(iModuleId==Constants.EDU_ENQUIRY)
            sUrl += "&moduleId=" + Constants.EDU_APPLICATION; //+"&baseModuleId=" + Constants.EDU_ENQUIRY;

        if(iModuleId==Constants.INCIDENTS || iModuleId==Constants.SUSPECTS || iModuleId==Constants.PMS_ENQUIRY
            || iModuleId==Constants.EDU_ENQUIRY)
            iTransIds = listView.getTransIds();
        else
        {
            iTransIds = listView.getExtraIds("",true);
            iExtraIds = listView.getTransIds();
        }

        if(me.validateRowSelection(iTransIds,false))
        {
            var iAppovedId = listView.getAuthId();
            //checking for only approved leads should be converted to oppurtunities
            if(iModuleId==Constants.LEADS )
            {
                if ((document.getElementById("onlyApprdLeadsConvrt") && document.getElementById("onlyApprdLeadsConvrt").value > 0))
                {
                    if (iAppovedId != Constants.IAPPROVAL_STATUS.APPROVED)
                    {
                        msg.showMessage(0, MsgHandler.getMsg(MsgConstants.APPROVED_LEADS_TO_CONVERT_OPPORTUNITY));
                        return false;
                    }
                }

                var iExtraId=listView.getLeadState();
                if(iExtraId==Constants.ILEADSTATE.UNQUALIFIED)
                {
                    msg.showMessage(0,MsgHandler.getMsg(MsgConstants.LEAD_CONVERT_UNQUALIFIED));
                    return false;
                }
            }
            else
            {
                if(iAppovedId==Constants.IAPPROVAL_STATUS.PENDING)
                {
                    msg.showMessage(0, MsgHandler.getMsg(MsgConstants.PENDING_REC_CANT_CONVERTED,0,0));
                    return false;
                }
            }
            if(iModuleId==Constants.INCIDENTS)
            {
                var arrExtraIds = listView.getExtraIds();
                if(arrExtraIds[0][0]==Constants.INCIDENT_CONVERTED)
                {
                    msg.showMessage(0,MsgHandler.getMsg(MsgConstants.INCIDENT_ALREADY_CONVERTED));
                    return false;
                }
            }

            if(iModuleId==Constants.PMS_ENQUIRY)
            {
                sUrl +="&baseTransId="+ iTransIds[0]+"&calledFrom="+Constants.PMS_ENQUIRY;
                home.setCenterUI(sUrl,null,null,false,"listHandler.arhPMSEnquiry",null,null,null,null,true);
//                con.sendPostRequest(sUrl, "", null, "listHandler.arhPMSEnquiry", false, null, null, false, true, ACTION_CONVERT);
            }
            else if(iModuleId==Constants.EDU_ENQUIRY)
            {
                var iStatus=listView.getExtraIds("",true);
                sUrl +="&baseTransId="+ iTransIds[0]+"&calledFrom="+Constants.EDU_ENQUIRY+"&baseModuleId="+Constants.EDU_ENQUIRY;
                if(iStatus==IEDUConstants.IEnQuiryStatus.NEW)
                    home.setCenterUI(sUrl,null,null,false,"listHandler.arhPMSEnquiry",null,null,null,null,true);
                else if(iStatus==IEDUConstants.IEnQuiryStatus.CONVERTED_TO_APPLICATION)
                    msg.showMessage(0, MsgHandler.getMsg(MsgConstants.CONVERT_TO_APPLICATION));
//                con.sendPostRequest(sUrl, "", null, "listHandler.arhPMSEnquiry", false, null, null, false, true, ACTION_CONVERT);
            }
            else if(iModuleId==Constants.INCIDENTS)
            {
                /*sUrl="/module/moduleView!getEditView.do?moduleId="+Constants.REQUEST+"&isBuffer=true&baseModuleId="+Constants.INCIDENTS
                 +"&calledFrom="+Constants.INCIDENTS+"&baseTransId="+iTransIds[0];*/
                //sUrl+="&isSetModuleData=true&iModuleId="+Constants.REQUEST+"&isBuffer=true&baseModuleId="+Constants.INCIDENTS+"&calledFrom="+Constants.INCIDENTS+"&baseTransId="+iTransIds[0];
                //sUrl=sUrl.replace("moduleId=5632",);
                //var sModuleParam = "moduleId="+Constants.INCIDENTS;
                //sUrl = sUrl.replace(sModuleParam,"moduleId="+Constants.REQUEST);
                sUrl += "&moduleId=" + Constants.REQUEST;
                sUrl+="&isSetModuleData=true&iModuleId="+Constants.REQUEST+"&baseModuleId="+Constants.INCIDENTS+"&calledFrom="+Constants.INCIDENTS+"&baseTransId="+iTransIds[0];
                //home.setCenterUI(sUrl);
                home.setCenterUI(sUrl,null,null,false,"listHandler.arhPMSEnquiry",null,null,null,null,true);
            }
            else
            {
                //TODO: commented on 23/03/2022 memeberId changes in Lead/TeleLead
                /*if(iModuleId==Constants.LEADS && iExtraIds!=null && iExtraIds[0]>0)
                    sUrl +="&iTransId="+ iTransIds[0]+"&extraId="+iExtraIds[0];
                else*/ sUrl +="&iTransId="+ iTransIds[0];
                home.setCenterUI(sUrl);
            }
            //            else sUrl +="&transId="+ iTransIds[0];
//            con.sendPostRequest(sUrl, "", null, "listHandler.arhConvertHandler", false, null, null, false, true, ACTION_CONVERT);
        }
    };

    this.arhPMSEnquiry=function(sResponse)
    {
        if(util.trim(sResponse).length>0)
        {
            var sResponse;
            sResponse=util.trim(sResponse);
            app.setBodyContent(document.getElementById("dvCenter"), sResponse, util.onScriptsLoad);
//            home.setCenterUI(sResponse);
        }
    };
    this.arhConvertHandler=function(sResponse)
    {
        if(util.trim(sResponse).length>0)
        {
            app.setBodyContent(document.getElementById("dvCenter"), sResponse, util.onScriptsLoad);
        }
    };
    this.assign = function(sUrl,sTitle,sModuleName,byActionId)
    {
        var iModuleId,iTransIds,iReportHandle=0,iCount = 0,iLength,sParams;
        iModuleId = parseInt(listView.getModuleId());
        sParams="moduleId="+iModuleId;

        if((AdvPaging.getInstance().getSelectionPageType()==1) && iModuleId!=Constants.DASHBOARD)//select all transIds
        {
            iReportHandle = parseInt(listView.getReportHandle());
            sParams+="&reportHandle="+iReportHandle+"&totalRecords="+document.getElementById("totalRecords").value;
        }
        else
        {
            //TODO: commented on 23/03/2022 memeberId changes in Lead/TeleLead
            /*if(iModuleId==Constants.TELELEADS ||iModuleId==Constants.LEADS||iModuleId==Constants.SUSPECTS )
                iTransIds = me.getTransIds();
            else*/ iTransIds = me.getSelectedTransIds();
        }

        if(iReportHandle>0)
        {
            sUrl=me.appendParamsToUrl(sUrl,sParams);
            me.assignLeads(sUrl,sTitle,byActionId);
        }
        else if(me.validateRowSelection(iTransIds,true))
        {
            iLength=iTransIds.length;
            for (var i=0; i<iLength; i++)
            {
                if(iModuleId == Constants.TELELEADS)
                {
                    if(iTransIds[i] != null || iTransIds[i] != "")
                        sParams +="&transIds="+ iTransIds[i];
                    else
                        iCount++;
                }
                else
                    sParams +="&transIds="+ iTransIds[i];
            }

            if(me.getParams(iModuleId,sModuleName, iCount,iLength))
            {
                sUrl=me.appendParamsToUrl(sUrl,sParams);


                if(iModuleId==Constants.LEADS || iModuleId==Constants.TELELEADS|| iModuleId==Constants.SUSPECTS)
                {
                    if(iModuleId==Constants.LEADS && (document.getElementById("iDonotallowAssign")
                        && document.getElementById("iDonotallowAssign").value>0))
                    {
                        var iExtraId=listView.getLeadState();
                        if(iExtraId==Constants.ILEADSTATE.UNQUALIFIED)
                        {
                            msg.showMessage(0,MsgHandler.getMsg(MsgConstants.LEAD_ASSIGN_UNQUALIFIED));//MsgHandler.getMsg(MsgConstants.SELECT_RECORD,0,0)
                            return false;
                        }
                    }
                    me.assignLeads(sUrl,sTitle,byActionId);
                }
                else if(iModuleId==Constants.DASHBOARD)
                    me.assignOrShareDashboard(sUrl,Constants.IDashboard.TYPE_ASSIGNED,sTitle);
            }
        }


    };

    this.appendParamsToUrl=function(sUrl,sParams)
    {
        if (sUrl.indexOf("?")>-1)
            sUrl+= "&";
        else
            sUrl+="?";

        sUrl+=sParams;
        return sUrl;
    };

    this.assignLeads = function(sUrl,sTitle,byActionId)
    {
        var sId,assignDlg;
        sId="AssignLeads";
        var arrActions = new Array();
        var sAction1,sAction2;
        assignDlg = getDialogBox(sId);
        sAction1="clAssignments.onClkSaveAssignments";
        sAction2="clAssignments.onClkCloseDlg";
        arrActions[0] = MsgHandler.getMsg(MsgConstants.OK)+"|"+sAction1;
        arrActions[1] = MsgHandler.getMsg(MsgConstants.CANCEL)+"|"+sAction2;
        sUrl = con.getStruts2Url(null,sUrl,null,null,true);
        assignDlg = new DialogBox(sId,"",140,160,670,400,sUrl+"&type="+byActionId, true, null, false,true,arrActions,false,null,true,false,false,true,false,false,true,false,false,true);
        assignDlg.setTitle(sTitle);
        assignDlg.setCenter();
        assignDlg.show();
    };

    /**
     * Author: K. Sampath Kumar
     * This method is used to assign users to teams from users list view
     * @param sUrl
     * @param sTitle
     */
    this.onClkShowAssignUsers = function(sUrl,sTitle)
    {
        //        var sUrl;
        //        sUrl = me.empSearchInUrl;
        //        sUrl = getStruts2Url("common", "commissionPolicies.do", "getEmployeeSearchIn","addemployee", null);
        if(listHandler.validateRowSelection(null,true))
        {
            var cbView = document.getElementById("view");
            if(cbView.options[cbView.selectedIndex].value==Constants.ALL_USERS || cbView.options[cbView.selectedIndex].value==Constants.ACTIVE_USERS)
            {
                var addAssignUserDlg ;


                var arrActions = new Array();
                arrActions[0] = MsgHandler.getMsg(MsgConstants.OK,0,0)+"|clAssignUserToTeams.onClkSaveAssignUser";//3rd param onwards===attributes
                arrActions[1] = MsgHandler.getMsg(MsgConstants.CANCEL,0,0)+"|";

                var sParam = "&transId="+listView.getTransIds();
                addAssignUserDlg = new DialogBox("dlgAssignUsers",":. "+MsgHandler.getMsg(MsgConstants.ASSIGN_USERS_TEAMS)+" .:",140,160,600,420,sUrl+sParam,true,null,true,true,arrActions);

                addAssignUserDlg.setCenter();
                addAssignUserDlg.show();
            }
            else
                alert("Message")
        }
        /*else
         {
         Validation.showMessage("Choose atleast one trans id",Validation.ERROR_MSG,null,Validation.ERROR_MANDATORY,true);
         }*/
    };

    /**
     * Author: K. Sampath Kumar
     * this method is called on selecting the team from assign users to team dialog
     * @param sResponse
     */
    this.arhAssignUsers = function(sResponse)
    {
        if(parseInt(sResponse)==1)
        {
            //msg.showToastMsg("Users assigned to teams");
            msg.showToastMsg(MsgHandler.getMsg(MsgConstants.USERS_ASSIGNED_TO_TEAM));
            listView.clearCheckBoxes(0,false);
            getDialogBox("dlgAssignUsers").hide();
        }

    };

    /**
     * Author: K. Sampath Kumar
     * this method is used to unlock and also activate and inactivate selected users from user list view
     * @param sUrl
     */
    this.unlockActivateUsers = function(sUrl,iInactive)
    {
        var sParam="&userIds="+listView.getTransIds()+"&inactive="+iInactive;
        util.toggleBackground(true);
        con.sendPostRequest(sUrl, sParam, null,"listHandler.arhUnlockerrorDlg", false);
    };


    this.resetPassword = function(sUrl)
    {
        if(listHandler.validateRowSelection(null,true))
        {
            var cbView = document.getElementById("view");
//            if(cbView.options[cbView.selectedIndex].value==Constants.ALL_USERS || cbView.options[cbView.selectedIndex].value==Constants.ACTIVE_USERS)
            {
                var addAssignUserDlg ;


                var arrActions = new Array();
                arrActions[0] = MsgHandler.getMsg(MsgConstants.OK,0,0)+"|clResetPwd.onClkSaveResetPwd";//3rd param onwards===attributes
                arrActions[1] = MsgHandler.getMsg(MsgConstants.CANCEL,0,0)+"|";

                var sParam = "&transId="+listView.getTransIds();
                addAssignUserDlg = new DialogBox("dlgResetPwd",":. "+MsgHandler.getMsg(MsgConstants.RESET_PWD)+" .:",140,160,600,340,sUrl+sParam,true,null,true,true,arrActions);

                addAssignUserDlg.setCenter();
                addAssignUserDlg.show();
            }
        }
    };

    this.arhRestPwd = function(sResponse)
    {
        if(parseInt(sResponse)==1)
        {
            //msg.showToastMsg("Reset Password successfully");
            msg.showToastMsg(MsgHandler.getMsg(MsgConstants.RESET_PWD)+" "+MsgHandler.getMsg(MsgConstants.SUCCESSFULLY));
            listView.clearCheckBoxes(0,false)
            getDialogBox("dlgResetPwd").hide();
        }

    };

    /**
     * Author: K. Sampath Kumar
     * @param sResponse
     * @param iStatus
     */
    this.arhUnlockerrorDlg = function(sResponse,iStatus)
    {
        sResponse=eval(sResponse);
        util.toggleBackground(false);
        var iRowIndexes;
        if(sResponse[0]==0 || sResponse[0]==1)
        {
            iRowIndexes=listView.getSelectedRowIndexes(1);
            for(var i=0;i<iRowIndexes.length;i++)
            {
                listView.deleteRow(1,iRowIndexes[i]-i);
            }
            msg.showToastMsg(sResponse[1]);
        }
        else if(sResponse[0]<0)
            msg.showMessage(0,sResponse[1]);
    };

    /**
     * This method is used in list view Actions of Leads, TeleLeads, Opportunities, Account, Product, Contacts and Campaigns modules
     * @param sUrl
     */
    this.getSearchDuplicate= function(sUrl)
    {
        var iTransIds,iModuleId,iCnt=0,sParams;
        iModuleId = listView.getModuleId();

        iTransIds = me.getSelectedTransIds();

        if(me.validateRowSelection(iTransIds,false))
        {
            sParams ="moduleId="+iModuleId+"&transId="+iTransIds[0];

            sUrl=me.appendParamsToUrl(sUrl,sParams);

            /*var iIndex = sUrl.indexOf("?");
             if (iIndex>-1)
             sUrl += "&moduleId=" + iModuleId+sParams;
             else
             sUrl +="?moduleId=" + iModuleId+sParams;*/
            home.setCenterUI(sUrl,null,null,false,null,null,null,null,null,true);
        }
    };


    this. share = function(sUrl,sTitle,sModuleName)
    {
        var iModuleId,iTransIds,iCount = 0,iLength,sParams;
        iModuleId = listView.getModuleId();
        iTransIds = me.getSelectedTransIds();
        sParams="moduleId="+iModuleId;

        if(me.validateRowSelection(iTransIds,true))
        {
            iLength=iTransIds.length;
            for (var i=0; i<iLength; i++)
            {
                if(iModuleId == Constants.TELELEADS)
                {
                    if(iTransIds[i] != null || iTransIds[i] != "")
                        sParams +="&transIds="+ iTransIds[i];
                    else
                        iCount++;
                }
                else
                    sParams +="&transIds="+ iTransIds[i];
            }
            //TODO: commented on 23/03/2022 memeberId changes in Lead/TeleLead
/*
            if(iModuleId == Constants.LEADS || iModuleId == Constants.TELELEADS)
            {
                var iExtraIds=  listView.getExtraIds();
                for (i=0; i<iExtraIds.length; i++)
                {
                    sParams +="&extraIds="+ iExtraIds[i][0];
                }
            }
*/
            if(me.getParams(iModuleId,sModuleName, iCount,iLength))
            {
                sUrl=me.appendParamsToUrl(sUrl,sParams);

                if(iModuleId==Constants.DASHBOARD)
                    me.assignOrShareDashboard(sUrl,Constants.IDashboard.TYPE_SHARED,sTitle);
                else
                    me.addRecordUsers(sUrl,sTitle);
            }
        }
    };

    this.selectSFGFile = function(){
        /*var sUrl = "sfg20/import!importSFG20Details.do";
         con.sendPostRequest(sUrl, null, null, "listHandler.arhImportSFG20Details",false,null,null,false,true,ACTION_IMPORT);*/
        Validation.clearMessage();
        var arrActions = new Array();
        arrActions[0] = MsgHandler.getMsg(MsgConstants.IMPORT)+"|clSelectSFGFile.importSFGFile";
        var clImportDispDlg = new DialogBox("selectSFGFileDlg","Select",140,50,400,250,"sfg20/select!selectSFGFile.do",true,null,true,true,arrActions);
        clImportDispDlg.setCenter();
        clImportDispDlg.show();

    };

    this.importSFGFile = function(sFileName){
        this.checkCatalogueExists(sFileName);
    };

    this.checkCatalogueExists = function( sFileName ){
        con.sendPostRequest("sfg20/checkImport!checkCatalogueExists.do?fileName="+sFileName,null,"","listHandler.arhChkCatalogueExists",false,null,null,false,false,ACTION_LOADING,false,[sFileName]);
    }

    this.arhChkCatalogueExists = function( sResponse, iStatusCode, sMsg, appValue, objReqCache ) {
        var sFileName = objReqCache[0];

        if ( sResponse == 1 ) {
            msg.showBusinessMsg("XML file with file name '" + sFileName + "' already imported, change the file name and try again");
        }
        else{
            getDialogBox("selectSFGFileDlg").hide();
            var arrActions = new Array();
            arrActions[0] = MsgHandler.getMsg(MsgConstants.CLOSE)+"|parent.listHandler.closeDialogBox";
            var clImportDispDlg = new DialogBox("importSFG20Dlg","Import",140,50,600,300,"sfg20/import!importCatalogueDetails.do?fileName="+sFileName,true,null,true,true,arrActions);
            clImportDispDlg.setCenter();
            clImportDispDlg.setOnClose(parent.listHandler.closeDialogBox);
            clImportDispDlg.show();
        }
    }

    /*
     this.arhImportSFG20Details = function( iResponse ){
     if( iResponse == 1 )
     msg.showMessage(0,"Import succssfully");
     else
     msg.showMessage(0,"Import failed");

     };
     */

    this.viewMapMarker = function(enUrl,sTitle)
    {
        /*var iTransIds=me.getSelectedTransIds();
         if(iTransIds!="")
         {*/
        var iTransIds=me.getSelectedTransIds();
        home.setCenterUI(enUrl+="&modTransIds="+iTransIds,null,null,false,null,null,null,null,null,true);
        /*
         var dlgMapMarker= getDialogBox("clMapMarker");
         var arrCalActions = new Array();
         arrCalActions[0] = MsgHandler.getMsg(MsgConstants.CLOSE)+"|";
         enUrl+="&modTransIds="+iTransIds;
         dlgMapMarker=new DialogBox("clMapMarker", ":: "+sTitle+" ::",80,40,1100,600,enUrl,true,null,true,true,arrCalActions);
         dlgMapMarker.setCenter();
         dlgMapMarker.show();*/
        /*}
         else
         {
         Validation.showMessage(MsgHandler.getMsg(MsgConstants.SELECT_ATLEAST,0,0,MsgHandler.getMsg(MsgConstants.TRANSID)),Validation.ERROR_MSG,null,Validation.ERROR_MANDATORY,true);
         }*/
    };

    this.printLabels = function(sUrl,sTitle,sModuleName)
    {
        var iModuleId,iTransIds,iCount = 0,iLength,sParams;
        iModuleId = listView.getModuleId();
        iTransIds = listHandler.getSelectedTransIds();
        sParams="moduleId="+iModuleId;

        if(me.validateRowSelection(iTransIds,true))
        {
            iLength=iTransIds.length;
            for (var i=0; i<iLength; i++)
            {
                if(iModuleId == Constants.TELELEADS)
                {
                    if(iTransIds[i] != null || iTransIds[i] != "")
                        sParams +="&transIds="+ iTransIds[i];
                    else
                        iCount++;
                }
                else
                    sParams +="&transIds="+ iTransIds[i];
            }

            if(me.getParams(iModuleId,sModuleName, iCount,iLength))
            {
                sUrl=me.appendParamsToUrl(sUrl,sParams);

                me.showPrintLabelDialog(sUrl,sTitle);
            }
        }
    };

    this.massUpdate = function(sUrl,sTitle,sModuleName)
    {
        var iTransIds,sParams="",iSelectionType = 0;
        iSelectionType = AdvPaging.getInstance().getSelectionPageType();
        if(iSelectionType == 1) // all pages selected
        {
            sParams = "&reportHandle=" + listView.getReportHandle();
            sParams += "&iPageIndex=1"; // for ignore killing report handle
        }
        else {
            iTransIds = listHandler.getSelectedTransIds();
            if (iTransIds != null && iTransIds.length > 0) {
                for (var i = 0; i < iTransIds.length; i++)
                    sParams += "&transIds=" + iTransIds[i]
//            sParams = sParams.substring(0,sParams.length-1);

            }
        }
        sUrl += sParams;
        home.setCenterUI(sUrl+"&moduleId="+listView.getModuleId(),null,null,false,null,null,null,null,null,true);

    };
    this.massTransfer = function(sUrl,sTitle,sModuleName)
    {
        var iModuleId,iTransIds,iLength,sParams,iViewType;
        iModuleId = listView.getModuleId();
        iTransIds = listHandler.getSelectedTransIds();
        iViewType=listView.getLayoutId();
        sParams="moduleId="+iModuleId;
        sParams+="&viewType="+iViewType;

        if(iTransIds!=null && iTransIds.length>0)
        {
            iLength=iTransIds.length;
            /*    var iCount=0;
             for (var i=0; i<iLength; i++)
             {
             if(iModuleId == Constants.TELELEADS)
             {
             if(iTransIds[i] != null || iTransIds[i] != "")
             sParams +="&transIds="+ iTransIds[i];
             else
             iCount++;
             }
             else
             sParams +="&transIds="+ iTransIds[i];
             }*/
            sParams +="&transIds="+ iTransIds.length;
            sUrl+="&"+sParams;
            var clTransfer;
            var arrActions = new Array();
            if(clTransfer == null)
                clTransfer = getDialogBox("massTransferDlg");

            arrActions[0] = MsgHandler.getMsg(MsgConstants.TRANSFER,0,0)+"|clMassTransfer.onClkMassTransfer()";
            arrActions[1] = MsgHandler.getMsg(MsgConstants.CANCEL,0,0)+"|";
            clTransfer = new DialogBox("massTransferDlg","",140,160,600,250,sUrl, true, null, false,true,arrActions);
            clTransfer.setOnClose(listHandler.closeDialogBox);
//        clTransfer.setTitle(sTitle);
            clTransfer.setTitle(MsgHandler.getMsg(MsgConstants.MASS_TRANSFER,0,0));
            clTransfer.setCenter();
            clTransfer.show();
        }
        else
        {
            sUrl+="&"+sParams;
            home.setCenterUI(sUrl,null,null,null,false,null,null,null,null,true);
            // call here masstrandfer url without transids
        }
    };
    this.closeDialogBox=function(){
        listView.clearCheckBoxes(0,false);
        listView.getRefresh();
    };

    /**
     * This method purpose is to add users for a record in list view
     * @param enUrl
     * @param sTitle
     */
    this.addRecordUsers = function(enUrl,sTitle,e)
    {
        if(listView.getTransIds()!="" || e)
        {
            sTitle = MsgHandler.getMsg(MsgConstants.SHARE);
            var dlgModuleSharing= getDialogBox("clModuleSharing");
            var arrCalActions = new Array();
            /*arrCalActions[0] = "Ok|clSharingModule.onClkSaveSharingModuleDets()"; //3rd param onwards===attributes
             arrCalActions[1] = "Cancel|clSharingModule.onClkCloseDialog()";*/
            arrCalActions[0] = MsgHandler.getMsg(MsgConstants.OK,0,0)+"|clSharingModule.onClkSaveSharingModuleDets()"; //3rd param onwards===attributes
            arrCalActions[1] = MsgHandler.getMsg(MsgConstants.CANCEL,0,0)+"|clSharingModule.onClkCloseDialog()";
//            dlgModuleSharing=new DialogBox("clModuleSharing", ":: "+sTitle+" ::",100,50,750,450,enUrl+"&transIds="+listView.getTransIds(),true,"frmCalendarSharing",true,true,arrCalActions);
            dlgModuleSharing=new DialogBox("clModuleSharing", sTitle,100,50,750,550,enUrl,true,"frmCalendarSharing",true,true,null);
            document.getElementById("clModuleSharingcenterContainer").setAttribute("style","height: 470px");
            document.getElementById("clModuleSharingSWindow").style.height="500px";
            dlgModuleSharing.setCenter();
            dlgModuleSharing.show();
        }
        else
        {
            Validation.showMessage(MsgHandler.getMsg(MsgConstants.SELECT_ATLEAST,0,0,MsgHandler.getMsg(MsgConstants.TRANSID)),Validation.ERROR_MSG,null,Validation.ERROR_MANDATORY,true);
        }
        if(e) {
            cross.cancelBubble(e);
            return false;
        }
    };


    this.showPrintLabelDialog = function(enUrl,sTitle)
    {
        if(listView.getTransIds()!="")
        {
            var dlgPrintlabel= getDialogBox("clPrintlabel");
            var arrCalActions = new Array();
            arrCalActions[0] = MsgHandler.getMsg(MsgConstants.PREVIEW)+"|clPrintConfigure.onClkPreview()"; //3rd param onwards===attributes
            arrCalActions[1] = MsgHandler.getMsg(MsgConstants.CANCEL)+"|";

            dlgPrintlabel=new DialogBox("clPrintlabel", MsgHandler.getMsg(MsgConstants.PRINT_LABEL) ,60,50,690,500,enUrl+"&moduleType="+listView.getModuleId()+"&repHandle="+listView.getReportHandle(),true,"frmLabelConfig",true,true,arrCalActions,true,null,true,false,true);
//            dlgPrintlabel=new DialogBox("clPrintlabel", ":: Print Label ::" ,100,50,600,390,enUrl+"&moduleType="+listView.getModuleId()+"&repHandle="+listView.getReportHandle(),true,"frmLabelConfig",true,true,arrCalActions,true,null,true,false,true);
            dlgPrintlabel.setCenter();
            dlgPrintlabel.show();
        }
        else
        {
            Validation.showMessage(MsgHandler.getMsg(MsgConstants.SELECT_ATLEAST,0,0,MsgHandler.getMsg(MsgConstants.TRANSID)),Validation.ERROR_MSG,null,Validation.ERROR_MANDATORY,true);
//            Validation.showMessage("Choose atleast one trans id",Validation.ERROR_MSG,null,Validation.ERROR_MANDATORY,true);
        }
    };
    /**
     * This method is used to display the print preview based on dimensions,
     * papersize,asset layout etc params by connecting to getPrintLabelData method in CLModuleviewcontroller
     * @param iTemplateId template selected
     * @param iRows no.of rows per page
     * @param iLayout collayout no. of cols
     * @param isLabels true: include captions
     * @param iWidth Width
     * @param iHeight Height
     * @param iFieldId list of fields
     * @param iTypeId 2d/3dbarcode
     * @param i2DHeight height of barcode
     * @param i2DWidth  width of barcode
     * @param iSize size incase of 2D barcode
     * @param iIncludeText include text if true
     * @param iAssetLayout customer asset layout
     * @param iAlign barcode align
     * @param iPaperSize papersize A4/zebra/2d barcode
     * @param sSubmitData
     */
    this.showPrintLabelPreviewDlg = function(iTemplateId,iRows,iLayout,isLabels,iWidth,iHeight,iFieldId,iTypeId,i2DHeight,i2DWidth,iSize,iIncludeText,iAssetLayout,iAlign,iPaperSize,sSubmitData,iTxtAlign)
    {
        var arrActions,clDlg,iLayoutId=0,iReportHandle=0,iModuleId=0;
        var sDlg="Preview";
        iModuleId = listView.getModuleId();
        if(iTemplateId==0)
        {
            iLayoutId = listView.getLayoutId();
            iReportHandle = listView.getReportHandle();
        }
        clDlg = getDialogBox(sDlg);
        arrActions = new Array();
        arrActions[0] = MsgHandler.getMsg(MsgConstants.PRINT)+"|clPrint.onClkPrint()";
        arrActions[1] = MsgHandler.getMsg(MsgConstants.CANCEL)+"|";
        var iTransIds = me.getSelectedTransIds();
//        clDlg = new DialogBox(sDlg,"Preview",240,50,iWidth,iHeight,"module/moduleView!getListView.do?params=iLayoutId=100027&moduleId=256&previewType=1&typeLayout="+iLayout+"&rows="+iRows+"&isLabels="+isLabels, true, null, true,true,arrActions,true,null,true,false);
//        clDlg = new DialogBox(sDlg,"Print Preview",240,50,iWidth+30,500,"module/moduleView!getPrintLabelData.do?moduleId="+iModuleId+"&iLayoutId="+iLayoutId+"&repHandle="+iReportHandle+"&lsttransIds="+iTransIds+"&templateId="+iTemplateId+"&typeLayout="+iLayout+"&rows="+iRows+"&isLabels="+isLabels+"&height="+iHeight+"&width="+iWidth+"&fieldId="+iFieldId+"&barcodeTypeId="+iTypeId+"&barcodeHeight="+i2DHeight+"&barcodeWidth="+i2DWidth
        clDlg = new DialogBox(sDlg,MsgHandler.getMsg(MsgConstants.PRINT)+" "+MsgHandler.getMsg(MsgConstants.PREVIEW),240,50,iWidth+30,500,"module/moduleView!getPrintLabelData.do?moduleId="+iModuleId+"&iLayoutId="+iLayoutId+"&repHandle="+iReportHandle+"&lsttransIds="+iTransIds+"&templateId="+iTemplateId+"&typeLayout="+iLayout+"&rows="+iRows+"&isLabels="+isLabels+"&height="+iHeight+"&width="+iWidth+"&fieldId="+iFieldId+"&barcodeTypeId="+iTypeId+"&barcodeHeight="+i2DHeight+"&barcodeWidth="+i2DWidth
            +"&size="+iSize+"&includeText="+iIncludeText+"&assetLayout="+iAssetLayout+"&barcodeVAlign="+iAlign
            +"&"+sSubmitData+"&paperSize="+iPaperSize+"&barcodeAlign="+iTxtAlign, true, null, true,true,arrActions,true,null,true,false,false,false,true);
        clDlg.setCenter();
        clDlg.show();
    };

    this.showTransferContract = function()
    {
        var clTransferContract = getDialogBox("transferContract");
        var arrTransIds;
        var iTransIds = listHandler.getSelectedTransIds();
        if(iTransIds!=null && iTransIds.length>0)
        {
            if(iTransIds.indexOf(",")!=-1)
                arrTransIds = iTransIds.split(",");
            else
                arrTransIds = iTransIds;
            if(arrTransIds.length>1 || arrTransIds.length == 0)
            {
                msg.showMessage(0,"Select only one contract");
                return false;
            }
            else
            {
                var arrActions = new Array();
                arrActions[0] = MsgHandler.getMsg(MsgConstants.SAVE)+"|clTransferContract.saveTransferContract()";
                arrActions[1] = MsgHandler.getMsg(MsgConstants.CANCEL)+"|";
                clTransferContract = new DialogBox("transferContract","Transfer Contract",240,50,550,350,"support/contract!getTransferContract.do?contractId="+iTransIds, true, null, true,true,arrActions,true,null,true,false,false,false,true);
                clTransferContract.setCenter();
                clTransferContract.show();
            }
        }
        else
        {
            msg.showMessage(0,"Select atleast one contract");
            return false;
        }
    };

    /*this method is used for opening the Dialog to add a Intraner */
    this.showMessageDialog = function(enUrl,sTitle)
    {
        var arrCalActions = new Array();
        arrCalActions[0] = MsgHandler.getMsg(MsgConstants.SEND)+"|clIntranetMessages.onClkSendMessage(\""+enUrl+"\",'clNewMessages')"; //3rd param onwards===attributes
        clOverlay.showFrameOverlay("clNewMessages",enUrl,750,"90%",clOverlay.OVERLAY_RIGHT,50,0,null,MsgHandler.getMsg(MsgConstants.INTRANET_MSG),"containerDiv",false,arrCalActions,true,true);

    };

    /*this method is used to open the new,Edit and Detailed Announcement Dialog */
    this.showAnnouncementDialog = function(enUrl,thisObj,isEditLink,isDetailed,sTitle)
    {

        var sTableId="",iWidth,iHeight,iTransId=0,sTitle="";
        sTitle= MsgHandler.getMsg(MsgConstants.ANNOUNCEMENT);
        if(thisObj)
        {
//            if(listView.getModuleId() == Constants.HOME)
//                  iTransId = thisObj.getAttribute("iTransId");
//            else
            if(listView.getModuleId()== Constants.ANNOUNCEMENT)
                iTransId=listView.getSelectedTransId(sTableId,0,thisObj);
            else
                iTransId = thisObj.getAttribute("iTransId");
        }

        var  clAnnoucements= getDialogBox("clAnnoucements");
        var arrCalActions = new Array();
        if( (isDetailed || isEditLink) && iTransId != undefined )
            enUrl=me.appendParamsToUrl(enUrl,"transId="+iTransId);
        if(isEditLink)
        {
            arrCalActions[0] = MsgHandler.getMsg(MsgConstants.SEND)+"|clAnnouncement.onClkSave(\""+enUrl+"\")"; //3rd param onwards===attributes
            iWidth = 820;
            iHeight = 600;
            sTitle = "New "+sTitle;
            clOverlay.showFrameOverlay("clNewAnnouncementMsg",enUrl,iWidth,"90%",clOverlay.OVERLAY_RIGHT,50,0,null,sTitle,null,false,arrCalActions,true,true);
        }
        else
        {
            arrCalActions[0] = Focus.crm.Messages.getActionLabel(Constants.CLOSE)+"|";
            iWidth = 750;
            iHeight = 500;
            sTitle = sTitle+" Details";
            clOverlay.showFrameOverlay("clAnnouncementMsg",enUrl,iWidth,"90%",clOverlay.OVERLAY_RIGHT,50,0,null,sTitle,null,false,null,true,true);
        }


    };


    this.getParams=function(iModuleId,sModuleName,iCount, iNoOfTransIds)
    {
        /*
         var sParams,sMessage;
         sMessage='Select at least one ';
         sParams="moduleId="+iModuleId;
         iTransIds = listView.getTransIds();
         if(iTransIds.length < 1)
         {
         msg.showMessage(0,sMessage+sModuleName);
         return false;
         }
         var iCount = 0;
         for (var i = 0; i < iTransIds.length; i++)
         {
         if(iModuleId == Constants.TELELEADS)
         {
         if(iTransIds[i] != null || iTransIds[i] != "")
         sParams +="&transIds="+ iTransIds[i];
         else
         iCount++;
         }
         else
         sParams +="&transIds="+ iTransIds[i];
         }
         */
        if(iCount == iNoOfTransIds)
        {
            var sMessage="This "+sModuleName+" is not attached to any campaign";
            msg.showMessage(0,sMessage);
            return false;
        }
//        if(iCount>=0)
//            listView.clearCheckBoxes(iModuleId,true);
        return true;
    };


    this.getCallerScreen = function(sUrl)
    {
        var iTransIds;
        var clListViewReport = new sTable("listReportTab_"+listView.getTableId());
        var iNoOfPages = cross.getInnerText(document.getElementById("spNoOfPages1"));
        if(util.trim(iNoOfPages).length > 0 && parseInt(iNoOfPages) == 1 && listView.getTransIds().length==0)
        {
            msg.showMessage(0,MsgHandler.getMsg(MsgConstants.SELECT_RECORD,0,0));
            return false;
        }
       /* if(listView.getTransIds())
        {
            iTransIds=listView.getTransIds();
            for(var k=0; k<iTransIds.length;k++)
            {
                sUrl+="&transIds=" + iTransIds[k];
            }
        }
        else
            sUrl+="&transIds=";*/

        /*var iAppovedId = listView.getAuthId();
         if(iTransIds.length == 1 && iAppovedId != Constants.IAPPROVAL_STATUS.APPROVED){
         msg.showMessage(0,MsgHandler.getMsg(MsgConstants.PENDING_TELE_LEADS_NOT_CONVERTED,0,0));
         return false;
         }*/

        var iExtraIds;
        if(listView.getExtraIds())
        {
            iExtraIds=listView.getExtraIds("",true);
            for(var k=0; k<iExtraIds.length;k++)
            {
                sUrl+="&extraIds=" + iExtraIds[k];
            }
        }
        else
            sUrl+="&extraIds=";

        home.setCenterUI(sUrl+"&moduleId="+listView.getModuleId()+"&repHandle="+listView.getReportHandle(),null,null,true,null,null,null,null,true);
    };

    /**
     * Author: P.Raghu
     * this method is used to open Assign By Queue dialog from Requests module actions
     */
    this.assignCall=function()
    {
        var iArrTransIds=listView.getTransIds();
        if(iArrTransIds!=null && iArrTransIds!=undefined && iArrTransIds.length>0)
        {
            var iExtraIds=listView.getExtraIds();
            var iRowExtraIds = null;
            var i=0;
            for(i = 0;i< iExtraIds.length;i++)
            {
                iRowExtraIds = iExtraIds[i];
                if( iRowExtraIds[2] == Constants.IRequest.CLOSED  || iRowExtraIds[2] ==Constants.IRequest.RESOLVED )
                {
//                    msg.showMessage(0,"Resolved & Closed requests cannot be assigned.");
                    msg.showMessage(0,MsgHandler.getMsg(MsgConstants.CANNOT_ASSIGN_RESOLVED,0,0));
                    return;
                }
                if((iRowExtraIds[9] != Constants.IAPPROVAL_STATUS.APPROVED))
                {
//                    msg.showMessage(0,"Only Approved Request can be assigned.");
                    msg.showMessage(0,MsgHandler.getMsg(MsgConstants.ASSIGN_ONLY_APPROVED,0,0));
                    return;
                }
                if(iRowExtraIds[15]=="false")
                {
                    msg.showMessage(0,MsgHandler.getMsg(MsgConstants.ASSIGN_ONLY_ACTIVE,0,0));
                    return;
                }
            }
            var arrActions = new Array(),clAssignCallDlg,sUrl;
            sUrl=con.getStruts2Url("support","supportCall","getAssignByQueueDlg",null,true);
            /*arrActions[0] = "Ok|clAssignByQueue.onClkOk";
             arrActions[1] = "Cancel|";*/
            arrActions[0] = MsgHandler.getMsg(MsgConstants.OK,0,0)+"|clAssignByQueue.onClkOk";
            arrActions[1] = MsgHandler.getMsg(MsgConstants.CANCEL,0,0)+"|";
            sUrl+="?moduleId="+listView.getModuleId();
            for(i=0,iLen=iArrTransIds.length; i<iLen;i++)
                sUrl+="&transIds="+iArrTransIds[i];
//            clAssignCallDlg = new DialogBox("clAssignCallDlg","Assign By Queue",0,0,800,270, sUrl, true, null, true,true,arrActions);
            clAssignCallDlg = new DialogBox("clAssignCallDlg","",0,0,950,400, sUrl, true, null, true,true,arrActions);
            clAssignCallDlg.setTitle(MsgHandler.getMsg(MsgConstants.ASSIGN_BY_QUEUE,0,0));
            clAssignCallDlg.setCenter();
            clAssignCallDlg.show();
        }
        else
            msg.showMessage(0,MsgHandler.getMsg(MsgConstants.SELECT_ATLEAST,0,0,MsgHandler.getModuleActionLabel(Constants.REQUEST,0,true)+" "+MsgHandler.getMsg(MsgConstants.TO,0,0)+" "+MsgHandler.getModuleActionLabel(0,Constants.ASSIGN,true)));
//            msg.showMessage(0,"Select atleast one request to assign.");
//            Validation.showMessage("Select atleast one request to assign",Validation.ERROR_MSG,null,Validation.ERROR_MANDATORY,true);
    };

    this.changeIssue = function()
    {
        var iArrTransIds=listView.getTransIds();
        if(iArrTransIds!=null && iArrTransIds!=undefined && iArrTransIds.length>0)
        {
            if(handler.validateActiveStatus())
            {
                //var iExtraIds=listView.getAllExtraIds();
                var iExtraIds=listView.getAllExtraIds();
                var iRowExtraIds = null;
                var i=0,iCount=0;

                for (i = 0; i < iExtraIds.length; i++) {
                    iRowExtraIds = iExtraIds[i];
                    if (iRowExtraIds[2] == Constants.IRequest.CLOSED)
                        iCount++;
                    if ((iRowExtraIds[9] != Constants.IAPPROVAL_STATUS.APPROVED)) {
//                    msg.showMessage(0,MsgHandler.getMsg(MsgConstants.ASSIGN_ONLY_APPROVED,0,0));
                        msg.showMessage(0, MsgHandler.getModuleActionLabel(Constants.ISSUES, Constants.CHANGE_ISSUE, true) + " " + MsgHandler.getMsg(MsgConstants.CAN, 0, 0) + "" + MsgHandler.getMsg(MsgConstants.BE, 0, 0) + " " + MsgHandler.getMsg(MsgConstants.APPLY, 0, 0) + " " + MsgHandler.getMsg(MsgConstants.ON, 0, 0) + " " + MsgHandler.getModuleActionLabel(Constants.REQUEST, Constants.APPROVE, true));
                        return;
                    }
                }

                /*if(iCount==iExtraIds.length)
                 {
                 //              msg.showMessage(0,"Requests are closed");
                 msg.showMessage(0,MsgHandler.getModuleActionLabel(Constants.ISSUES,Constants.CHANGE_ISSUE,true)+" "+ MsgHandler.getMsg(MsgConstants.CAN,0,0)+""+MsgHandler.getMsg(MsgConstants.NOT,0,0)+" "+ MsgHandler.getMsg(MsgConstants.BE,0,0)+" "+ MsgHandler.getMsg(MsgConstants.APPLY,0,0)+" "+ MsgHandler.getMsg(MsgConstants.ON,0,0)+" "+MsgHandler.getModuleActionLabel(Constants.REQUEST,Constants.CLOSE,true));
                 return;
                 }*/
                var arrActions = new Array(), clIssueDlg, sUrl, iLen = iArrTransIds.length;
                sUrl = con.getStruts2Url("support", "supportCall", "getChangeIssueDlg", null, true);
                arrActions[0] = MsgHandler.getMsg(MsgConstants.OK, 0, 0) + "|clChngIssue.onClkOk";
                arrActions[1] = MsgHandler.getMsg(MsgConstants.CANCEL, 0, 0) + "|";
                sUrl += "?moduleId=" + listView.getModuleId();
//            sUrl+="&statusIds="+iRowExtraIds[9];
                for (i = 0; i < iLen; i++) {
                    sUrl += "&transIds=" + iArrTransIds[i];
                    iRowExtraIds = iExtraIds[i];
                    sUrl += "&statusIds=" + iRowExtraIds[2];
                }

//            clIssueDlg = new DialogBox("clIssueDlg","",0,0,800,370, sUrl, true, null, true,true,arrActions);
                var arrDimensions = parent.util.getWindowDimensions();
                clIssueDlg = new DialogBox("clIssueDlg", "", 0, 0, (arrDimensions[0] * 0.5), 370, sUrl, true, null, true, true, arrActions);
                clIssueDlg.setTitle(MsgHandler.getMsg(MsgConstants.CHANGE_ISSUE, 0, 0));
                clIssueDlg.setCenter();
                clIssueDlg.show();
            }
        }
        else
            msg.showMessage(0,MsgHandler.getMsg(MsgConstants.SELECT_ATLEAST,0,0,MsgHandler.getModuleActionLabel(Constants.REQUEST,0,true)+" "+MsgHandler.getMsg(MsgConstants.TO,0,0)+" "+MsgHandler.getModuleActionLabel(Constants.ISSUES,Constants.CHANGE_ISSUE,true)));

    };

    this.changeStatus = function()
    {

        var iArrTransIds=listView.getTransIds();
        var iRowExtraIds = null;
        if(iArrTransIds!=null && iArrTransIds!=undefined && iArrTransIds.length>0)
        {
            if(handler.validateActiveStatus())
            {
                //var iExtraIds=listView.getExtraIds();
                var iExtraIds=listView.getAllExtraIds();

                var iPrevRowStatus=0;
                var i=0,iCount=0;

                for (i = 0; i < iExtraIds.length; i++)
                {
                    iRowExtraIds = iExtraIds[i];
                    if (iPrevRowStatus == 0)
                        iPrevRowStatus = iRowExtraIds[2];

                    if (i > 0 && iRowExtraIds[2] != iPrevRowStatus) {
                        msg.showMessage(0, MsgHandler.getMsg(MsgConstants.CHANGE_STATUS_MSG));
                        return;
                    }

                }
                var arrActions = new Array(), clIssueDlg, sUrl, iLen = iArrTransIds.length;
                sUrl = con.getStruts2Url("support", "supportCall", "getChangeStatusDlg", null, true);
                arrActions[0] = MsgHandler.getMsg(MsgConstants.OK, 0, 0) + "|clChngStatus.onClkSave";
                arrActions[1] = MsgHandler.getMsg(MsgConstants.CANCEL, 0, 0) + "|";
                sUrl += "?moduleId=" + listView.getModuleId();
//            sUrl+="&statusIds="+iRowExtraIds[9];
//            var sTransIds="";
                for (i = 0; i < iLen; i++) {
//                sUrl+="&transIds="+iArrTransIds[i];
//                sTransIds+=iArrTransIds[i]+",";
                    sUrl += "&transIds=" + iArrTransIds[i];
                    iRowExtraIds = iExtraIds[i];
                }
                sUrl += "&statusIds=" + iRowExtraIds[2];
                //sTransIds=sTransIds.substring(0,sTransIds.length-1);
                //sUrl+="&transIds='"+sTransIds+"'";
                //sUrl+="&stransIds='"+sTransIds+"'";
                sUrl += "&isAllSelected=" + AdvPaging.getInstance().getSelectionPageType() + "&iReportHandle=" + listView.getReportHandle();

//            clIssueDlg = new DialogBox("clIssueDlg","",0,0,800,370, sUrl, true, null, true,true,arrActions);
//             var arrDimensions = parent.util.getWindowDimensions();
                clIssueDlg = new DialogBox("clStatusDlg", "", 0, 0, 350, 280, sUrl, true, null, true, true, arrActions);
                clIssueDlg.setTitle(MsgHandler.getMsg(MsgConstants.CHANGE_STATUS, 0, 0));
                clIssueDlg.setCenter();
                clIssueDlg.show();
            }
        }
        else
            msg.showMessage(0,MsgHandler.getMsg(MsgConstants.SELECT_ATLEAST,0,0,MsgHandler.getModuleActionLabel(Constants.REQUEST,0,true)+" "+MsgHandler.getMsg(MsgConstants.TO,0,0)+MsgHandler.getMsg(MsgConstants.CHANGE_STATUS)));

    };
    this.unitToEnquiry = function()
    {
        var iArrTransIds=listView.getTransIds(),i;
        if(iArrTransIds!=null && iArrTransIds!=undefined && iArrTransIds.length>0)
        {
            if(iArrTransIds.length > 1)
            {
                msg.showMessage(0,MsgHandler.getMsg(MsgConstants.MULTI_SELECT_NOT_ALLOWED));
                return false;
            }
//            var sUrl=con.getStruts2Url("pms","unitPMS","getPMSEnquiry",null,true);
            var sSubmitContent = "calledFrom="+listView.getModuleId()+"&moduleId="+Constants.PMS_ENQUIRY;
            /* for(i=0;i<iArrTransIds.length;i++)
             sSubmitContent+="&unitIds="+iArrTransIds[i];*/
            var sTransIds="";
            for(i=0;i<iArrTransIds.length;i++)
            {
                sTransIds+=iArrTransIds[i]+",";
            }
            sTransIds = sTransIds.substring(0,sTransIds.length-1);
            sSubmitContent+="&unitIds="+sTransIds;
            home.setCenterUI("module/moduleView!getEditView.do?"+sSubmitContent,null,null,false,null,null,null,null,null,true);
        }
        else
            msg.showMessage(0,MsgHandler.getMsg(MsgConstants.SELECT_ATLEAST,0,0,MsgHandler.getModuleActionLabel(Constants.IPMSSCHEDULE.PMS_UNITS,0,true).toLowerCase()));
    };

    this.unitToContract = function()
    {
        var iArrTransIds=listView.getTransIds(),i;
        if(iArrTransIds!=null && iArrTransIds!=undefined && iArrTransIds.length>0)
        {
            if(iArrTransIds.length>1)
                con.sendPostRequest("pms/pmsEnquiry!allowMultipleUnits.do",null,"","listHandler.arhAllowMultipleUnits",false,null,null,false,false,ACTION_LOADING);
            else
            {
                var sSubmitContent = "calledFrom="+listView.getModuleId()+"&moduleId="+Constants.PMS_CONTRACTS;
                var sTransIds="";
                for(i=0;i<iArrTransIds.length;i++)
                {
                    sTransIds+=iArrTransIds[i]+",";
                }
                sTransIds = sTransIds.substring(0,sTransIds.length-1);
                sSubmitContent+="&unitIds="+sTransIds;
                home.setCenterUI("module/moduleView!getEditView.do?"+sSubmitContent,null,false,null,null,null,null,null,true);
            }
        }
        else
            msg.showMessage(0,MsgHandler.getMsg(MsgConstants.SELECT_ATLEAST,0,0,MsgHandler.getModuleActionLabel(Constants.IPMSSCHEDULE.PMS_UNITS,0,true).toLowerCase()));

    };
    this.arhAllowMultipleUnits = function(isResponse)
    {
        if(isResponse==1)
        {
            var iArrTransIds=listView.getTransIds();
            var sSubmitContent = "calledFrom="+listView.getModuleId()+"&moduleId="+Constants.PMS_CONTRACTS;
            var sTransIds="";
            for(var i=0;i<iArrTransIds.length;i++)
            {
                sTransIds+=iArrTransIds[i]+",";
            }
            sTransIds = sTransIds.substring(0,sTransIds.length-1);
            sSubmitContent+="&unitIds="+sTransIds;
            home.setCenterUI("module/moduleView!getEditView.do?"+sSubmitContent);
        }
        else
        {
            msg.showMessage(0,MsgHandler.getMsg(MsgConstants.MULTI_SELECT_NOT_ALLOWED,0,0));
        }

    };
    this.onClkBookings = function()
    {
        var iTransIds=listView.getTransIds();
        var sUrl = con.getStruts2Url("pms","propertyView","getUnitDetails",null);
        if(iTransIds.length == 0)
        {
            msg.showMessage(0,MsgHandler.getMsg(MsgConstants.SELECT_RECORD,0,0));
            return false;
        }
        else if(iTransIds.length > 1)
        {
            msg.showMessage(0,MsgHandler.getMsg(MsgConstants.MULTI_SELECT_NOT_ALLOWED,0,0));
            return false;
        }
        sUrl+="unitId=" + iTransIds[0];
        con.sendPostRequest(sUrl,null,null,"listHandler.arhUnitBooking");

    };
    this.arhUnitBooking = function(sResponse)
    {
        var sProperty,sVenture,sBlock,sFloor,sUnit,sPropertyData;
        if(sResponse!=null)
        {
            sResponse = eval(sResponse);
            sProperty = sResponse[0];
            sVenture = sResponse[1];
            sBlock = sResponse[2];
            sFloor = sResponse[3];
            sUnit = sResponse[4];
            sPropertyData = "&sPropertyInfo="+sVenture+"_"+sProperty+"_"+sBlock+"_"+sFloor+"_"+sUnit;
            sPropertyData="&ventureCombo="+util.encodeURI(sVenture);
            sPropertyData+="&propertyComb="+util.encodeURI(sProperty);
            sPropertyData+="&blockCombo="+util.encodeURI(sBlock);
            sPropertyData+="&floorCombo="+util.encodeURI(sFloor);
            sPropertyData+="&unitCombo="+util.encodeURI(sUnit);
            home.showModuleDlg(Constants.IPMSSCHEDULE.BOOKINGS,"listHandler.setCallBack",sPropertyData,
                MsgHandler.getMsg(MsgConstants.NEW)+" "+MsgHandler.getMsg(MsgConstants.BOOKING),false,null,null,1000,580);
        }
    };
    this.setCallBack = function(sResponse)
    {
        parent.listView.getRefresh();
        app.hidePopUp();
    };

    /**
     * Author: P.Raghu
     * this method is used to handle pick request from Requests module actions
     */
    this.pickRequest = function()
    {
        var iArrTransIds=listView.getTransIds();
        if(iArrTransIds!=null && iArrTransIds!=undefined && iArrTransIds.length>0)
        {
            if(handler.validateActiveStatus())
            {
                var iExtraIds=listView.getExtraIds();
                var iRowExtraIds = null;
                var i=0;

                for(i = 0;i< iExtraIds.length;i++)
                {
                    iRowExtraIds = iExtraIds[i];
                    if( iRowExtraIds[2] == Constants.IRequest.CLOSED  || iRowExtraIds[2] ==Constants.IRequest.RESOLVED )
                    {
//                    msg.showMessage(0,"Resolved & Closed requests cannot be assigned.");
                        msg.showMessage(0,MsgHandler.getMsg(MsgConstants.CANNOT_ASSIGN_RESOLVED,0,0));
                        return;
                    }
                }
                var sUrl=con.getStruts2Url("support","supportCall","pickRequest",null,true);
                var sSubmitContent = "moduleId="+listView.getModuleId();
                for(i=0;i<iArrTransIds.length;i++)
                    sSubmitContent+="&transIds="+iArrTransIds[i];
                con.sendPostRequest(sUrl,sSubmitContent,"","listHandler.arhGetRefresh",false);
            }
        }
        else
            msg.showMessage(0,MsgHandler.getMsg(MsgConstants.SELECT_ATLEAST,0,0,MsgHandler.getModuleActionLabel(Constants.REQUEST,0,true).toLowerCase()));
//            msg.showMessage(0,"Select atleast one request.");
//            Validation.showMessage("Choose atleast one request",Validation.ERROR_MSG,null,Validation.ERROR_MANDATORY,true);
    };

    this.arhGetRefresh=function(sReposnse)
    {
        if(sReposnse){
            msg.showToastMsg(sReposnse);
            listView.getRefresh();
        }
    };
    this.addContract = function(sUrl)
    {
        var sTitle="New Contract";
        //        me.iType=iType;
        sUrl+="&viewIn="+Constants.MODULE_IN_DLG+"&sFnSaveCallback=parent.listView.refreshListView";
        app.showPopUp(sUrl, sTitle, 680, 500, null);

        //        var contractDlg = new DialogBox("contract","Contract",140,160,670,400,sUrl+"&viewIn="+Constants.MODULE_IN_DLG+"&sFnSaveCallback=parent.listView.refreshListView", true, null, false,true,null);
        //        contractDlg.setCenter();
        //        contractDlg.show();
    };

    this.closeRequest = function(sUrl,iModuleId,iTransId)
    {
        var arrActions = new Array();
        sUrl+="&viewIn="+Constants.MODULE_IN_DLG+"&baseTransId="+iTransId;
        var clNotesDlg = new DialogBox("module"+iModuleId," Close Request ",40,60,780,450, sUrl, true, null, true,true,arrActions);
        clNotesDlg.setCenter();
        clNotesDlg.show();
    };

    this.openSurvey = function(sUrl,iModuleId,iTransId,sTitle)
    {
        var arrActions = new Array();
//        sUrl+="&viewMode="+ ISurveyConstants.ISurvey_Assignment_Mode.APPLICATION+"&modtransId="+iTransId+"&typeId="+Constants.CONTACTS+"&userType="+Constants.IUSERTYPES.CUSTOMER;
        /*?moduleId="+iModuleId+"&modtransId="+iTransId+"&typeId="+IConstants.IModule.ITypes.CONTACTS
         +"&viewMode="+ ISurveyConstants.ISurvey_Assignment_Mode.EMAIL+"&userType="+IConstants.ISecurity.IUSERTYPES.CUSTOMER);*/
        var clSurveyDlg = new DialogBox("SurveyDisp",sTitle,40,60,850,450, sUrl, true, null, true,true,arrActions);
        clSurveyDlg.setCenter();
        clSurveyDlg.show();
    };

    this.g_UrlVariable=null;
    this.selectedCallStatus=0;
    this.openSurveyForCalls = function(sUrl,iModuleId,iTransId,sTitle,iCallStatusId)
    {
        var sSubmit="";
        me.selectedCallStatus=0;
        me.g_UrlVariable=null;
        sSubmit+="&viewMode="+ISurveyConstants.ISurvey_Assignment_Mode.APPLICATION+"&modtransId="+iTransId+"&typeId="+Constants.CONTACTS;
        sSubmit+="&callStatus="+iCallStatusId;
        me.selectedCallStatus=iCallStatusId;
        /*if(iCallStatusId==Constants.IRequest.RESOLVED)
         sSubmit+="&userType="+Constants.IUSERTYPES.CUSTOMER;
         else*/
        sSubmit+="&userType="+Constants.IUSERTYPES.CUSTOMER;
        me.g_UrlVariable=sSubmit+"&moduleId="+Constants.REQUEST;
        sUrl+=sSubmit;
        util.toggleBackground(true);
        con.sendPostRequest(sUrl, null, null,"listHandler.arhCallSurvey", false);
    };

    this.arhCallSurvey=function(sResponse)
    {
        if(sResponse!=undefined)
            sResponse+=","+sResponse+",";
        if((sResponse.indexOf(","+Constants.IRequest.CLOSED+",")!=-1) && (me.selectedCallStatus==Constants.IRequest.CLOSED) )
        {
            /*util.toggleBackground(false);
             var sUrl="survey/designer!evaluateSurvey.do?"+me.g_UrlVariable+"&moduleId="+Constants.REQUEST;
             listHandler.openSurvey(sUrl,0,0,"Closed Survey");*/
            var sUrl="support/closingrules!getCallClosedStatusRights.do";
            con.sendPostRequest(sUrl, null, null,"listHandler.arhClosedStatus", false);
        }
        else if(sResponse.indexOf(","+me.selectedCallStatus+",")!=-1)// for other status
        {
            msg.showConfirm(MsgHandler.getMsg(MsgConstants.REQUEST_NOTCLOSED),MsgHandler.getMsg(MsgConstants.WARNING),"listHandler.callBackOpenSurvey");
        }
        else
        {
            msg.showMessage(0,MsgHandler.getMsg(MsgConstants.SURVEY_CANNOTOPEN));
        }
    };

    this.surveyTitle=null;
    this.openSurveyForSurveyMod=function(sUrl,iModuleId,iTransId,sTitle)
    {
        me.g_UrlVariable=null;
        me.surveyTitle=sTitle;
        me.g_UrlVariable="&viewMode="+ ISurveyConstants.ISurvey_Assignment_Mode.APPLICATION+"&modtransId="+iTransId+"&layoutId="+listView.getLayoutId();
        var sUrl="support/closingrules!getCallCloseReopenStatus.do?layoutId="+listView.getLayoutId()+"&transId="+iTransId;
        con.sendPostRequest(sUrl, null, null,"listHandler.arhCallSurveyforSurveyMod", false);
    }

    this.arhCallSurveyforSurveyMod=function(sResponse, iStatusCode,sMsg,appValue)
    {
        if(sMsg.indexOf(Constants.REQUEST)!=-1)
        {
            me.selectedCallStatus=appValue;
            if(sResponse!=undefined)
                sResponse+=","+sResponse+",";
            me.g_UrlVariable+="&moduleId="+Constants.REQUEST+"&userType="+Constants.IUSERTYPES.CUSTOMER+"&typeId="+Constants.CONTACTS+"&callStatus="+me.selectedCallStatus;;
            if((sResponse.indexOf(","+Constants.IRequest.CLOSED+",")!=-1) && (me.selectedCallStatus==Constants.IRequest.CLOSED) )
            {
                /*util.toggleBackground(false);
                 var sUrl="survey/designer!evaluateSurvey.do?"+me.g_UrlVariable+"&moduleId="+Constants.REQUEST;
                 listHandler.openSurvey(sUrl,0,0,"Closed Survey");*/
                var sUrl="support/closingrules!getCallClosedStatusRights.do";
                con.sendPostRequest(sUrl, null, null,"listHandler.arhClosedStatus", false);
            }
            else if(sResponse.indexOf(","+me.selectedCallStatus+",")!=-1)// for other status
            {
                msg.showConfirm(MsgHandler.getMsg(MsgConstants.REQUEST_NOTCLOSED),MsgHandler.getMsg(MsgConstants.WARNING),"listHandler.callBackOpenSurvey",null,350,null,null,false);
            }
            else
            {
                msg.showMessage(0,MsgHandler.getMsg(MsgConstants.SURVEY_CANNOTOPEN));
            }
        }
        else
        {
            var sUrl="survey/designer!evaluateSurveyModule.do?"+me.g_UrlVariable+"&moduleId="+Constants.SURVEY_MODULE+"&userType="+Constants.IUSERTYPES.SERVICE;
            if(me.surveyTitle!=null && $.trim(me.surveyTitle).length>0)
                listHandler.openSurvey(sUrl,0,0,me.surveyTitle);
            else
                listHandler.openSurvey(sUrl,0,0,"Survey");
        }
    };

    this.arhClosedStatus=function(sResponse)
    {
        util.toggleBackground(false);
        if(sResponse!=null)
        {
            if(sResponse==1)
            {
                msg.showConfirm(MsgHandler.getMsg(MsgConstants.REQUEST_ALREADYCLOSED),MsgHandler.getMsg(MsgConstants.WARNING),"listHandler.callBackOpenSurveyforClosed",null,350,null,null,false);
            }
            else
            {
                var sUrl="survey/designer!evaluateSurvey.do?"+me.g_UrlVariable+"&moduleId="+Constants.REQUEST;
                listHandler.openSurvey(sUrl,0,0,"Closed Survey");
            }
        }
    };

    this.callBackOpenSurvey=function(iStatus)
    {
        var sUrl="";
        util.toggleBackground(false);
        if(iStatus==Constants.YES)
        {
            sUrl="support/supportCall!updateCallFromList.do?"+me.g_UrlVariable+"&status="+Constants.IRequest.CLOSED+"&iAgree=1";
            //sUrl="support/supportCall!updateCallStatusDetails.do?"+me.g_UrlVariable+"&status="+Constants.IRequest.CLOSED;
            //con.sendPostRequest(sUrl, null, null,"listHandler.arhAcceptRejSurvey", false);
        }
        else
        {
            sUrl="support/supportCall!updateCallFromList.do?"+me.g_UrlVariable+"&status="+Constants.IRequest.OPEN+"&iAgree=2";
            //sUrl="support/supportCall!getResolvedStatusDetails.do?"+me.g_UrlVariable+"&status="+Constants.IRequest.OPEN;
            //con.sendPostRequest(sUrl, null, null,"listHandler.arhCallSurvey", false);
        }
        var clSurveyDlg = new DialogBox("SurveyDisp"," Survey ",40,60,850,450, sUrl, true, null, true,true,null);
        clSurveyDlg.setCenter();
        clSurveyDlg.show();
    };

    this.callBackOpenSurveyforClosed=function(iStatus)
    {
        var sUrl="";
        util.toggleBackground(false);
        if(iStatus==Constants.NO)
        {
            sUrl="support/supportCall!updateCallFromList.do?"+me.g_UrlVariable+"&status="+Constants.IRequest.CLOSED+"&iAgree=1";
            //sUrl="support/supportCall!updateCallStatusDetails.do?"+me.g_UrlVariable+"&status="+Constants.IRequest.CLOSED;
            //con.sendPostRequest(sUrl, null, null,"listHandler.arhAcceptRejSurvey", false);
        }
        else
        {
            sUrl="support/supportCall!updateCallFromList.do?"+me.g_UrlVariable+"&status="+Constants.IRequest.OPEN+"&iAgree=2";
            //sUrl="support/supportCall!getResolvedStatusDetails.do?"+me.g_UrlVariable+"&status="+Constants.IRequest.OPEN;
            //con.sendPostRequest(sUrl, null, null,"listHandler.arhCallSurvey", false);
        }
        var clSurveyDlg = new DialogBox("SurveyDisp"," Survey ",40,60,850,450, sUrl, true, null, true,true,null);
        clSurveyDlg.setCenter();
        clSurveyDlg.show();
    };

// ///////////////////////////////////////// Dashboard  /////////////////////////////////////////////////////////////////
    this.assignOrShareDashboard = function(sUrl,iType,sTitle)     //iType====0(Owner),1(Assign),2(Share)
    {
        sUrl+="&type="+iType;
        var clAssignDlg;
        var arrActions = new Array();
        if(clAssignDlg == null)
            clAssignDlg = getDialogBox("dbAssign");
        arrActions[0] = MsgHandler.getMsg(MsgConstants.OK)+"|clDashboardAssign.onClkSaveDashboardAssign";
        arrActions[1] = MsgHandler.getMsg(MsgConstants.CANCEL);
        clAssignDlg = new DialogBox("dbAssign","",140,160,550,380,sUrl, true, null, false,true,arrActions);
        clAssignDlg.setTitle(sTitle);
        clAssignDlg.setCenter();
        clAssignDlg.show();
    };

    this.getCallStatusId=function()
    {
        var iExtraIds=listView.getSelectedExtraId();
        return iExtraIds[2];
    };

    this.getCallStateId=function()
    {
        var iExtraIds=listView.getSelectedExtraId();
        return iExtraIds[1];
    };

    this.refreshAfterApproval=function()
    {
        listView.getRefresh("module/moduleView!getListView.do",false);
        clNotifyMessage.refreshNotifyCount();
    };

    this.updateContractStatus= function(sUrl,byActive,iTransIds)
    {
        var sParam="",sConfirmMsg="Are you sure do you want to De-Activate the Contract(s)? All the future PMC calls will be deactivated.";
        if(byActive==1)
            sConfirmMsg="Are you sure do you want to Activate the contract(s)?";

        if(window.confirm(sConfirmMsg))
        {
            for(var i=0;i<iTransIds.length;i++)
            {
                sParam+="&transIds="+iTransIds[i];
            }
            sParam+="&byActive="+byActive;
            util.toggleBackground(true);
            con.sendPostRequest(sUrl, sParam, null,"listHandler.arhupdateContractStatus", false);
        }
    };

    this.arhupdateContractStatus = function(sResponse)
    {
        sResponse=eval(sResponse);
        util.toggleBackground(false);
        msg.showToastMsg(sResponse[1]);
    };

    this.terminateContract= function(iTransId,sUrl)
    {
        var sConfirmMsg=MsgHandler.getMsg(MsgConstants.CONTRACT_TERMINATE, 0, 0, clAppBuffer.getModuleCaption(iModuleId, true), MsgHandler.getMsg(MsgConstants.CONTRACT_TERMINATE));
        if(window.confirm(sConfirmMsg))
        {
            var sParams = "&transId=" + iTransId;//+ "&moduleId=" + iModuleId ;
            //var sUrl = "/support/contract!doContractTermination.do";
            util.toggleBackground(true);
            con.sendPostRequest(sUrl, sParams, null, "listHandler.arhterminateContract", false);
        }
    };

    this.arhterminateContract = function(sResponse)
    {
        sResponse=eval(sResponse);
        util.toggleBackground(false);
        msg.showToastMsg(sResponse[1]);
    };



    this.onClkOpenActionInDLG=function(sTitle,sUrl,iWidth,iHeight,sSaveAction,sDlgId)
    {
        var arrActions = new Array();
        arrActions[0] = MsgHandler.getMsg(MsgConstants.SAVE,0,0)+"|"+sSaveAction;
        arrActions[1] = MsgHandler.getMsg(MsgConstants.CANCEL,0,0)+"|";
        var dlgObject =new DialogBox(sDlgId, ":. "+sTitle+" .:",100,50,iWidth,iHeight,sUrl,true,null,true,true,arrActions);
        dlgObject.setCenter();
        dlgObject.show();
    };

    this.onClkShowExportMailChimp = function()
    {
        var arrActions = new Array();
        arrActions[0] = MsgHandler.getMsg(MsgConstants.EXPORT)+"|clMailChimpMapping.onClkSubscribeContacts()";
        //arrActions[1] = "Cancel|";
        var iTransIds = listHandler.getSelectedTransIds(listView.getModuleId());
        if(listHandler.validateRowSelection(iTransIds,true))
        {
            //if(AdvPaging.getInstance().getSelectionPageType()==1)
            var sUrl = con.getStruts2Url("social","mailChimp","getMailChimpList");
            sUrl+="rowTransId="+iTransIds+"&isAllSelected="+AdvPaging.getInstance().getSelectionPageType()+"&iReportHandle="+listView.getReportHandle()+"&moduleId="+listView.getModuleId()+"&type="+0;
            /*var dlgExportLayout = new DialogBox("clExportMailChimp", "Export To MailChimp", 75, 85, 550, 500, sUrl, true, null, true, true, arrActions);
             dlgExportLayout.setTitle(decodeURIComponent("Export To MailChimp"));
             dlgExportLayout.setCenter();
             dlgExportLayout.show();*/
            var sId = "exportMailChimp";
            clOverlay.showFrameOverlay(sId,sUrl,"40%","100%",clOverlay.OVERLAY_RIGHT,0,0,null,MsgHandler.getMsg(MsgConstants.EXPORT_TO_MAILCHIMP),"containerDiv",false,arrActions);
            document.getElementById("btn_"+sId+"_0").style.display = "none";
            document.getElementById("btn_"+sId+"_cancel").style.display = "none";
        }
    };

    this.showMailChimpError = function(sResponse)
    {
        var dlgExportLayout = new DialogBox("clExportMailError", "", 75, 85, 520, 500, null, false, null, true, true, null,false,null,false,false,false,false,false,true,true,false,false);
        //            dlgExportLayout.setTitle(decodeURIComponent("Export To MailChimp"));
        dlgExportLayout.handleResponse(sResponse);
        dlgExportLayout.setCenter();
        dlgExportLayout.show();
    }

    this.onClkShowImportMailChimp = function()
    {
        var arrActions = new Array();
        arrActions[0] = MsgHandler.getMsg(MsgConstants.IMPORT)+"|clMailChimpMapping.onClkSubscribeContacts()";
        //arrActions[1] = "Cancel|";
        var iTransIds = listHandler.getSelectedTransIds();
        // if(listHandler.validateRowSelection(iTransIds,true))
        {
            //if(AdvPaging.getInstance().getSelectionPageType()==1)
            var sUrl = con.getStruts2Url("social","mailChimp","getMailChimpList");
            sUrl+="rowTransId="+iTransIds+"&isAllSelected="+AdvPaging.getInstance().getSelectionPageType()+"&iReportHandle="+listView.getReportHandle()+"&moduleId="+listView.getModuleId();
            sUrl+="&type=1";
            var sId="importMailChimp";
            clOverlay.showFrameOverlay(sId,sUrl,"40%","100%",clOverlay.OVERLAY_RIGHT,0,0,null,MsgHandler.getMsg(MsgConstants.IMPORT_TO_MAILCHIMP),"containerDiv",false,arrActions);
            document.getElementById("btn_"+sId+"_0").style.display = "none";
            document.getElementById("btn_"+sId+"_cancel").style.display = "none";
            /*var dlgExportLayout = new DialogBox("clExportMailChimp", "Import from Mailchimp", 0, 85, 600, 650, sUrl, true, null, true, true, arrActions);
             dlgExportLayout.setTitle("Import from Mailchimp");
             dlgExportLayout.setCenter();
             dlgExportLayout.show();*/
        }
    };

    // previous relmodulehandler

    this.showModuleDialog = function(sUrl,iModuleId,imgEdit,iBaseTransId,isEdit,sTitle,iWidth,iHeight,isCreateDlgInHidden)
    {
        me.isEdit=isEdit;
        if(isEdit)
            sUrl +="&transId="+me.getSelectedTransId(iModuleId,imgEdit);

        if(!iWidth)
            iWidth=670;

        if(!iHeight)
            iHeight=400;

        sUrl+="&viewIn="+Constants.MODULE_IN_DLG;
        if(iBaseTransId>0)
            sUrl+="&baseTransId="+iBaseTransId;

        var clModuleDlg = new DialogBox("module"+iModuleId,sTitle,140,160,iWidth,iHeight,sUrl, true, null, false,true,null);
        clModuleDlg.setCenter();
        if(isCreateDlgInHidden)
            clModuleDlg.isHide(true);
        else
            clModuleDlg.show();
        /*clOverlay.showFrameOverlay("module"+iModuleId,sUrl,"50%","100%",clOverlay.OVERLAY_RIGHT,0,0,null,sTitle,"containerDiv",false,null);
         clOverlay.setOverLaytitleText("module"+iModuleId,sTitle);*/
    };
    this.getSelectedTransId=function(iModuleId,imgEdit)
    {
        return listView.getSelectedTransId("listReportTab_"+iModuleId,0,imgEdit);
    };
    this.getApplicationFee = function(iTransId,sUrl)
    {   var sTransIds="";

        var iStatus=listView.getExtraIds("",true);
        var arrTransIds=parent.listHandler.getSelectedTransIds();
        for(var j=0;j<arrTransIds.length;j++)
        {
            if(iStatus[j]==IEDUConstants.IApplicationStatus.NEW)
            {
                if(sTransIds!=null && sTransIds!="")
                    sTransIds=sTransIds+",";
                sTransIds=sTransIds+arrTransIds[j];
            }

        }
        var sSubmitData="rowTransId="+util.encodeURI(sTransIds);
        if(sTransIds!=null && sTransIds!="")
            con.sendPostRequest(sUrl,sSubmitData,null,me.arhApplicationFee);
        else
            msg.showMessage(0,MsgHandler.getMsg(MsgConstants.NOT_AN_NEW_APPLICATION));
    };
    this.arhApplicationFee = function(sResponse)
    {
        var response=parseFloat(sResponse);
        if(response>0)
        {
            var arrActions = new Array();
            arrActions[0] = MsgHandler.getMsg(MsgConstants.OK)+"|clApplicationFee.saveApplicationFee";
            arrActions[1] = MsgHandler.getMsg(MsgConstants.CANCEL);
            var sUrl=con.getStruts2Url("edu","eduApplication","getApplicationDlg",null,true);
            sUrl=sUrl+"?fAmount="+response;
            var clApplicDetails;
            clApplicDetails = new DialogBox("clApplicDetails","Application Fee ",140,60,500,220,sUrl, true, null, false,true,arrActions);
            clApplicDetails.setCenter();
            clApplicDetails.show();
        }
        else
        {
            msg.showMessage(0,MsgHandler.getMsg(MsgConstants.APPLICATION_FEE_NOT_DEFINED));
        }
    };
    this.getRejectApplication = function(iTransId,sActualUrl)
    {
        var sTransIds="",sSubmitData;
        var iStatus=listView.getExtraIds("",true);
        var arrTransIds=parent.listHandler.getSelectedTransIds();
        for(var j=0;j<arrTransIds.length;j++)
        {
            if(iStatus[j]==IEDUConstants.IApplicationStatus.ACCEPTED || iStatus[j]==IEDUConstants.IApplicationStatus.NEW)
                sTransIds=sTransIds+arrTransIds[j]+",";
        }
        /* if(sTransIds.length<=0 || sTransIds==null)
         msg.showMessage(0,MsgHandler.getMsg(MsgConstants.REJECTED_APPLICATION));*/
        var sUrl = sActualUrl+"?rowTransId="+util.encodeURI(sTransIds);
        var clApplicDetails;
        var arrActions = new Array();
        arrActions[0] = MsgHandler.getMsg(MsgConstants.OK)+"|clApplicationFee.rejectApplicationDetails";
        arrActions[1] = MsgHandler.getMsg(MsgConstants.CANCEL);
        if(sTransIds!=null && sTransIds.length>0)
        {
            clApplicDetails = new DialogBox("clApplicDetails","",140,60,500,200,sUrl, true, null, false,true,arrActions);
            clApplicDetails.setTitle("Reject Application");
            clApplicDetails.setCenter();
            clApplicDetails.show();
        }
        else
            msg.showMessage(0,MsgHandler.getMsg(MsgConstants.REJECTED_APPLICATION));
    };

    this.getAcceptApplication = function(iTransId,sUrl)
    {
        var iStatus=listView.getExtraIds("",true);
        var sTransIds="",sSubmitData;
        var arrTransIds=parent.listHandler.getSelectedTransIds();
        for(var j=0;j<arrTransIds.length;j++)
        {
            if(iStatus[j]==IEDUConstants.IApplicationStatus.NEW )      /*&& iStatus[j]==IEDUConstants.IApplicationStatus.REJECTED*/
                sTransIds=sTransIds+arrTransIds[j]+",";
        }
        sSubmitData = "&arrTransId="+util.encodeURI(sTransIds);
        if(sTransIds.length>0 && sTransIds!=null)
            con.sendPostRequest(sUrl,sSubmitData,null,me.arhAcceptApplication);
        else
            msg.showMessage(0,MsgHandler.getMsg(MsgConstants.ACCEPTED_APPLICATION));
    };
    this.arhAcceptApplication =function(sResponse)
    {
        //todo
    };


    this.getAdmissionFee = function(iTransId,sUrl)
    {
        var iStatus=listView.getExtraIds("",true);
        var sSubmitData="rowTransId="+iTransId;
        if(iStatus==IEDUConstants.IApplicationStatus.ACCEPTED || iStatus==IEDUConstants.IApplicationStatus.ADMISSION_INCOMPLETE)
            con.sendPostRequest(sUrl,sSubmitData,null,me.arhRaiseAdmissionFee);
        else
            msg.showMessage(0,MsgHandler.getMsg(MsgConstants.NOT_AN_ACCEPTED_APPLICATION));
    };
    this.arhRaiseAdmissionFee =function(sResponse)
    {
        if(sResponse!=null && sResponse.length>0)
        {
            var response=parseInt(sResponse);
            if(response>0)
            {
                var clApplicDetails;
                var arrActions = new Array();
                var iTransId=parent.listView.getSelectedTransId();
                var sParams = "?baseTransId="+response+"&moduleId="+Constants.EDU_RECEIPT+"&calledFrom="+Constants.EDU_INVOICE+"&byAction="+Constants.EDIT_LAYOUT+"&sFnSaveCallback=listHandler.closeDlgBox";   /*"&viewIn="+Constants.MODULE_IN_DLG+*/
                var sUrl=con.getStruts2Url("module","moduleView","getModuleView",null,true);
                sUrl = sUrl+sParams;
                arrActions[0] = MsgHandler.getMsg(MsgConstants.OK)+"|moduleView.saveModuleDetails";
                arrActions[1] = MsgHandler.getMsg(MsgConstants.CANCEL)+"|parent.app.hidePopUp";
                home.setCenterUI(sUrl);
            }
        }
    };

    this.getRegistration =function(iTransId)
    {
        var sParams = "?baseTransId="+iTransId+"&moduleId="+Constants.EDU_REGISTER+"&calledFrom="+Constants.EDU_STUDENT+"&byAction="+Constants.EDIT_LAYOUT;
        var sUrl=con.getStruts2Url("module","moduleView","getModuleView",null,true);
        sUrl = sUrl+sParams;
        home.setCenterUI(sUrl);
    };

    this.pullSignedDoc = function () {
        var sUrl="social/signEasySettings!getAllSignedDoc.do?moduleId="+listView.getModuleId();
        util.toggleBackground(true);
        con.sendPostRequest(sUrl,null,null,"listHandler.arhDownloadStatus",false);

    };
    this.arhDownloadStatus = function(sResponse){
        util.toggleBackground(false);
        if(sResponse == 1)
            msg.showMessage(1,"Downloading the document in progress.It will take sometime,we shall send an email once download.","Info");
        else
            msg.showMessage(1,"There are no signed documents to download.","Info");
    }
    this.onDragStart= function(e)
    {
        me.row = e.target;
    };

    this.onDragOver= function(e)
    {

        e.preventDefault();
        var children= Array.from(e.target.parentNode.parentNode.children);

        if(children.indexOf(e.target.parentNode)>children.indexOf(me.row))
            e.target.parentNode.after(me.row);
        else
            e.target.parentNode.before(me.row);
    };

    this.onDragEnd= function(e,sURL)
    {
        me.row = e.target;
        alert(me.row.rowIndex+"---"+sURL);
        con.sendPostRequest(sURL, "", null, sReturnVals[1], false,sReturnVals[2]);
    };
};



var clListAPI  = new function()
{
    var me=this;
    this.getAPITransIds=function()
    {
        var iModuleId=listView.getModuleId();
        var arrTransIds=listView.getTransIds();
        if(arrTransIds)
        {
            var arrAPITransIds = [];
            for (var i = 0; i < arrTransIds.length; i++)
                arrAPITransIds[i] = util.getAPITransId(arrTransIds[i], iModuleId, 0);
        }
        if(arrAPITransIds.length>0)
            return clCrmApiHandler.buildApiResponse(clCrmApiHandler.STATUS_SUCCESS,arrAPITransIds);
        else
            return clCrmApiHandler.buildApiResponse(clCrmApiHandler.STATUS_VALIDATION_ERROR,MsgHandler.getMsg(MsgConstants.CRMAPI_SELECTION,null,null));

    };

    this.refreshListView =function(sUrl,iTableId,isCenterRefresh)
    {
        listView.refreshListView(sUrl,iTableId,isCenterRefresh);
        return clCrmApiHandler.buildApiResponse(clCrmApiHandler.STATUS_SUCCESS,null);
    };

    this.refreshRelatedView =function(iTableId)
    {
        var sTableId = "listReportTab_"+iTableId;
        var objTable = document.getElementById(sTableId);
        if(objTable)
        {
            listView.refreshRelatedView(iTableId);
            return clCrmApiHandler.buildApiResponse(clCrmApiHandler.STATUS_SUCCESS,null);
        }
        else
        {
            return clCrmApiHandler.buildApiResponse(clCrmApiHandler.STATUS_VALIDATION_ERROR,MsgHandler.getMsg(MsgConstants.CRMAPI_INVALID_TABLE,null,null));
        }
    };


};


function addRecordIndex(objButton)
{
    var sRecordIndex=document.getElementById("nfRecordIndex").value;
    setTransactionId(sRecordIndex);
}

function setTransactionId(iTransId)
{
//    var objAdvPaging=AdvPaging.getInstance();
    AdvPaging.getInstance().setTransIds(iTransId);
}


var objAdvPageIntances = null;

AdvPaging.deleteInstance=function(iTableId)
{
   var key = iTableId;//"listReportTab_"+iTableId;
    if(objAdvPageIntances)
    {
//      if(objAdvPageIntances[sAdvPageId])
//       delete objAdvPageIntances[sAdvPageId];
//       objAdvPageIntances[sAdvPageId] = null;
        var value=objAdvPageIntances[key];
        if(objAdvPageIntances[key])
        {
            delete objAdvPageIntances[key];
            value=null;
        }

        if(window[key])
        {
            try{
                delete window[key] ;    //deleting singleton objects
                window[key]=null;
            }
            catch(e)
            {
                window[key]=null;// IE work around
            }

        }
    }

}

function removeAllAdvPageInstances()
{
   var key;
   var value;
   for(key in objAdvPageIntances)
   {
       value=objAdvPageIntances[key];
      // if(value.isAppScope)// in case of not app scope
           if(value)
           delete value;
           objAdvPageIntances[key]=null;
   }

   /*for(key in objComboInstances)
   {
       alert(key)
   }*/


}


//var hashtblSelectedRows;
AdvPaging.getInstance=function(iTableId,iModuleId,iReportHandle,fnPageNavCallBack,isSimplePaging,byWindowType)
{
    //alert("iTableId,iModuleId,iReportHandle     "+iTableId+"---"+iModuleId+"---"+iReportHandle+"----"+fnPageNavCallBack);
    var tableId;
    if(iTableId==0  || iTableId==undefined)
        iTableId=1;

        tableId = "listReportTab_"+iTableId;
    if(!objAdvPageIntances)
        objAdvPageIntances = new Array();
    if(byWindowType == Constants.IMODULE_WINDOW.SPLIT_PANE
           || byWindowType == Constants.IMODULE_WINDOW.SPLIT_PANE_WITH_TABBED_PANE )
        this.fnPageNavCallBack=listView.getListViewPage;

    if(!objAdvPageIntances[tableId])
    {
//        alert("iTableId####,iModuleId####,iReportHandle###     "+iTableId+"---"+iModuleId+"---"+iReportHandle)
        var sAdvPaging = new AdvPaging(fnPageNavCallBack,isSimplePaging);
        sAdvPaging.sTableId = tableId;
        sAdvPaging.iTableId = iTableId;
        sAdvPaging.iModuleId = iModuleId;
        sAdvPaging.iReportHandle = iReportHandle;
        if(byWindowType)
            sAdvPaging.byWindowType = byWindowType;
        else
            sAdvPaging.byWindowType = Constants.IMODULE_WINDOW.DEFAULT;

        objAdvPageIntances[tableId]=sAdvPaging;
//        alert("iTableId@@,iModuleId@@,iReportHandle@@     "+sAdvPaging.iTableId+"---"+sAdvPaging.iModuleId+"---"+sAdvPaging.iReportHandle)
    }
    return objAdvPageIntances[tableId];
};

function AdvPaging(fnPageNavCallBack,isSimplePaging)
{
    var me = this;
   if(fnPageNavCallBack)
     this.fnPageNavCallBack=fnPageNavCallBack;
    else
     this.fnPageNavCallBack=listView.getListViewPage;

    this.isSimplePaging=isSimplePaging;


    this.iTotalRecords = 0;//Check with Raghu--Vinay
    this.iRecordsPerPage = 0;
    this.iCurrentPage = 1;
    this.iFromCurRecord = 0;
    this.iNoOfPages = 1;
    this.iToRecord = null;
    this.arrHiddenTransIds = new Array();
    this.arrHiddenValues = {};
    this.arrTransId = new Array();
    this.arrExtraId = new Array();
    this.arrRowIndexes = new Array();
    this.arrHeaderSelectBx = new Array();
    this.iSelect = 0;
    this.byWindowType = -1;
    this.clPagingDataHashtable=null;

    if(document.getElementById("sViewEvent"))
        this.sFnName = document.getElementById("sViewEvent").value;
    /*
    * this function is used to create popup menus
    * */
    this.onWLoadSetPopup = function(iNoOfRecords,iRecordsPerPage,iPageIndex)
    {
        me.setTotalRecords(iNoOfRecords);
        if(iRecordsPerPage>0)
        {
            me.iRecordsPerPage = parseInt(iRecordsPerPage);
            if(iPageIndex>0)
            {
//                iPageIndex=iPageIndex-1;
                me.iCurrentPage = parseInt(iPageIndex);
                me.iFromCurRecord = parseInt((iPageIndex-1)*me.iRecordsPerPage);
                if(parseInt(me.iFromCurRecord+me.iRecordsPerPage)>=iNoOfRecords)
                    me.iToRecord = parseInt(iNoOfRecords);
                else me.iToRecord = parseInt(me.iFromCurRecord+me.iRecordsPerPage);
            }
            else me.iToRecord = parseInt(me.iRecordsPerPage);
        }
        if(!me.isSimplePaging)
        {
            me.setPageData();
            me.setEnableImages();
        }
        else
            me.setEnableSimplePagingImages();
    };

    /*
    * this function is used to show specified records per page
    * iValue - records per page
    * */
    this.onClkRecordsPerPage = function(iValue)
    {
        if(me.setRecordsPerPage(iValue)){
            if(me.iModuleId == undefined)
              me.iModuleId = listView.getModuleId();
            if(me.iReportHandle == undefined)
              me.iReportHandle = listView.getReportHandle();
            me.fnPageNavCallBack("&iPageIndex="+me.iCurrentPage+"&shRowsPerPage="+me.iRecordsPerPage+"&iLastRecordCnt="+me.iToRecord+ "&moduleId=" + me.iModuleId+ "&repHandle="+ me.iReportHandle ,0,me.sTableId,me.iReportHandle);//+ "&repHandle=" + me.iReportHandle//TODO :Change for sorting
        }
    };

    /*
    * this function is used to set specified records per page
    * */
    this.setRecordsPerPage = function(iValue)
    {
        iValue = parseInt(iValue);
        if((me.iTotalRecords>=iValue || me.iTotalRecords>=me.iToRecord) && (me.iRecordsPerPage != iValue))
        {
            if(iValue>0)
                me.iRecordsPerPage = parseInt(iValue);
            if(me.iTotalRecords > me.iToRecord)
                me.iCurrentPage = parseInt(me.iToRecord/me.iRecordsPerPage)+1;
            else if(me.iTotalRecords == me.iToRecord)
            {
                me.iNoOfPages = parseInt(me.iTotalRecords/me.iRecordsPerPage);
                if(me.iTotalRecords%me.iRecordsPerPage > 0)
                    me.iNoOfPages = me.iNoOfPages+1;
                //else
                  // me.iNoOfPages = me.iNoOfPages+1;

                me.iCurrentPage = me.iNoOfPages;
            }
            if(me.iFromCurRecord == 0)
                me.iCurrentPage = 1;
            me.iFromCurRecord = (me.iCurrentPage-1)*me.iRecordsPerPage;
            me.iToRecord = (me.iFromCurRecord)+me.iRecordsPerPage;

            if(me.iToRecord >=me.iTotalRecords)
                me.iToRecord = me.iTotalRecords;
            return true;
        }
        else
            return false;
    };

    this.setSimplePageData = function()
    {

        me.setPageData2(document.getElementById('simplePageRecFrom'+me.iTableId),document.getElementById('simplePageRecTo'+me.iTableId),
                        document.getElementById('simplePageTotalRec'+me.iTableId),document.getElementById('nfPageNo'+me.iTableId));
    };
    this.setPageData = function()
    {
        me.setPageData2(document.getElementById('spRecordFrom'+me.iTableId),document.getElementById('spRecordTo'+me.iTableId),
                        document.getElementById('spTotalRecords'+me.iTableId),document.getElementById('nfPageNo'+me.iTableId)
                        ,document.getElementById('spNoOfPages'+me.iTableId));
    };
    /**
     * this function is used to set from page,to page,total records per page,current pageno and no of pages
     */
    this.setPageData2 = function(objRecordFrom,objRecordTo,objTotalRecords,objPageNo,objNoOfPages)
    {
        if(objRecordFrom)
        {
            cross.setInnerText(objRecordFrom,parseInt(me.iFromCurRecord)+1);
            if(me.iRecordsPerPage > me.iTotalRecords)
                cross.setInnerText(objRecordTo,parseInt(me.iTotalRecords));
            else
                cross.setInnerText(objRecordTo,parseInt(me.iToRecord));
            cross.setInnerText(objTotalRecords,parseInt(me.iTotalRecords));
            me.iNoOfPages = parseInt(me.iTotalRecords/me.iRecordsPerPage);
            var iRemain = me.iTotalRecords-(me.iNoOfPages*me.iRecordsPerPage);
            if(iRemain >= 1)
                me.iNoOfPages += 1;
            objPageNo.value = me.iCurrentPage;
            if(objNoOfPages)
                cross.setInnerText(objNoOfPages,parseInt(me.iNoOfPages));
        }
    };

    /*
    *  this function is used to show first page
    * */
    this.onClkFirstPage = function(spPrevAll)
    {
        if( me.iCurrentPage>1)
        {
            me.iCurrentPage = 1;
            me.iFromCurRecord = 0;
            me.iToRecord = me.iRecordsPerPage;
//        listView.getListViewPage("&totalRecords="+me.iTotalRecords+"&iPageIndex="+me.iCurrentPage+"&fromCurRecord="+me.iFromCurRecord+"&toRecords="+me.iToRecord);
//        listView.getListViewPage("&iPageIndex="+me.iCurrentPage+"&shRowsPerPage="+me.iRecordsPerPage+"&iLastRecordCnt="+me.iToRecord);
            if (me.iModuleId == undefined)
                me.iModuleId = listView.getModuleId();
            if (me.iReportHandle == undefined)
                me.iReportHandle = listView.getReportHandle();
            me.fnPageNavCallBack("&iPageIndex=" + me.iCurrentPage + "&iLastRecordCnt=" + me.iToRecord + "&moduleId=" + me.iModuleId + "&repHandle=" + me.iReportHandle, Constants.VIEW_EVENT_FIRST, me.sTableId, me.iReportHandle);//+ "&repHandle=" + me.iReportHandle//TODO :Change for sorting
//        me.setPageData();
//        me.setEnableImages();
        }
    };

    /*
    *  this function is a callback function(calling from listview.js)
    * */
    this.callbackRefreshPage = function()
    {
        if(!me.isSimplePaging)
        {
            me.setPageData();
            me.setEnableImages();
        }
        else me.setEnableSimplePagingImages();

    };

    /*
    *  this function is used to show previous page
    * */
    this.onClkPrevPage = function(spPrev)
    {
        if( me.iCurrentPage>1)//me.iFromCurRecord >= 0 &&
        {
            me.iCurrentPage -= 1;
            //if(me.iCurrentPage < 1)
            //  me.iCurrentPage = 1;
            me.iToRecord = me.iFromCurRecord;
            me.iFromCurRecord = me.iToRecord-me.iRecordsPerPage;
            if(me.iCurrentPage == 1)
            {
                me.iToRecord = me.iRecordsPerPage;
                me.iFromCurRecord = 0;
                me.setEnableImages();
            }

//            listView.getListViewPage("&totalRecords="+me.iTotalRecords+"&iPageIndex="+me.iCurrentPage+"&fromCurRecord="+me.iFromCurRecord+"&toRecords="+me.iToRecord);
//            listView.getListViewPage("&iPageIndex="+me.iCurrentPage+"&shRowsPerPage="+me.iRecordsPerPage+"&iLastRecordCnt="+me.iToRecord);
            if(me.iModuleId == undefined)
                me.iModuleId = listView.getModuleId();
            if(me.iReportHandle == undefined)
                me.iReportHandle = listView.getReportHandle();
            me.fnPageNavCallBack("&iPageIndex="+me.iCurrentPage+"&iLastRecordCnt="+me.iToRecord+ "&moduleId=" + me.iModuleId+ "&repHandle=" + me.iReportHandle,Constants.VIEW_EVENT_PREV,me.sTableId,me.iReportHandle,false);//+ "&repHandle=" + me.iReportHandle//TODO :Change for sorting
            /*me.setPageData();
            if(me.iCurrentPage < me.iNoOfPages)
                me.setEnableImages();*/
        }
    };

    /*
    *  this function is used to show next page
    * */
    this.onClkNextPage = function(spNext)
    {
        if((me.iCurrentPage*me.iRecordsPerPage) < me.iTotalRecords)
        {
            var iRemain;
            me.iCurrentPage = parseInt(me.iCurrentPage)+1;
            me.iFromCurRecord = me.iToRecord;
            iRemain = (me.iFromCurRecord+me.iRecordsPerPage)-me.iTotalRecords;
            me.iToRecord = me.iFromCurRecord + me.iRecordsPerPage;

            if(iRemain > 0)
                me.iToRecord -= iRemain;
//            alert(me.fnPageNavCallBack)
            if(me.iModuleId == undefined)
              me.iModuleId = listView.getModuleId();
            if(me.iReportHandle == undefined)
              me.iReportHandle = listView.getReportHandle();   
            me.fnPageNavCallBack("&iPageIndex="+me.iCurrentPage+"&iLastRecordCnt="+me.iToRecord+ "&moduleId=" + me.iModuleId+ "&repHandle=" + me.iReportHandle,Constants.VIEW_EVENT_NEXT,me.sTableId,me.iReportHandle,true);//+ "&repHandle=" + me.iReportHandle//TODO :Change for sorting
        };
    };

    this.onKPrShowPage = function(e)
    {
        if(e.keyCode == 13)//if press enter key
        {
//            me.onBlurShowPage(document.getElementById('nfPageNo'+me.iTableId),e);
            cross.getSrcElement(e).blur();
        }

        cross.cancelBubble(e,true);
        return false;
    };
    /*
    *  this function is used to show specified page or lastpage
    * */
    this.onBlurShowPage = function(nfPageNo,event)
    {

        if(nfPageNo != undefined || me.iCurrentPage != me.iNoOfPages)
        {
            var iRemain;
            if(nfPageNo)
            {
                me.iCurrentPage = nfPageNo.value;
                if(me.iCurrentPage > me.iNoOfPages)
                    me.iCurrentPage = me.iNoOfPages;
                if(me.iCurrentPage == 0)
                    me.iCurrentPage = 1;
            }
            else
                me.iCurrentPage = me.iNoOfPages;
            me.iFromCurRecord = (me.iCurrentPage - 1) * me.iRecordsPerPage;
            iRemain = parseInt(me.iCurrentPage * me.iRecordsPerPage) - parseInt(me.iTotalRecords);
            me.iToRecord = me.iRecordsPerPage * me.iCurrentPage;
            if (iRemain >= 1)
                me.iToRecord = me.iToRecord - iRemain;
            if (me.iModuleId == undefined)
                me.iModuleId = listView.getModuleId();
            if (me.iReportHandle == undefined)
                me.iReportHandle = listView.getReportHandle();
            me.fnPageNavCallBack("&iPageIndex=" + me.iCurrentPage + "&iLastRecordCnt=" + me.iToRecord + "&moduleId=" + me.iModuleId + "&repHandle=" + me.iReportHandle, Constants.VIEW_EVENT_LAST, me.sTableId, me.iReportHandle);//+ "&repHandle=" + me.iReportHandle//TODO :Change for sorting
        }
    };

    this.setEnableImages = function()
    {
        var spNext,spNextAll,spPrev,spPrevAll;
        spNextAll = document.getElementById("spNextAll"+me.iTableId);
        if(spNextAll)
        {
            spNext = document.getElementById("spNext"+me.iTableId);
            spPrevAll = document.getElementById("spPrevAll"+me.iTableId);
            spPrev = document.getElementById("spPrev"+me.iTableId);
            me.setEnableImages2(spNext,spNextAll,spPrev,spPrevAll);
            if(!me.isSimplePaging)
                me.setShowhidePagingComps(me.iNoOfPages>1)
        }
    };

    this.setEnableSimplePagingImages =function()
    {
        var arrImgPrev, arrImgPrevAll, arrImgNextAll, arrImgNext;
        var arrRecFrom,arrRecTo,arrTotalRec,arrPageNo;

        arrImgPrev = $(".simplePagePrev"+me.iTableId);
        arrImgPrevAll = $(".simplePagePrevAll"+me.iTableId);
        arrImgNext = $(".simplePageNext"+me.iTableId);
        arrImgNextAll = $(".simplePageNextAll"+me.iTableId);
        arrPageNo = $(".pageNo"+me.iTableId);
        arrRecFrom = $(".recFrom"+me.iTableId);
        arrRecTo = $(".recTo"+me.iTableId);
        arrTotalRec = $(".totalRec"+me.iTableId);

        for(var i=0, iLen=arrRecFrom.length; i<iLen; i++)
        {
            me.setPageData2(arrRecFrom[i],arrRecTo[i],arrTotalRec[i],arrPageNo[i]);
            me.setEnableImages2(arrImgNext[i],arrImgNextAll[i], arrImgPrev[i], arrImgPrevAll[i]);
        }
    };
    /*
    *  this function is used to enable or disable prev,next,prevall,nextall images
    * */
    this.setEnableImages2 = function(spNext,spNextAll,spPrev,spPrevAll)
    {
        var bPrevDisable,bNextDisable;
        //spNextAll = document.getElementById("spNextAll"+me.iTableId);

        if(spNextAll)
        {
           // spNext = document.getElementById("spNext"+me.iTableId);
           // spPrevAll = document.getElementById("spPrevAll"+me.iTableId);
           // spPrev = document.getElementById("spPrev"+me.iTableId);

            bPrevDisable = (spPrevAll.parentNode.disabled?true:false);
            bNextDisable = (spNextAll.parentNode.disabled?true:false);
            if(me.iCurrentPage == me.iNoOfPages)
            {
                me.setEnable(spNext,spNextAll,"imgNextDisable crm crm-next-disable","imgNextDisableAll crm crm-next-forward-disable","imgNext crm crm-next","imgNextAll crm crm-next-forward",true);
               /* me.setEnable(spNext,spNextAll,"imgNextDisable sModule s-next_d","imgNextDisableAll sModule s-last_d","imgNext sModule s-next","imgNextAll sModule s-last",true);*/
                me.disableNxtPrevText(false,true);
                //if(bPrevDisable)
                {
                    me.setEnable(spPrev,spPrevAll,"imgPrev crm crm-prev","imgPrevAll crm crm-prev-forward","imgPrevDisable crm crm-prev-disable","imgPrevDisableAll crm crm-prev-forward-disable",false);
                     /*me.setEnable(spPrev,spPrevAll,"imgPrev sModule s-pre","imgPrevAll sModule s-prepre","imgPrevDisable sModule s-pre_d","imgPrevDisableAll sModule s-prepre_d",false);*/
                    me.disableNxtPrevText(true,false);
                }
            }
            if(me.iCurrentPage == 1)
            {
                me.setEnable(spPrev,spPrevAll,"imgPrevDisable crm crm-prev-disable","imgPrevDisableAll crm crm-prev-forward-disable","imgPrev crm crm-prev ","imgPrevAll crm crm-prev-forward ",true);
                  /*me.setEnable(spPrev,spPrevAll,"imgPrevDisable sModule s-pre_d","imgPrevDisableAll sModule s-prepre_d","imgPrev sModule s-pre ","imgPrevAll sModule s-prepre ",true);*/
                me.disableNxtPrevText(false,false);
                if(me.iCurrentPage != me.iNoOfPages && bNextDisable)
                {
                  me.setEnable(spNext,spNextAll,"imgNext crm crm-next","imgNextAll crm crm-next-forward","imgNextDisable crm crm-next-disable","imgNextDisableAll crm crm-next-forward-disable",false);
//                      /*me.setEnable(spNext,spNextAll,"imgNext sModule s-next","imgNextAll sModule s-last","imgNextDisable sModule s-next_d","imgNextDisableAll sModule s-last_d",false);*/
                    me.disableNxtPrevText(true,true);
                }
            }
            if(me.iCurrentPage < me.iNoOfPages)
            {
                if(bNextDisable)
                {
                    me.setEnable(spNext,spNextAll,"imgNext crm crm-next","imgNextAll crm crm-next-forward","imgNextDisable crm crm-next-disable","imgNextDisableAll crm crm-next-forward-disable",false);
                   /* me.setEnable(spNext,spNextAll,"imgNext sModule s-next","imgNextAll sModule s-last","imgNextDisable sModule s-next_d","imgNextDisableAll sModule s-last_d",false);*/
                    me.disableNxtPrevText(true,true);
                }
                if (me.iCurrentPage > 1 && bPrevDisable)
                {
                    me.setEnable(spPrev, spPrevAll, "imgPrev crm crm-prev", "imgPrevAll crm crm-prev-forward ", "imgPrevDisable  crm crm-prev-disable", "imgPrevDisableAll crm crm-prev-forward-disable", false);
                    /*   me.setEnable(spPrev,spPrevAll,"imgPrev sModule s-pre","imgPrevAll sModule s-prepre ","imgPrevDisable sModule s-pre_d","imgPrevDisableAll sModule s-prepre_d",false);*/
                    me.disableNxtPrevText(true, false);
                }
                if(me.iCurrentPage > 1 && !bNextDisable && !bPrevDisable)
                {
                    me.setEnable(spPrev,spPrevAll,"imgPrev crm crm-prev","imgPrevAll crm crm-prev-forward","imgPrevDisable crm crm-prev-disable","imgPrevDisableAll crm crm-prev-forward-disable",false);
                    me.disableNxtPrevText(true,false);
                }
            }
        }
    };

    /**
     * this method is used to show hide paging(prev,next,etc) components based one no of pages
     */
    this.setShowhidePagingComps = function (bhidePagComps)
    {
        cross.setVisible(document.getElementById("tdSpSelectedRecords"),bhidePagComps);
        cross.setVisible(document.getElementById("tdTxPrev"),bhidePagComps);
        cross.setVisible(document.getElementById("tdTdNext"),bhidePagComps);
        cross.setVisible(document.getElementById("tdSpNext"),bhidePagComps);
        cross.setVisible(document.getElementById("tdSpNextAll"),bhidePagComps);
        cross.setVisible(document.getElementById("tblPageNoSp"),bhidePagComps);
        cross.setVisible(document.getElementById("tdSimplePagePrevAll"),bhidePagComps);
        cross.setVisible(document.getElementById("tdSimplePagePrev"),bhidePagComps);
    };
    /*
    *  this function is used to set enable or disable to specified elements
    * */
    this.setEnable = function(spMove,spMoveAll,sAddClass,sAddClassAll,sRemoveClass,sRemoveClassAll,bEnable)
    {

        var sArrClass=sRemoveClass.split(" ");
        for(var i=0;i<sArrClass.length;i++)
        {
           util.removeClass(spMove,sArrClass[i]);
        }
        util.addClass(spMove,sAddClass);

        var sArrClasses=sRemoveClassAll.split(" ");
        for(var i=0; i < sArrClasses.length; i++)
        {   
            util.removeClass(spMoveAll,sArrClasses[i]);
        }
        util.addClass(spMoveAll,sAddClassAll);

        //spMove.className = sClass;
        //spMoveAll.className = sClassAll;
        spMove.parentNode.disabled = bEnable;
        spMoveAll.parentNode.disabled = bEnable;
    };

    this.disableNxtPrevText=function(bEnable,bNext)
    {
        if(!me.isSimplePaging)
        if(bNext)
        {
            if(bEnable)
            {
                document.getElementById("txNext"+me.iTableId).className="";
                document.getElementById("txNext"+me.iTableId).disabled=false;
            }
            else
            {
                document.getElementById("txNext"+me.iTableId).className="disabled";
                document.getElementById("txNext"+me.iTableId).disabled=true;
            }
        }
        else
        {
            if(bEnable)
            {
                document.getElementById("txPrev"+me.iTableId).className="";
                document.getElementById("txPrev"+me.iTableId).disabled=false;
            }
            else
            {
                document.getElementById("txPrev"+me.iTableId).className="disabled";
                document.getElementById("txPrev"+me.iTableId).disabled=true;
            }
        }
    }
    /*
    * this function is used to set total records
    * */
    this.setTotalRecords = function(iTotalRecords)
    {
        me.iTotalRecords = iTotalRecords;
    };

    /*
    * this function is used to call antother function to select or deselect all records
    * iSelect -  if iSelect = 1(all records select) , iSelect = 2(all records de-select)
    * */
    this.onClkPageSelection = function(iSelect,objList)
    {
        var sTableId=null;
        if(objList)
        {
            sTableId=objList.parentNode.parentNode.id;
            sTableId=sTableId.substring(0,sTableId.indexOf("List"));
        }
        else sTableId="spSelectedRecords"+me.iTableId;
        me.iSelect=iSelect;
        //alert(parseInt(me.arrTransId.length/me.iRecordsPerPage))
        var iRecordCnt=parseInt(me.arrTransId.length/me.iRecordsPerPage);
        if(iSelect == 1 )
        {
            checkboxcol.selectAll(null,true,me.sTableId,listView.isChecked,"1");
            document.getElementById('spSelected'+me.iTableId).innerHTML = me.iTotalRecords;
            dropdownlist.setRowDisabled(sTableId,3,true);

            if(document.getElementById("iSelectedRecords"))
            {
                document.getElementById("iTotRecords2").innerHTML=AdvPaging.getInstance(listView.getTableId()).iTotalRecords;
                document.getElementById("iSelectedRecords").style.display="none";
                document.getElementById("iAllRecords").style.display="block";
            }
        }
        else if(iSelect == 2)
        {
            checkboxcol.selectAll(null,true,me.sTableId,listView.isChecked,"1");
            dropdownlist.setRowDisabled(sTableId,3,false);
            if(me.arrTransId.length>0)
            {
                document.getElementById('spSelected'+me.iTableId).innerHTML = me.arrTransId.length;

                if(document.getElementById("iSelectedRecords"))
                {
                    //if(me.iRecordsPerPage>=me.iTotalRecords)
                    //    document.getElementById("iTotRecordsSpan").style.display="none";
                    document.getElementById("iAllRecords").style.display="none";
                    //document.getElementById("iNoofRecords").innerHTML=me.arrTransId.length;
                    //document.getElementById("iTotRecords").innerHTML=me.iTotalRecords;
                    document.getElementById("iSelectedRecords").style.display="block";
                    if(iRecordCnt>0)
                    {
                        if(me.iRecordsPerPage>=me.iTotalRecords)
                            document.getElementById("iTotRecordsSpan2").style.display="none";
                        document.getElementById("iNoofRecords2").innerHTML=me.arrTransId.length;
                        document.getElementById("iTotRecords3").innerHTML=me.iTotalRecords;
                        document.getElementById("iPage").style.display="none";
                        document.getElementById("iPages").style.display="block";
                    }
                    else
                    {
                        if(me.iRecordsPerPage>=me.iTotalRecords)
                            document.getElementById("iTotRecordsSpan").style.display="none";
                        document.getElementById("iTotRecords").innerHTML=me.iTotalRecords;
                        document.getElementById("iNoofRecords").innerHTML=me.arrTransId.length;
                        document.getElementById("iPage").style.display="block";
                        document.getElementById("iPages").style.display="none";

                    }
                }
            }
        }
        else if(iSelect == 3)
        {
            dropdownlist.setRowDisabled(sTableId,3,false);
            checkboxcol.selectAll(null,false,me.sTableId,listView.isChecked,"1");
            if(me.arrTransId.length==0 && document.getElementById("iSelectedRecords"))
                document.getElementById("iSelectedRecords").style.display="none";
        }
        else if(iSelect == 4)
        {
            dropdownlist.setRowDisabled(sTableId,3,false);
            checkboxcol.selectAll(null,false,me.sTableId,listView.isChecked,"1");
            me.arrTransId = new Array();
            me.arrExtraId = new Array();
            me.arrRowIndexes = new Array();
            document.getElementById('spSelected'+me.iTableId).innerHTML = 0;
            if(document.getElementById("iSelectedRecords"))
            {
                document.getElementById("iSelectedRecords").style.display="none";
                document.getElementById("iAllRecords").style.display="none";
            }
        }

    };

    this.getSelectionPageType = function()
    {
        return me.iSelect;
    };

    this.setSelectionPageType = function(iSelect)
    {
        me.iSelect=iSelect;
    };

    this.setSelectHeaderChkBx = function(iIndex)
    {
        me.arrHeaderSelectBx[me.arrHeaderSelectBx.length] = iIndex;
    };

    this.getSelectHeaderChkBx = function()
    {
        return me.arrHeaderSelectBx;
    };

    this.unSelectHeaderChkBx = function(iIndex)
    {
        for(var i = 0;i < me.iNoOfPages;i++)
        {
            if(iIndex == me.arrHeaderSelectBx[i])
                me.arrHeaderSelectBx.splice(i,1);
        }
    };

    /*
    *  this function is used to insert transId into array, if transid is not there in array and also set length of records selected
    * */
    this.setTransIds = function(iTransId,iRowIndex)
    {
        var bExist = false;
        if(me.arrTransId.length != 0)
        {
            for(var i = 0;i <= me.arrTransId.length;i++)
            {
                if(iTransId == me.arrTransId[i])
                {
                    bExist = true;
                    break;
                }
            }
            if(!bExist)
            {
                me.arrTransId[me.arrTransId.length] = iTransId;
                me.arrRowIndexes[me.arrRowIndexes.length] = iRowIndex;
            }
        }
        else
        {
            me.arrTransId[me.arrTransId.length] = iTransId;
            me.arrRowIndexes[me.arrRowIndexes.length] = iRowIndex;
        }
        if(me.iSelect == 1)
            document.getElementById('spSelected'+me.iTableId).innerHTML = me.iTotalRecords;
        else document.getElementById('spSelected'+me.iTableId).innerHTML = me.arrTransId.length;
    };

    /*
    *  this function is used to insert transId into array, if transid is not there in array and also set length of records selected
    * */
    this.setExtraIds = function(iExtraId,iRowIndex)
    {
        var bExist = true;
        if(me.arrExtraId.length != 0)
        {
            for (var j = 0; j < me.arrExtraId.length; j++)
            {
                var arrExtraIds = me.arrExtraId[j];
                for (var i = 0; i < arrExtraIds.length; i++)
                {
                    if (util.trim(arrExtraIds[i]).length > 0 && util.trim(iExtraId[i]).length > 0
                        && iExtraId[i] != arrExtraIds[i])
                    {
                        bExist = false;
                        break;
                    }
                }
                if (!bExist)
                {
                    me.arrExtraId[me.arrExtraId.length] = iExtraId;
                    break;
                }
            }
        }
        else
        {
            me.arrExtraId[me.arrExtraId.length] = iExtraId;
            // me.arrRowIndexes[me.arrRowIndexes.length] = iRowIndex;
        }
        //if(me.iSelect == 1)
        //    document.getElementById('spSelected'+me.iTableId).innerHTML = me.iTotalRecords;
        //else document.getElementById('spSelected'+me.iTableId).innerHTML = me.arrExtraId.length;
    };

/*
    this.setExtraIds = function(iExtraId,iRowIndex)
    {
        var bExist = false;
        if(me.arrExtraId.length != 0)
        {
            for(var i = 0;i <= me.arrExtraId.length;i++)
            {
                if(iExtraId[i] == me.arrExtraId[i])
                {
                    bExist = true;
                    break;
                }
            }
            if(!bExist)
            {
                me.arrExtraId[me.arrExtraId.length] = iExtraId;
               // me.arrRowIndexes[me.arrRowIndexes.length] = iRowIndex;
            }
        }
        else
        {
            me.arrExtraId[me.arrExtraId.length] = iExtraId;
           // me.arrRowIndexes[me.arrRowIndexes.length] = iRowIndex;
        }
        //if(me.iSelect == 1)
        //    document.getElementById('spSelected'+me.iTableId).innerHTML = me.iTotalRecords;
        //else document.getElementById('spSelected'+me.iTableId).innerHTML = me.arrExtraId.length;
    };

*/
    /*
    *  this function is used to return transids array
    * */
    this.getTransIds = function()
    {
        return me.arrTransId;
    };

    this.getExtraIds = function()
    {
        return me.arrExtraId;
    };

    /*
    *  this function is used to return selected rowindexes array
    * */
    this.getRowIndexes = function()
    {
        return me.arrRowIndexes;
    };

    /*
    *  this function is used to remove transid from array
    * */
    this.removeTransIds = function(iTransId)
    {
        for(var i = 0;i < me.arrTransId.length;i++)
        {
            if(parseInt(iTransId) == parseInt(me.arrTransId[i]))
            {
                me.arrTransId.splice(i,1);
                me.arrRowIndexes.splice(i,1);
                break;
            }
        }
        document.getElementById('spSelected'+me.iTableId).innerHTML = me.arrTransId.length;
    };

    /*
     *  this function is used to remove extraid from array
     * */
    this.removeExtraIds = function(iExtraId)
    {
        var arrExtraIds;
        for(var j = 0;j < me.arrExtraId.length;j++)
        {
            arrExtraIds = me.arrExtraId[j];
            if(parseInt(iExtraId[0]) == parseInt(arrExtraIds[0]))
            {
                //isSameExtraIds=false;
                me.arrExtraId.splice(j, 1);
                //me.arrRowIndexes.splice(i, 1);
                //break;
            }
        }
    };


/*
    /!*
    *  this function is used to remove extraid from array
    * *!/
    this.removeExtraIds = function(iExtraId)
    {
        var isSameExtraIds=true;
        for(var j = 0;j < me.arrExtraId.length;j++)
        {
            var arrExtraIds = me.arrExtraId[j];
            for(var i = 0;i < arrExtraIds.length;i++) {

                if (util.trim(arrExtraIds[i]).length>0 && util.trim(iExtraId[i]).length>0
                    && iExtraId[i] != arrExtraIds[i])
                    //&& parseInt(iExtraId[i]) != parseInt(arrExtraIds[i]))
                {
                    isSameExtraIds=false;
                    //me.arrExtraId.splice(i, 1);
                    //me.arrRowIndexes.splice(i, 1);
                    break;
                }
            }
            if(isSameExtraIds)
            {
                me.arrExtraId.splice(j, 1);
                me.arrRowIndexes.splice(j, 1);
            }
        }
        //document.getElementById('spSelected'+me.iTableId).innerHTML = me.arrExtraId.length;
    };

*/
    this.setHiddenValues = function(iTransId,arrValues)
    {
        me.arrHiddenTransIds[me.arrHiddenTransIds.length] = iTransId;
        me.arrHiddenValues[iTransId] = arrValues;
    };

    this.getHiddenValues = function()
    {
        var arrTransIdValues = new Array();
        for(var i = 0;i < me.arrHiddenTransIds.length;i++)
            arrTransIdValues[arrTransIdValues.length] = me.arrHiddenValues[me.arrHiddenTransIds[i]];
        return arrTransIdValues;
    };

    this.removeHiddenValues = function(iTransId)
    {
        for(var i=0;i<me.iTotalRecords;i++)
        {
            if(iTransId == me.arrHiddenTransIds[i])
            {
                me.arrHiddenTransIds.splice(i,1);
                break;
            }
        }
        me.arrHiddenValues[iTransId] = null;
    };
    this.setReportHandle = function(iReportHandle)
    {
        me.iReportHandle = iReportHandle;
    };

    this.getReportHandle = function()
    {
        return me.iReportHandle;
    };

    this.getCurrentPage = function()
    {
        return me.iCurrentPage;
    };
    this.nullifyTransIds = function()
    {
        me.arrTransId=null;
        me.arrExtraId=null;
    };
    this.removeAllIds = function()
    {
        for(var i = 0;i < me.arrTransId.length;i++)
        {
            me.arrTransId.splice(i,1);
            me.arrRowIndexes.splice(i,1);
            me.arrExtraId.splice(i,1);
            me.arrRowIndexes.splice(i,1);
        }
    };

    this.addPagingDataToBuffer=function(sKey,sValue)
    {
        if( me.clPagingDataHashtable==null)
            me.clPagingDataHashtable = {};//new Hashtable();
        me.clPagingDataHashtable[sKey]=sValue;
    };

    this.getPagingDataFromBuffer= function (sKey)
    {
        if( me.clPagingDataHashtable!=null)
            return me.clPagingDataHashtable[sKey];
    };

    this.removePagingDatafromBuffer=function(sKey)
    {  if(me.clPagingDataHashtable!=null)
        delete me.clPagingDataHashtable[sKey];
    };

};
var customFilter = new function()
{
    app.registerInstance("customfilter",this);
    var me = this;
    var g_sPrefix;
    var sFieldId=null,isOptionRemove=false;
    var arrFieldData = [];

    //    function addRow(imgRef,isSort)
    this.addRow=function(imgRef,isSort,formName,lbName)
    {
        var clTBody,iRowCount,objNewRow,iColCount,iRowIndex,objSelect;
        clTBody=imgRef.parentNode.parentNode.parentNode;

        iRowCount = clTBody.rows.length-1;
        iRowIndex = imgRef.parentNode.parentNode.rowIndex;
        iColCount = clTBody.rows[0].cells.length;
        objNewRow=document.createElement("TR");
        var objNewColumn,obInnerHTML;
        if( iRowCount >= 0 )
            objNewRow.className=clTBody.rows[iRowCount].className;

        for( var iIndex=0;iIndex < iColCount;iIndex++ )
        {
            objNewColumn=document.createElement("TD");
            objNewColumn.className=clTBody.rows[iRowIndex-1].cells[iIndex].className;
            objNewColumn.id=clTBody.rows[iRowIndex-1].cells[iIndex].id;
            objNewColumn.setAttribute("type",clTBody.rows[iRowIndex-1].cells[iIndex].getAttribute("type"));
            objNewColumn.style.display=clTBody.rows[iRowIndex-1].cells[iIndex].style.display;
            if(isSort && iIndex>0)
            {
                var value=0;
                if(clTBody.rows[iRowIndex-1].cells[iIndex].style.paddingLeft!="")
                    value =clTBody.rows[iRowIndex-1].cells[iIndex].style.paddingLeft ;
                if(value.indexOf("px")!=-1)
                {
                    value = value.substring(0,value.indexOf("px"));
                    value = parseInt(value);
                    objNewColumn.style.paddingLeft=(value)+"px";
                }
                else objNewColumn.style.paddingLeft="7px";
                //            alert(objNewColumn.style.paddingLeft)
            }
            try
            {
                if(iRowCount >= 0)
                {
                    obInnerHTML=clTBody.rows[iRowIndex-1].cells[iIndex].innerHTML;
                    //                    alert(obInnerHTML)
                    objNewColumn.innerHTML=obInnerHTML;
                    objNewRow.appendChild(objNewColumn);
                    clTBody.insertBefore(objNewRow,clTBody.rows[iRowIndex]);
                    if(iIndex==1 && !isSort)
                    {
                        objSelect = clTBody.rows[iRowIndex].cells[iIndex].children[0];
                        if(objSelect.getAttribute("disabled"))
                            objSelect.removeAttribute("disabled")
                        if(!isOptionRemove &&objSelect.options.length > 0)
                        {
                            for(var i=objSelect.options.length-1;i>=0;i--)
                            {
                                if(objSelect.options[i].selected)
                                    objSelect.remove(i);
                            }
                            isOptionRemove =true;
                        }
                    }
                    var objInput = clTBody.rows[iRowIndex].cells[iIndex].getElementsByTagName("input")[0];
                    if(iIndex==0)
                    {
                        clTBody.rows[iRowIndex].cells[iIndex].children[0].id = clTBody.rows[0].cells[iIndex].children[0].id+iRowIndex;
                        clTBody.rows[iRowIndex].cells[iIndex].children[0].name = clTBody.rows[0].cells[iIndex].children[0].name+iRowIndex;
                        clTBody.rows[iRowIndex].cells[iIndex].id = clTBody.rows[0].cells[iIndex].id+"_"+iRowIndex;
                    }
                    else if(iIndex<4)
                    {
                        var objComp = clTBody.rows[0].cells[iIndex].children[0];
                        clTBody.rows[iRowIndex].cells[iIndex].children[0].id = lbName+"["+iRowIndex+"]."+objComp.getAttribute('fieldName');
                        clTBody.rows[iRowIndex].cells[iIndex].children[0].name =lbName+"["+iRowIndex+"]."+objComp.getAttribute('fieldName');
                        clTBody.rows[iRowIndex].cells[iIndex].id = clTBody.rows[0].cells[iIndex].id+"_"+iRowIndex;
                    }
                    else
                    {
                        var id = clTBody.rows[0].cells[iIndex].children[0].id;
                        if(!util.startsWith(objInput.id,"calender"))
                            clTBody.rows[iRowIndex].cells[iIndex].children[0].id = id.substring(0,id.indexOf("[")+1)+iRowIndex+"]";
                        clTBody.rows[iRowIndex].cells[iIndex].children[0].name = lbName+"["+iRowIndex+"].compareValue";
                        clTBody.rows[iRowIndex].cells[iIndex].id = clTBody.rows[0].cells[iIndex].id+"_"+iRowIndex;
                    }
                    if(util.startsWith(objInput.id,"cbCompareValue"))
                    {
                        InstallAC(document.forms[formName],document.getElementById(objInput.id),'','',null,null,null,null,null,'');
                    }
                    if(iIndex>=4)
                    {
                        clTBody.rows[iRowIndex].cells[(iIndex)].getElementsByTagName("input")[0].value = "";
                        var calButtonId=clTBody.rows[iRowIndex].cells[iIndex].getElementsByTagName("img")[0];
                        objInput.id = clTBody.rows[0].cells[iIndex].getElementsByTagName("input")[0].id+"_"+iRowIndex;
                        calButtonId.id = clTBody.rows[0].cells[iIndex].getElementsByTagName("img")[0].id+"_"+iRowIndex;
                    }
                    if(util.startsWith(objInput.id,"calender"))
                        Calendar.setup({inputField    : objInput.id,button        : calButtonId.id,align         : 'Tr',ifFormat         : '%d/%m/%Y'});
                }
            }
            catch(e){}
        }
    };

    //    function removeRow(imgRef)
    this.removeRow=function(imgRef)
    {
        var clTBody,iRowCount,iRowIndex;
        clTBody=imgRef.parentNode.parentNode.parentNode;
        iRowIndex=imgRef.parentNode.parentNode.rowIndex;
        iRowCount = clTBody.rows.length;
        if(iRowCount != 2  )
        {
            if(iRowIndex!=0)
            {
                clTBody.deleteRow(iRowIndex);
                isOptionRemove=false;
            }
        }
    };


    //    function changeFldType(selectRef)
    this.changeFldType=function(selectRef)
    {
        var iColCount,sInputId,clTBody,selectFld,selValue,selId,iIndex="",iRowIndex;
        clTBody=selectRef.parentNode.parentNode.parentNode;
        iColCount = clTBody.rows[0].cells.length;
        iRowIndex = selectRef.parentNode.parentNode.rowIndex;
        for(var i=0; i<iColCount; i++)
        {
            //            alert(clTBody.rows[iRowIndex].cells[i].style.display);
            if(clTBody.rows[iRowIndex].cells[i].style.display=="block")
            {
                sFieldId = clTBody.rows[iRowIndex].cells[i].id;
                sInputId = clTBody.rows[iRowIndex].cells[i].children[0].id;
            }
        }
        selectFld = document.getElementById("customFilter["+iRowIndex+"].fieldId");
        selValue = selectFld.options[selectFld.selectedIndex].value;
        //        selId = selectFld.options[selectFld.selectedIndex].id;
        /*if(document.getElementById(sInputId).value!=null)
         document.getElementById(sInputId).value="";*/
        if( (selValue==dataType.DATATYPE_COMBO) )
        {
            if(!util.startsWith(sFieldId,"combo"))
            {
                document.getElementById(sFieldId).style.display="none";
                //                alert(sFieldId);
                if(iRowIndex>0)
                {
                    sFieldId ="combo"+"_"+iRowIndex;
                    document.getElementById(sFieldId).style.display="block";
                }
                else
                {
                    sFieldId = "combo";
                    document.getElementById(sFieldId).style.display="block";
                }
            }

        }
        else if(selValue==dataType.DATATYPE_INT || selValue==dataType.DATATYPE_SHORT || selValue==dataType.DATATYPE_LONG || selValue==dataType.DATATYPE_BYTE)
        {
            if(!util.startsWith(sFieldId,"num"))
            {
                document.getElementById(sFieldId).style.display="none";
                if(iRowIndex>0)
                {
                    sFieldId ="num"+"_"+iRowIndex;
                    document.getElementById(sFieldId).style.display="block";
                }
                else
                {
                    sFieldId = "num";
                    document.getElementById(sFieldId).style.display="block";
                }
            }
        }
        else if(selValue==dataType.DATATYPE_STRING )
            {
                if(!util.startsWith(sFieldId,"string"))
                {
                    document.getElementById(sFieldId).style.display="none";
                    if(iRowIndex>0)
                    {
                        sFieldId ="string"+"_"+iRowIndex;
                        document.getElementById(sFieldId).style.display="block";
                    }
                    else
                    {
                        sFieldId = "string";
                        document.getElementById(sFieldId).style.display="block";
                    }
                }
            }
            else if(selValue==dataType.DATATYPE_FLOAT || selValue==dataType.DATATYPE_DOUBLE)
                {
                    if(!util.startsWith(sFieldId,"float"))
                    {
                        document.getElementById(sFieldId).style.display="none";
                        if(iRowIndex>0)
                        {
                            sFieldId ="float"+"_"+iRowIndex;
                            document.getElementById(sFieldId).style.display="block";
                        }
                        else
                        {
                            sFieldId = "float";
                            document.getElementById(sFieldId).style.display="block";
                        }
                    }
                }
                else if(selValue==dataType.DATATYPE_DATE || selValue==dataType.DATATYPE_DATETIME)
                    {
                        if(!util.startsWith(sFieldId,"date"))
                        {
                            document.getElementById(sFieldId).style.display="none";
                            if(iRowIndex>0)
                            {
                                sFieldId ="date"+"_"+iRowIndex;
                                document.getElementById(sFieldId).style.display="block";
                            }
                            else
                            {
                                sFieldId = "date";
                                document.getElementById(sFieldId).style.display="block";
                            }
                        }
                    }
    };

    //    this.save=function(sUrl)
    this.save=function(iType)
    {
        var sUrl,sParams,iReportHandle=0,iModuleId,iLayoutId,iUserId=0,sEventCallBack=null;
        if(!clFieldsFilter.validateFilter("custFilter",false))
            return false;
        else
            cross.setVisible(document.getElementById("msgbox"),false);

        var sFilterParams = clFieldsFilter.getFilterData("custFilter",Constants.FILTERMODES_NORMAL,1,iType);
        var clTable,iRowCount,iCount=0;
        clTable=new sTable('custFilterfiltertbl');
        iRowCount=clTable.getRowCount();
        var cbField,cbOperator,cbValue,objValue;
        cbField=getComboInstance(clTable.getElementAt(0,1).id);
        iDataType = cbField.getSelectedAttr("dtype");
        cbOperator=getComboInstance(clTable.getElementAt(0,2).id);
        if(getComboInstance(clTable.getElementAt(0,3).id))
            cbValue=getComboInstance(clTable.getElementAt(0,3).id);
        else
            objValue=document.getElementById(clTable.getElementAt(0,3).id);
         var sField,sOperator,sValue,cbField,iFieldId,iDataType;
        sField=cbField.getSelectedItem()+"|"+cbField.getSelectedId();
        sOperator=cbOperator.getSelectedItem()+"|"+cbOperator.getSelectedId();
        if(cbValue)
        sValue=cbValue.getSelectedItem()+"|"+cbValue.getSelectedId();
        else
        sValue=objValue.value;
        for(var i=0;i<iRowCount;i++){
            cbField = getComboInstance(clTable.getElementAt(i,1).id);
            iFieldId = cbField.getSelectedId();
            if(iFieldId > 0){
                iCount++;
                 arrFieldData[arrFieldData.length] = [iFieldId,cbField.getSelectedAttr("dtype")];
            }
            /*if(iCount>=2)
            break;*/
        }
        if(iCount>=2)
            parent.listView.resetFilter();
        else{
            var iModuleId = parent.listView.getModuleId();
            if(util.trim(sFilterParams).length>0 && parent.document.getElementById("hdListViewType_"+iModuleId))
                sFilterParams+="&windowType="+parent.document.getElementById("hdListViewType_"+iModuleId).value;
            if(cbOperator && cbOperator.getSelectedId() > -1)
              parent.listView.setFilterValues(sField,sOperator,sValue,iDataType);
        }
        parent.listView.setAdvSearchParams(sFilterParams);
    };

    /*this.arhSave=function(sResponse)
    {
        util.toggleBackground(false);
        parent.listView.setFilterCriteria(clFieldsFilter.getFilterData('custFilter',Constants.FILTERMODES_NORMAL));
        parent.listView.arhSearchHandler(sResponse);
    };*/

    this.setCustFilterParams=function(sParams)
    {
        parent.document.getElementById("custFilterParams").value = "";
        parent.document.getElementById("custFilterParams").value = sParams;
    };

    //    function getFilterValues()
    this.getFilterValues=function()
    {
        var submitContent="",iRowCnt,iColCnt;
        var clTable = new sTable();
        clTable.setTableId('filterTab');
        iRowCnt = clTable.getRowCount();
        iColCnt = clTable.getColCount();
        //    alert("iRowCnt  "+iRowCnt)
        //    alert("iColCnt  "+iColCnt)
        for (var iRow = 0; iRow < iRowCnt; iRow++)
        {
            for (var iCol = 1; iCol < iColCnt; iCol++)
            {

                if(iCol==iColCnt-1)
                {
                    //                alert(clTable.getElementAt(iRow, iCol).outerHTML);
                    submitContent+="filter["+iRow+"].col["+iCol+"]= "+clTable.getElementAt(iRow, iCol).getElementsByTagName("input")[0].value+"&";
                }
                else
                {
                    submitContent+="filter["+iRow+"].col["+iCol+"]= "+clTable.getValueAt(iRow, iCol)+"&";
                }
                //            alert("submitContent+++++++----"+submitContent)
            }
        }
        submitContent = submitContent.substring(0,submitContent.lastIndexOf("&"));
        //        alert("submitContent----"+submitContent)
    };
    this.closeCustomDialog = function()
    {
        parent.listView.clCustomDialog.hide();
    };
    this.onBlurChgComponentType = function(thisObj,sPrefix,iDataTypeId)
    {
       g_sPrefix=sPrefix;
       var  objValCombo,objFldCombo,objOperCombo,iFieldId,eleValue;
       objFldCombo = getComboInstance(thisObj.id);
       iFieldId = objFldCombo.getSelectedId();
    //           iDataTypeId = objFldCombo.getSelectedAttr("dtype");
    //           objOperCombo = getComboInstance(sPrefix+"combo_operator");
       eleValue = document.getElementById(sPrefix+"value");//value in filter
       var iModuleTypeId = parent.listView.getModuleId();

       if(iDataTypeId == Constants.DATATYPE_NUMBERLIST || iDataTypeId == Constants.DATATYPE_STRINGLIST)
       {
           eleValue.name = sPrefix+"value1";
           InstallAC("filterFrm",document.getElementById(eleValue.id),sPrefix+"value",null,null,null,null,null,null,null,null,
                   null,null,null,null,null,null);
           objValCombo = getComboInstance(eleValue.id);
           eleValue.setAttribute("dtype",iDataTypeId);

           objValCombo.setMasterType2(Genernal_SERVER_VALUES,0,0,iFieldId,iModuleTypeId,true);
       }
       else if(iDataTypeId >= Constants.LEADS)
       {
           eleValue.value = "";
           eleValue.name = sPrefix+"value1";
    //               objOperCombo.setSelectedIndex(0);
           /*InstallAC("filterFrm",document.getElementById(eleValue.id),sPrefix+"value",null,null,null,null,null,null,
                   null,null,null,null,null,null,null,null,null,null);*/
           var iSearchBy = objFldCombo.getSelectedAttr("searchby");
           simpleInstallAC("filterFrm",document.getElementById(eleValue.id),sPrefix+"value",iSearchBy > 0 ? iSearchBy:null,iFieldId,null,null,null,null,null,Constants.COMBO_RENDER_MODE_ADV_FILTER);
           objValCombo = getComboInstance(eleValue.id);
           objValCombo.setMasterType2(iDataTypeId,iSearchBy > 0 ? iSearchBy:null,0,0,iModuleTypeId,true);
       }
       else
       {
           //                objOperCombo.setSelectedIndex(-1);
           eleValue.name = sPrefix+"value";
           UnInstallAC(eleValue);
       }
       //        }
    };
    this.getFilterData=function(){
        return clFieldsFilter.getFilterData(g_sPrefix,Constants.FILTERMODES_NORMAL);
    };
    this.setFilterCriteria=function(sPrefix){
        var arrValues=parent.listView.getFilterValues();
        var iFieldId=arrValues[1].substring(arrValues[1].indexOf("|")+1,arrValues[1].length);
        var cbField=getComboInstance(sPrefix+'fieldName');
        var cbOperator=getComboInstance(sPrefix+'combo_operator');
        var cbConjunction=getComboInstance(sPrefix+'combo_conjunction');

        var objValue=document.getElementById(sPrefix+'value');
        if(iFieldId>0){
            cbField.checkAndAddItem(arrValues[1],true);
            cbOperator.checkAndAddItem(arrValues[2],true);
            customFilter.onBlurChgComponentType(document.getElementById(sPrefix+'fieldName'),sPrefix,arrValues[0]);
            var cbValue=getComboInstance(sPrefix+'value'); 
            if(cbValue)
                cbValue.checkAndAddItem(arrValues[3],true);
            else
                objValue.value=arrValues[3];

            var iConjunction=cbConjunction.getSelectedId();
            if( iFieldId> 0 && iConjunction < 0)
                cbConjunction.setSelectedIndex(0);

              arrFieldData[arrFieldData.length] = [iFieldId,arrValues[0]];
        }
        else{
            if(cbField && cbField.getSelectedId()<0)
                cbConjunction.setSelectedIndex(-1);
        }

    };
    this.getFieldDataType = function(iFieldId){
        var iDataTypeId = 0;
        if(arrFieldData != null ){
            for(var iIndex = 0 ; iIndex < arrFieldData.length ; iIndex++){
                if(arrFieldData[iIndex][0] == iFieldId){
                  iDataTypeId = arrFieldData[iIndex][1];
                    break;
                }
            }
        }
        return iDataTypeId;
    };
};