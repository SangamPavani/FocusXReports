/* To Use MultiSelect Feature Combobox should be placed in Div or Span*/
var clMultiCombo = new function()
{
    var me=this;
    var is_ie = ( /msie/i.test(navigator.userAgent) && !/opera/i.test(navigator.userAgent) );
    this.selectMultiItem = function(id,hfName)
    {
        //document.getElementById(""+id+"").onblur = function(){clCombo.addItem(id,hfName,false);};
        //document.getElementById(""+id+"").onkeypress = function(e){clCombo.onClkDelete(id,e);};
    };

    /*This method is used to create parent div container */

    this.createContainer = function(sComboId)
    {
        var ObjCombo,ObjContainer,objDiv,objLnk;
        ObjCombo =  document.getElementById(""+sComboId+"");
        //ObjCombo.style.border="0px";
        //ObjContainer=document.createElement("div");
        ObjContainer=document.getElementById("data_"+sComboId);
        ObjContainer.id="data_"+sComboId;
        if(ObjContainer.style.width=="")
        {
            ObjContainer.style.width=ObjCombo.offsetWidth-4+"px";
            //ObjCombo.parentNode.style.width=ObjCombo.offsetWidth+"px";
            ObjCombo.parentNode.parentNode.style.width=ObjCombo.offsetWidth+"px";
        }
        else
        {
            var sWidth=ObjCombo.style.width;
            var iWidth=sWidth.substring(0,sWidth.indexOf("p"));
            ObjContainer.style.width=iWidth-4+"px";
            //ObjCombo.parentNode.style.width=iWidth+"px";
            ObjCombo.parentNode.parentNode.style.width=iWidth+"px";
        }

        ObjContainer.className="mcContainer";
        objDiv=document.createElement("div");
        objDiv.id="remo";
        objLnk=document.createElement("a");
        objLnk.href="javascript:void(0)";
        objLnk.className="remove CloseButton CloseButtonSmall";
        objDiv.align="right";
        //ObjContainer.appendChild(objDiv);
        //ObjContainer.insertBefore(objDiv,ObjCombo.parentNode);
        objDiv.appendChild(objLnk);
        ObjCombo.parentNode.insertBefore(ObjContainer,ObjCombo);
        //objLnk.setAttribute("onclick","clCombo.removeMultiCombo('"+ObjContainer.id+"')");
        objLnk.onclick=function(){clMultiCombo.removeMultiCombo(ObjContainer.id);};
    };
    /* obj(Combobox object) is passed while creating
     iSelectedId,sValue are used only while editng
     */

    /**
     * This method is used to create and add child span to parent divContainer
     * @param id combobox id
     * @param hfName combobox hidden field name
     * @param isEdit if true edit mode
     * @param iSelectedId combobox Item Id
     * @param sValue combobox Item value
     */

    this.addItem = function(id,hfName,isEdit,iSelectedId,sValue)
    {
        var iComboVal,sComboVal,obj,spComboItem,spComboItem1,ObjContainerDiv,objHidden,objLnk,sWidth,iWidth;
        obj = document.getElementById(""+id+"");
        var isTableColumn = obj.getAttribute("istablecolumn");
        if(!isEdit)
            iComboVal=getComboInstance(""+id+"").getSelectedId();
        else
            iComboVal=iSelectedId;

        if(isTableColumn=='true'){
            ObjContainerDiv =  document.getElementById("div_"+id);
            /*var tempObj = obj.parentNode.parentNode;
            if(tempObj.getElementsByClassName("mcContainer").length > 0){
                ObjContainerDiv =tempObj.getElementsByClassName("mcContainer")[0];
            }else{
                ObjContainerDiv =  document.createElement("div");
                ObjContainerDiv.id = "div_"+id;
            }*/
        }   else{
            ObjContainerDiv =  document.getElementById(id).parentNode;
        }



        if(iComboVal != -1 && iComboVal != 0 &&(iComboVal>0 || iComboVal.length >0))
        {

            //if(ObjContainerDiv.style.height=="")
            //    ObjContainerDiv.style.height="100%";

            /*if(isTableColumn=='true') {
                ObjContainerDiv.style.border = "1px solid #CCCCCC";
            }*/

            //ObjContainerDiv.style.overflowY = "auto";
            //obj.style.border="0px";
            if(!me.searchItem(id,iComboVal))
            {
                if(!isEdit)
                    sComboVal=getComboInstance(""+id+"").getSelectedItem();
                else
                    sComboVal=sValue;
                spComboItem = document.createElement("span");
                spComboItem1 = document.createElement("span");
                spComboItem.className="mcValue";
                spComboItem.id=id+"_data_"+iComboVal;
                spComboItem1.innerHTML=sComboVal;
                spComboItem.appendChild(spComboItem1);
                spComboItem1.className="mcText";

                if(isTableColumn=='true'){
                    spComboItem.style.maxWidth="75px";
                    spComboItem.style.overflow = "hidden";
                }

                if(ObjContainerDiv.style.width=="")
                {
                    iWidth=ObjContainerDiv.offsetWidth;
                    if(iWidth > 0)
                        ObjContainerDiv.style.width = iWidth+"px";
                    else
                        ObjContainerDiv.style.width = document.getElementById(id).style.width+"px";
                }
                else
                {
                    sWidth=ObjContainerDiv.style.width;
                    iWidth=sWidth.substring(0,sWidth.indexOf("p"));
                }
                if(is_ie)
                {
                    spComboItem.style.width=((iWidth)/3)+10+"px";
                    spComboItem1.style.width=((iWidth)/3)-20+"px";
                }
                else
                {
                    spComboItem1.style.maxWidth=iWidth-20+"px";
                }
                if(isTableColumn=='true'){
                    //do not create link
                }else{
                    objLnk = document.createElement("a");
                    objLnk.href="javascript:void(0)";
                    objLnk.onclick=function(){clMultiCombo.removeItem(ObjContainerDiv,spComboItem.id,window.event);};
                    objLnk.className="remove CloseButton CloseButtonSmall"
                }
                objHidden = document.createElement("input");
                objHidden.type = "hidden";
//                objHidden.name = hfName;
                objHidden.id = id+"_option_"+iComboVal;
                objHidden.value = iComboVal;

                if(isTableColumn=='true'){

                    ObjContainerDiv.insertBefore(spComboItem,ObjContainerDiv.childNodes[0]);
                    //ObjContainerDiv.style.width = "94%";
                    ObjContainerDiv.style.display = "inline-block";
                    ObjContainerDiv.style.height = "20px";
                    ObjContainerDiv.style.overflow = "hidden";

                    /*if(!document.getElementById("spExpand_"+id)){
                        var spExpand = document.createElement("span");
                        spExpand.id = "spExpand_"+id;
                        spExpand.style.backgroundColor = "#d2d2e4";
                        //spExpand.style.width = "11%";
                        spExpand.style.height = "24px";
                        spExpand.style.textAlign = "center";
                        spExpand.style.float = "right";
                        spExpand.style.cursor = "default";

                        spExpand.innerHTML = "...";
                        spExpand.onclick =  function(){
                            clMultiCombo.onClickShowMultiValues(id);
                        };
                        obj.parentNode.appendChild(ObjContainerDiv);
                        obj.parentNode.appendChild(spExpand);

                    }else{
                        document.getElementById("spExpand_"+id).style.display = "block";
                    }*/
                    //obj.style.width = "1%";
                } else{
                    obj.parentNode.insertBefore(spComboItem,obj);
                }

                if(objLnk)
                    spComboItem.appendChild(objLnk);

                spComboItem.appendChild(objHidden);
                if(spComboItem1.offsetWidth>=iWidth-20)
                    spComboItem1.title=sComboVal;
                getComboInstance(id).clearHighlight();
                getComboInstance(id).clearSelection();
                //obj.style.width=me.getComboWidth(obj)+"px";
                obj.style.cssFloat  ="right";
                if(isTableColumn=='true') {
                }else{
                    if(!isEdit){
                        setTimeout(function() { document.getElementById(id).focus(); }, 1);
                    }
                }
                ObjContainerDiv.className = "mcContainer";
            }
            else
            {
                 getComboInstance(id).clearHighlight();
                getComboInstance(id).setSelectedIndex(-1);
            }
        }
//        alert(me.getSelectedIds(id))
    };

    this.onClickShowMultiValues = function(id)
    {
        var iFieldId=id.substring(1,id.indexOf("["));
        var objMultiCombo = document.getElementById(id);
        var sName = objMultiCombo.getAttribute("name");
        var sHiddenName = objMultiCombo.getAttribute("hiddenname");
        var sMasterType = objMultiCombo.getAttribute("mastertype");
        var arrCascadeIds = getComboInstance(id).getCascadeParentIds();
        var sCondition = getComboInstance(id).getCondition();

        var iWidth = 520;
        var iHeight = 380;
        var arrActions = new Array();
        arrActions[0] = MsgHandler.getMsg(MsgConstants.OK,0,0)+"|clAdvancedMultiSelect.onClkUpdateValues(\""+id+"\",\""+sHiddenName+"\")";
        arrActions[1] = MsgHandler.getMsg(MsgConstants.CANCEL,0,0)+"|clAdvancedMultiSelect.onClkCancel()";

        var sTitle;
        sTitle = "MultiSelect Values";
        var sUrl = "common/fieldsFilter!getMultiSelectValues.do?id="+id+"&name="+sName;
        sUrl += "&hiddenname="+sHiddenName+"&mastertype="+sMasterType;
        if(arrCascadeIds != null)
        {
            for (var i = 0; i < arrCascadeIds.length; i++) {
                sUrl += "&cascadeIds=" + arrCascadeIds[i];
            }
        }
        if(sCondition != null && sCondition.trim().length > 0)
            sUrl += "&condition="+sCondition;

        if(id.indexOf("F") == 0 && id.indexOf("[") >= 0 && id.indexOf("]") >= 0)
        {
            sUrl += "&fieldId=" + iFieldId;
            var clTable = moduleBody.getTableObject(id,false);
            var iCellIndex = tablerow.getCellIndexByFieldId("F"+iFieldId+"[0]");
            var sHeaderName =  cross.getInnerText(clTable.getHeaderElementAt(iCellIndex));
            sTitle = "Select - "+sHeaderName;
        }
        var dlgMultiSelect = new DialogBox("MultiSelectValues", sTitle, 80, 110, iWidth, iHeight, sUrl, false, null, true, true, arrActions, false, null, true, false, false, true, false, false, true);
        dlgMultiSelect.onClose("clAdvancedMultiSelect.onClkClose");
        dlgMultiSelect.setCenter();
        dlgMultiSelect.show();

    };


    /**
     * This method is used to add comboitem to multiselect combobox
     * @param id multicombo box Id
     * @param sHiddenName multicombo box hidden field name
     * @param arrValues array of selected comboItem values
     * @param arrSelectedIds array of selected comboItem Ids
     * @param arrRecentCascadeVals
     */
    this.addMultiSelectComboItems = function(id,sHiddenName,arrValues,arrSelectedIds,arrRecentCascadeVals)
    {

        var ObjContainer = document.getElementById("div_"+id);
        /*var arrSpan = ObjContainer.getElementsByClassName("mcValue");

        while(arrSpan.length > 0){
            ObjContainer.removeChild(arrSpan[0]);
        }*/
        clMultiCombo.removeAllItems(id);

        //if(arrValues.length < 1){
            //document.getElementById("spExpand_"+id).style.display = "none";
            //ObjContainer.style.width = "1%";
            ///ObjContainer.style.border = "none";
            //document.getElementById(id).style.width = "97%";
        //}
        if(arrValues.length > 0) {
            for(var i = 0;i < arrValues.length; i++){
                clMultiCombo.addItem(id,sHiddenName,true,arrSelectedIds[i],arrValues[i])
            }
        }

        if(arrRecentCascadeVals != null)
            getComboInstance(id).setRecentCascadeValues(arrRecentCascadeVals);

    };
    /**This method is to calculate comboBox width after selecting an item
     * @param objCombo combobox object*/

    this.getComboWidth = function(objCombo)
    {
        var ObjDvContainer,sWidth,iDvWidth,arrSpan,iCount,iWidth=0,iCounter=0;
        ObjDvContainer = objCombo.parentNode;
        sWidth=ObjDvContainer.style.width;
        iDvWidth = sWidth.substring(0,sWidth.indexOf("p"));
        arrSpan=cross.getChildren(objCombo.parentNode);
        iCount = arrSpan.length;
        for(var i=0;i<iCount-3;i++)
        {
            iCounter++;
            iWidth+=arrSpan[i].offsetWidth;
            if(iWidth>(iDvWidth-(4*iCounter)))
            {
                iCounter=1;
                iWidth =arrSpan[i].offsetWidth;
            }
        }
        var iTotalWidth,iMinComboWidth;
        iTotalWidth=iDvWidth-iWidth-(4*iCounter);
        iMinComboWidth = 60;
        if(iTotalWidth<iMinComboWidth)
            return iDvWidth;
        else
            return iTotalWidth-4;

    };

    /**This method is used to get the parent container of multicombobox
     * @param isTableColumn
     * @param sComboId
     * */
    this.getDivContainer = function(isTableColumn,sComboId){

        var objDv;
        if(isTableColumn=='true'){
            objDv=document.getElementById("div_"+sComboId);
        }else{
            objDv=document.getElementById(sComboId).parentNode;
        }
        return objDv;
    };

    /**This method is used to remove an item
     * @param objDv conainer div object
     * @param spId comboitem span id*/

    this.removeItem = function(objDv,spId,e)
    {
        var spElem = document.getElementById(""+spId+"");
        var sDvId = objDv.getAttribute("id");
        var isTableColumn = 'false';
        var objCombo=null;
        var sCbId;
        if(sDvId)
            sCbId = sDvId.substring(sDvId.indexOf("_")+1,sDvId.length);
        else
            sCbId = spId.substring(0,spId.indexOf("_"));

        objCombo=document.getElementById(sCbId);
        isTableColumn = objCombo.getAttribute("istablecolumn");
        var isShowDropDown = objCombo.getAttribute("isdropdownexists");

        if(isTableColumn=='true'){
            //objDv = document.getElementById("div_"+sCbId);
        } else{
            objDv.removeChild(spElem);
            var arrSpan = cross.getChildren(objDv);
            if((isShowDropDown=='true' && arrSpan.length==2) || arrSpan.length==3)
            {
                objDv.className = "";
                arrSpan[0].style.border="1px solid #CCCCCC";
            }
            document.getElementById(sCbId).style.width = objDv.style.width;

        }

        cross.invokeEventListeners(cross.EVENT_ONBLUR,null,objCombo,e);

    };

    /**This method is used to remove multiCombo
    * @param multiComboId comboId*/

    this.removeMultiCombo = function(multiComboId)
    {
        var objDiv=document.getElementById(""+multiComboId+"");
        objDiv.parentNode.removeChild(objDiv);
    };
    /**This method is used to remove all items selected
     * @param sComboId comboId */
    this.removeAllItems = function(sComboId)
    {
        var objCombo = document.getElementById(sComboId);
        var isTableColumn = objCombo.getAttribute("istablecolumn");
        var objDiv;
        objDiv = clMultiCombo.getDivContainer(isTableColumn,sComboId);

        var arrSpan = cross.getChildren(objDiv);
        var limit = arrSpan.length-3;

        if(isTableColumn=='true'){
            limit = arrSpan.length;
            for(var i=0;i<limit;i++)
                objDiv.removeChild(arrSpan[i]);
        }else{
            for(var i=0;i<limit;i++)
                objDiv.removeChild(arrSpan[i]);
            document.getElementById(sComboId).style.width = objDiv.style.width;
        }

    };

    /**This method is used to search whether Item is selected previously
      ie., a item can be selected only once
     @param sComboId comboxId
     @param iChildId comboItemid*/

    this.searchItem = function(sComboId,iChildId)
    {
        var sId=sComboId+"_option_"+iChildId;
        if(document.getElementById(""+sId+"")==null)
            return false;
        else
        {
            document.getElementById(sComboId).value="";
            setTimeout(function() { document.getElementById(sComboId).focus(); }, 1);
            return true;
        }
    };

    /**
     * This method is used to set items while editing
     * @param sResponse comboItems selected data
     * @param sComboId combobox Id
     * @param hfName combobox hiddenfield name
     * @param isStringlist if true stringlist else object[]
     */

    this.setComboValues = function(sResponse,sComboId,hfName,isStringlist)
    {
        sResponse=eval(sResponse);
        var sRes;
        if(sResponse && sResponse.length>0)
        {
            //me.createContainer(sComboId);
            for(var i=0;i<sResponse.length;i++)
            {
                sRes = sResponse[i];
                if(isStringlist)
                me.addItem(sComboId,hfName,true,sRes,sRes);
                else
                me.addItem(sComboId,hfName,true,sRes[1],sRes[0]);
            }
        }
    };

    /**This method is used to set items through javascript for ex ["Test Customer|1","ABC Company|2","AL WIFAQ|3"]
     *@param sResponse comboItems selected data
     * @param sComboId combobox Id
     * @param hfName combobox hiddenfield name*/

    this.setComboValuesArray = function(sResponse,sComboId,hfName)
    {
        sResponse=eval(sResponse);
        var sRes;
        if(sResponse && sResponse.length>0)
        {
            clMultiCombo.removeAllItems(sComboId);
            //me.createContainer(sComboId);
            for(var i=0;i<sResponse.length;i++)
            {
                sRes = sResponse[i];
                sRes = sRes.split("|");
                me.addItem(sComboId,hfName,true,sRes[1],sRes[0]);
            }
        }
    };

    /**This method is to get list of selected Items IDs
    * @param id combobox id*/

    this.getSelectedIds = function(id)
    {
        var obj,iCount=0,arrSpan,arrChild,i;
        //obj =  document.getElementById(id).parentNode;
        var objCombo=document.getElementById(id);
        obj = clMultiCombo.getDivContainer(objCombo.getAttribute("istablecolumn"),id);
        arrSpan = cross.getChildren(obj);
        var isTableColumn = objCombo.getAttribute("istablecolumn");
        var isShowDropDown = objCombo.getAttribute("isdropdownexists");
        if(isTableColumn=='true')
        {
            iCount = arrSpan.length;
            var iIndex = 1;
        }
        else if(isShowDropDown=='true')
        {
            iCount=arrSpan.length-2;
            var iIndex = 2;
        }
        else
        {

            iCount=arrSpan.length-3;
            var iIndex = 2;
        }
        var arrIds=new Array();
        for(i=0;i<iCount;i++)
        {
            arrChild = cross.getChildren(arrSpan[i]);
            arrIds[i]=arrChild[iIndex].value;
        }
        return arrIds;
    };

      /**This method is to get list of selected Items
       * @param id combobox id*/
    this.getSelectedItems = function(id)
    {
        var obj,iCount=0,arrSpan,arrChild,i;
        //obj =  document.getElementById(id).parentNode;
        var objCombo=document.getElementById(id);
        obj = clMultiCombo.getDivContainer(objCombo.getAttribute("istablecolumn"),id);
        arrSpan = cross.getChildren(obj);
        var arrItems = new Array();
        if(arrSpan.length > 0) {
            var isTableColumn = objCombo.getAttribute("istablecolumn");
            var isShowDropDown = objCombo.getAttribute("isdropdownexists");
            if (isTableColumn == 'true') {
                iCount = arrSpan.length;
            }
            else if(isShowDropDown=='true')
            {
                iCount=arrSpan.length-2;
            }
            else {

                iCount = arrSpan.length - 3;
            }
            for (i = 0; i < iCount; i++) {
                arrChild = cross.getChildren(arrSpan[i]);
                arrItems[i] = cross.getInnerText(arrChild[0]);
            }
        }
        return arrItems;
    };

    /**This method is to delete recently selected item when delete key is pressed
     * @param id combobox id*/

    this.onClkDelete = function(id,evnt)
    {

        //keyCode for del is 46
        var e = cross.getEvent(evnt);
        var code = cross.getKeyCode(e);
        //var code = (e.which) ? e.which : e.keyCode ;
        if(document.getElementById(id).value.length==0)
        {

            var objContainerDiv,iCount=0,arrSpan,obj;
            obj = document.getElementById(id);
            var isTableColumn = obj.getAttribute("istablecolumn");
            objContainerDiv = clMultiCombo.getDivContainer(isTableColumn,id);
            //iCount=objContainerDiv.childNodes.length;
            arrSpan = cross.getChildren(objContainerDiv);
            iCount = arrSpan.length;
            if(iCount==3 && (isTableColumn=='false' || !isTableColumn))
            {
                objContainerDiv.className = "";
                obj.style.border="1px solid #CCCCCC";
                /*dvElem = objContainerDiv.parentNode;
                 dvElem.removeChild(objContainerDiv);*/
            }else if(isTableColumn=='true' && iCount == 0){
                objContainerDiv.className = "";
                obj.style.border="1px solid #CCCCCC";
            }
            else
            {
                //arrSpan = cross.getChildren(objContainerDiv);
                getComboInstance(id).HidePopUp();
                objContainerDiv.removeChild(arrSpan[iCount-4]);
                obj.style.width=me.getComboWidth(obj)+"px";
            }
        }
    };

    /**This method is to validate multi combobox
     * @param sComboId combobox id*/
    this.isValueSelected = function(sComboId)
    {
        var objContainerDiv;
        var objCombo = document.getElementById(sComboId);
        var isTableColumn = objCombo.getAttribute("istablecolumn");
        var isShowDropDown = objCombo.getAttribute("isdropdownexists");
        objContainerDiv = clMultiCombo.getDivContainer(isTableColumn,sComboId);
        var arrSpan = cross.getChildren(objContainerDiv);
        if(isTableColumn=='true'){
          return ((arrSpan.length)>0)
        }
        else if(isShowDropDown=='true'){
          return ((arrSpan.length)>2)
        }
        return ((arrSpan.length)>3);
    };
};


