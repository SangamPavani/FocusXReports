/**
 * Created by samresh on 17-07-2017.
 */
    //https://developers.google.com/drive/api/v3/reference/permissions/

var clDrivePicker = new function () {

    var me = this;
    me.iClient_Id = "873746576654-0cs7a7c2ur7f82kao1u4esbs76gbnscq.apps.googleusercontent.com";
        me.sApiKey = "AIzaSyB3G-5TRWFjjwLxia_0yqQjyYy0zPz7gsA";

    var picker = null;
    me.iDriveSettings = 0;

    this.UPLOAD_TYPE_FILE = 1;
    this.UPLOAD_TYPE_IMAGE = 2;
    this.UPLOAD_TYPE_PREVIEW = 3;
    this.UPLOAD_TYPE_SIGNATURE = 4;
    // common variables

    var oTimer = 0;

    this.setCredentials = function()
    {
        var sUrl = "social/googleAuth!getGoogleCredentials.do";
        con.sendPostRequest(sUrl, null, null,"clDrivePicker.arhCredential");
    };
    this.arhCredential = function(sRes)
    {
        if(sRes!=null)
        {
            sRes = eval(sRes);
            me.iClient_Id=sRes[0];
            me.sApiKey=sRes[1];
        }
    }

    this.launchGoogleDrivePicker = function (elemImgGoogle, elemUpload, iUploadType) {

        me.setCredentials();
        me.elemImgGoogle = elemImgGoogle;
        me.elemUpload = document.getElementById(elemUpload);
        me.iUploadType = iUploadType;
        me.pickerDialog();
        me.getOAuthSettings();
        /*  var sUrl = "social/googleAuth!getDriveCredentials.do";
         con.sendPostRequest(sUrl, null, null,"clDrivePicker.arhDriveResp");*/


    };

    this.pickerDialog = function (sAccessToken) {
        //alert(sAccessToken)
        picker = new FilePicker({
            apiKey: me.sApiKey,
            clientId: me.iClient_Id,
            buttonEl: me.elemImgGoogle,
            sCallBack: me.gPickerCallBack,
            srcUpload: me.elemUpload,
            accessToken: null,
            iUploadType: me.iUploadType
            //sAuthenticateCallBack :clDrivePicker.authenticateUser
        });
    };
    me.bDuplicate = false;
    this.authenticateUser = function (sAccessToken) {
        var sUrl = "social/googleAuth!getDriveMailExists.do?accessToken=" + sAccessToken;
        con.sendPostRequest(sUrl, null, null, "clDrivePicker.duplicateMail");
    };

    this.duplicateMail = function (sMessage) {
        if (sMessage != null) {
            var sUserName = sMessage.substring(0, sMessage.lastIndexOf(":")), sMailId;
            sMailId = sMessage.substring(sMessage.lastIndexOf(":") + 1);
            me.bDuplicate = true;
            //msg.showMessage(0, "'" + sMailId + "' already authenticated with user '" + sUserName + "'");
        }

    };
    this.getFileName = function (data, id1) {

        var sSrc = null;
        if (data[google.picker.Response.ACTION] == google.picker.Action.bg) {
            var sUrl = "social/googleAuth!saveSocialAuthInfo.do?appType=" + Constants.IGOOGLE_APPTYPES.DRIVE + "&token=" + gapi.auth.getToken().access_token;
            con.sendPostRequest(sUrl, null, null, null);
        }
        else if (data[google.picker.Response.ACTION] == google.picker.Action.PICKED) {

            var file = data[google.picker.Response.DOCUMENTS][0],
                id = file[google.picker.Document.ID],
            //size = file[google.picker.Document.fileSize],
                request = gapi.client.drive.files.get({fileId: id});
            var sUrl1 = "social/googleAuth!createPremission.do?fileId="+id;
            con.sendPostRequest(sUrl1);

            var sFileId = picker.buttonEl.id;

            sFileId = sFileId.substring(sFileId.indexOf("_") + 1);
            if (document.getElementById("preview_" + sFileId) != null) {
                if (!file.name.match(/.(jpg|jpeg|png|gif)$/i)) {
                    msg.showMessage(0, "Invalid image file");
                    return false;
                }
            }
            if(document.getElementById("uploadFileName_" + sFileId)!=null){
            document.getElementById("lblUpload_" + sFileId).parentNode.parentNode.style.display = "none";
            document.getElementById("uploadFileName_" + sFileId).parentNode.parentNode.style.display = "";
            document.getElementById("uploadFileName_" + sFileId).value = "gdrive:" + id + "|" + file.name;
            }
            sSrc = file.name;
            var sUploadId= file.name;
            //sSrc = "https://drive.google.com/uc?authuser=0&id=" + id;
            sSrc = "https://drive.google.com/uc?id=" + id;

            if (me.iDriveSettings == 1 && document.getElementById("sheetIndex") == null) {
                var objAch = null, objFile = document.getElementById("fileName_" + sFileId);

                if (cross.getChildren(objFile).length == 0) {
                    objAch = document.createElement("a");
                    objFile.appendChild(objAch);
                    objAch.className = "txtOverflow";
                }
                else
                    objAch = cross.getFirstElement(objFile.childNodes);
                sSrc  = sSrc+"&export=download";
                objAch.setAttribute("href", sSrc);
                cross.setInnerText(objAch, sUploadId);
                objAch.setAttribute("title", sUploadId);
                //sSrc = util.encodeURI(sSrc);

                //sUploadId =  "id="+id+":"+file.name;
                //sUploadId = "gdrive:"+id+"|"+file.name;
            }
            else
                document.getElementById("fileName_" + sFileId).innerHTML = file.name;
            sUploadId = "gdrive:"+id+"|"+file.name;
            if(document.getElementById("preview_" + sFileId) != null)
                document.getElementById("preview_"+sFileId).src = sSrc;
            var arrData = [];
            arrData[0] = picker.srcUpload.id;
            arrData[1] = file.name;
            arrData[2] = id;
            arrData[3] = file.sizeBytes;
            arrData[4] = sUploadId;
            //arrData[4] = gapi.auth.getToken().access_token;
            return arrData;

        }

    };
    this.callBackPicker = function () {
        me.launchGoogleDrivePicker(me.elemImgGoogle, me.elemUpload);
    };
    var arrProperties=null;
    this.gPickerCallBack = function(data)
    {
        var arrResponse = me.getFileName(data);//respinse:0 : filedid
        if(arrResponse!=null)
        {
            //var sFileIdName = arrResponse[4]+"_drive:"+arrResponse[2]+":"+arrResponse[1];
            var sFileIdName = "drive:"+arrResponse[2]+"|"+arrResponse[1];
            var arrProperties=clHTML5Upload.getPropertiesArray(arrResponse[0]);
            if(arrProperties == null || arrProperties == undefined)
                arrProperties = clHTML5Upload.getPropertiesArray(clHTML5Upload.getBaseId(arrResponse[0]));
            var sUrl=arrProperties.sUrl;
            var  vFD = new FormData();
            sUrl+="&uploadFileName="+sFileIdName;
            // create XMLHttpRequest object, adding few event listeners, and POSTing our data
            var oXHR = new XMLHttpRequest();
            //oXHR.upload.addEventListener('progress', uploadProgress, false);
            //oXHR.addEventListener('load', uploadFinish, false);
            oXHR.addEventListener('error', uploadError, false);
            oXHR.addEventListener('abort', uploadAbort, false);
            oXHR.onreadystatechange = function (e)
            {
                if (oXHR.readyState == 4)
                {
                    if(oXHR.status == 200)
                        uploadFinish(oXHR.responseText);
                    else{}
                        //alert("Error loading page\n");
                }
            };

            oXHR.open('POST', sUrl);
            oXHR.send(vFD);

            //fieldid
            var sHiddenFldName = clUpload.getHiddenName(arrResponse[0],arrProperties.sHiddenName),sImgSrc=null;

            if(arrProperties.iType==me.UPLOAD_TYPE_IMAGE || arrProperties.iType==me.UPLOAD_TYPE_PREVIEW )//todo
                sImgSrc="https://drive.google.com/uc?id="+arrResponse[2];
            sFileIdName = arrResponse[1];
            //fileid
            //clUpload.invokeCallback(arrProperties.sOnUploadDone,sFileIdName,sImgSrc,arrResponse[0],null,sFileIdName,arrResponse[3]);
            if(arrProperties.isAllowMultiUploads) {
                clHTML5Upload.driveMultiAttachRespHandler(arrResponse[1],arrResponse[0]);
            }
            else {
                document.getElementById(sHiddenFldName).value = arrResponse[4];//fileid
                clUpload.invokeCallback(arrProperties.sOnUploadDone, sFileIdName, sImgSrc, arrResponse[0], null, sFileIdName, arrResponse[3]);
            }
        }
    }
    function uploadFinish(sResponse)
    {
        // upload successfully finished
        var oUploadResponse = document.getElementById('upload_response');
        if(oUploadResponse)
        {
            oUploadResponse.innerHTML = 'Done';
            if (document.getElementById('speed'))
                document.getElementById('speed').innerHTML = "&nbsp;";

//        document.getElementById('elapsed').innerHTML = "&nbsp;";
//        document.getElementById('remaining').innerHTML="&nbsp;";

            clHTML5Upload.iElapsedTime = 0;
            clearInterval(oTimer);

            var objTR = document.getElementById(clHTML5Upload.sNewUploadFldId ? clHTML5Upload.sNewUploadFldId : clHTML5Upload.sUploadFieldId).parentNode.parentNode;
            objTR.style.display = "none";
            objTR.previousSibling.style.display = "";
            clUpload.onUploadDone(clHTML5Upload.sNewUploadFldId ? clHTML5Upload.sNewUploadFldId : clHTML5Upload.sUploadFieldId, clHTML5Upload.sUploadFieldId, sResponse);


            setTimeout(function () {
                var dvProgress = document.getElementById("progress_info");
                dvProgress.style.display = "none";
                document.body.appendChild(dvProgress.parentNode.removeChild(dvProgress));
                if (clHTML5Upload.sUploadFieldId) {
                    //document.getElementById("lblUpload_"+sUploadFieldId).style.display="none";
                    clHTML5Upload.sUploadFieldId = null;
                    clHTML5Upload.sFileName = null;
                }

            }, 10);
        }
    }
    function uploadError(e)
    { // upload error
        document.getElementById('error2').style.display = 'block';
        clearInterval(oTimer);
    }

    function uploadAbort(e)
    { // upload abort
        document.getElementById('abort').style.display = 'block';
        clearInterval(oTimer);
    }
    /* this.arhDriveResp = function (sResponse)
     {
     if(sResponse!="null" && sResponse.length > 0)
     {
     clDrivePicker.pickerDialog(sResponse);
     }
     else
     {
     clDrivePicker.onClkAuthenticateDrive();
     }

     };
     this.onClkAuthenticateDrive =function()
     {

     */
    /* var iClient_Id = "873746576654-0cs7a7c2ur7f82kao1u4esbs76gbnscq.apps.googleusercontent.com";
     var SCOPE = ' https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/drive';
     var iAppType= Constants.IGOOGLE_APPTYPES.DRIVE;*/
    /*
     clDrivePicker.launchGoogleDrivePicker(me.elemImgGoogle,me.elemUpload);
     //var sUrl = "https://accounts.google.com/o/oauth2/auth?response_type=code&client_id="+iClient_Id+"&scope="+SCOPE+"&access_type=offline&approval_prompt=force&state="+util.encodeURI("{ 'appType' : "+iAppType+",'drivePicker':1}");
     //var win = window.open(sUrl,'Authorization','screenX=480,screenY=150,width=450,height=500,scrollbars=yes,resizable=yes');
     };*/
    this.getOAuthSettings = function () {
        var sUrl = "social/googleAuth!getDriveSyncSettings.do?appType=" + Constants.IGOOGLE_APPTYPES.DRIVE + "&isAjax=true";
        con.sendPostRequest(sUrl, null, null, "clDrivePicker.arhDriveSettings");
    }
    this.arhDriveSettings = function (sRes) {
        if (sRes) {
            me.iDriveSettings = parseInt(sRes==0?1:0);
        }

    }


}
